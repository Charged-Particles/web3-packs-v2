{
  "address": "0x6Cf8b7D14855A455C21AE46bb8C1060F28748D2d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proton",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "chargedParticles",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "chargedState",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bundlerId",
          "type": "bytes32"
        }
      ],
      "name": "BundlerNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedToExitWeth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundingFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "name": "InsufficientForFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedTokens",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MissingLiquidityUUID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeAssetTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoBundlesInPack",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerOrApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullReceiver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "UnsucessfulSwap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "BalanceClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "BundledERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "BundledERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bundlerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "bundlerId",
          "type": "bytes32"
        }
      ],
      "name": "BundlerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "chargedParticles",
          "type": "address"
        }
      ],
      "name": "ChargedParticlesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "chargedState",
          "type": "address"
        }
      ],
      "name": "ChargedStateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "packType",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        }
      ],
      "name": "PackBundled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "PackUnbundled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "ProtocolFeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proton",
          "type": "address"
        }
      ],
      "name": "ProtonSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "Web3PacksTreasurySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC1155",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckEther",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "_bundlersById",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_chargedParticles",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_chargedState",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_cpBasketManager",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_cpWalletManager",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_proton",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "bundlerId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "percentBasisPoints",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.BundleChunk[]",
          "name": "bundleChunks",
          "type": "tuple[]"
        },
        {
          "internalType": "address[]",
          "name": "referrals",
          "type": "address[]"
        },
        {
          "internalType": "string",
          "name": "tokenMetaUri",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ERC20Timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ERC721Timelock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.LockState",
          "name": "lockState",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "packType",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        }
      ],
      "name": "bundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "claimReferralRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPackBalances",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftTokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.TokenAmount[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPackPriceEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "packPriceEth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getReferralRewardsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bundlerId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "bundlerAddress",
          "type": "address"
        }
      ],
      "name": "registerBundlerId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "chargedParticles",
          "type": "address"
        }
      ],
      "name": "setChargedParticles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "chargedState",
          "type": "address"
        }
      ],
      "name": "setChargedState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proton",
          "type": "address"
        }
      ],
      "name": "setProton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellAll",
          "type": "bool"
        }
      ],
      "name": "unbundle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b15ec3847690adca4d4beafcd65bb31eb5dcecb3141b9b24b40cadfaf0d8024",
  "receipt": {
    "to": null,
    "from": "0x6d46b37708dA7Ed4E5C4509495768Fecd3D17C01",
    "contractAddress": "0x6Cf8b7D14855A455C21AE46bb8C1060F28748D2d",
    "transactionIndex": 0,
    "gasUsed": "3298550",
    "logsBloom": "0x
    "blockHash": "0xab6522b66ffbd89f4dab17195feb2b77871e714e640059b2178b66f4b7e3cbc6",
    "transactionHash": "0x4b15ec3847690adca4d4beafcd65bb31eb5dcecb3141b9b24b40cadfaf0d8024",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 49604149,
        "transactionHash": "0x4b15ec3847690adca4d4beafcd65bb31eb5dcecb3141b9b24b40cadfaf0d8024",
        "address": "0x6Cf8b7D14855A455C21AE46bb8C1060F28748D2d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006d46b37708da7ed4e5c4509495768fecd3d17c01"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xab6522b66ffbd89f4dab17195feb2b77871e714e640059b2178b66f4b7e3cbc6"
      }
    ],
    "blockNumber": 49604149,
    "cumulativeGasUsed": "3298550",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",
    "0xE0dbEc1fE9c4148c85815abE93D496F5f909EB65",
    "0x4a7b80e418454a21A49885b009d51f0d0A6Ed77A",
    "0xc42De19eB6eB8fa3eCCcA9Ad0F2E4795c468310f"
  ],
  "numDeployments": 1,
  "solcInputHash": "404196d31ddc393f76d325a414dddac2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chargedParticles\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chargedState\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"}],\"name\":\"BundlerNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToExitWeth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundingFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"InsufficientForFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MissingLiquidityUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeAssetTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBundlesInPack\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"UnsucessfulSwap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"BundledERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"name\":\"BundledERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bundlerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"}],\"name\":\"BundlerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"chargedParticles\",\"type\":\"address\"}],\"name\":\"ChargedParticlesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"chargedState\",\"type\":\"address\"}],\"name\":\"ChargedStateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"packType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"}],\"name\":\"PackBundled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"PackUnbundled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proton\",\"type\":\"address\"}],\"name\":\"ProtonSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"Web3PacksTreasurySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckEther\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_bundlersById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chargedParticles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chargedState\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_cpBasketManager\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_cpWalletManager\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"percentBasisPoints\",\"type\":\"uint256\"}],\"internalType\":\"struct IWeb3PacksDefs.BundleChunk[]\",\"name\":\"bundleChunks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"referrals\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"tokenMetaUri\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ERC20Timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ERC721Timelock\",\"type\":\"uint256\"}],\"internalType\":\"struct IWeb3PacksDefs.LockState\",\"name\":\"lockState\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"packType\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"}],\"name\":\"bundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"claimReferralRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPackBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IWeb3PacksDefs.TokenAmount[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPackPriceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"packPriceEth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getReferralRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bundlerAddress\",\"type\":\"address\"}],\"name\":\"registerBundlerId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chargedParticles\",\"type\":\"address\"}],\"name\":\"setChargedParticles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chargedState\",\"type\":\"address\"}],\"name\":\"setChargedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proton\",\"type\":\"address\"}],\"name\":\"setProton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellAll\",\"type\":\"bool\"}],\"name\":\"unbundle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setChargedParticles(address)\":{\"details\":\"Setup the ChargedParticles Interface\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3PacksV2.sol\":\"Web3PacksV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0xfc10758fd8dba790c39468dccd358cb7cef06ae7c4781832cc7aa76f91f167e6\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/Web3PacksV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Web3PacksV2.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n//\\n//  __    __     _    _____   ___           _                   ____\\n// / / /\\\\ \\\\ \\\\___| |__|___ /  / _ \\\\__ _  ___| | _____     /\\\\   /\\\\___ \\\\\\n// \\\\ \\\\/  \\\\/ / _ \\\\ '_ \\\\ |_ \\\\ / /_)/ _` |/ __| |/ / __|____\\\\ \\\\ / / __) |\\n//  \\\\  /\\\\  /  __/ |_) |__) / ___/ (_| | (__|   <\\\\__ \\\\_____\\\\ V / / __/\\n//   \\\\/  \\\\/ \\\\___|_.__/____/\\\\/    \\\\__,_|\\\\___|_|\\\\_\\\\___/      \\\\_/ |_____|\\n//\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"./lib/BlackholePrevention.sol\\\";\\nimport \\\"./interfaces/IWeb3Packs.sol\\\";\\nimport \\\"./interfaces/IWeb3PacksDefs.sol\\\";\\nimport \\\"./interfaces/IWeb3PacksBundler.sol\\\";\\nimport \\\"./interfaces/IChargedState.sol\\\";\\nimport \\\"./interfaces/IChargedParticles.sol\\\";\\nimport \\\"./interfaces/IBaseProton.sol\\\";\\n\\ncontract Web3PacksV2 is\\n  IWeb3Packs,\\n  Ownable,\\n  Pausable,\\n  BlackholePrevention,\\n  ReentrancyGuard\\n{\\n  using Address for address payable;\\n\\n  event ChargedParticlesSet(address indexed chargedParticles);\\n  event ChargedStateSet(address indexed chargedState);\\n  event ProtonSet(address indexed proton);\\n  event PackBundled(uint256 indexed tokenId, address indexed receiver, bytes32 packType, uint256 ethPackPrice);\\n  event PackUnbundled(uint256 indexed tokenId, address indexed receiver, uint256 ethAmount);\\n  event ProtocolFeeSet(uint256 fee);\\n  event Web3PacksTreasurySet(address indexed treasury);\\n  event BundlerRegistered(address indexed bundlerAddress, bytes32 bundlerId);\\n  event BalanceClaimed(address indexed account, uint256 balance);\\n\\n  uint256 private constant BASIS_POINTS = 10000;\\n\\n  address public _weth;\\n  address public _proton;\\n  address public _chargedParticles;\\n  address public _chargedState;\\n  address payable internal _treasury;\\n  uint256 public _protocolFee;\\n\\n  mapping (bytes32 => address) public _bundlersById;\\n  mapping (uint256 => uint256) internal _packPriceByPackId;\\n  mapping (uint256 => bytes32[]) internal _bundlesByPackId;\\n  mapping (address => uint256) internal _referrerBalance;\\n\\n  // Charged Particles Wallet Managers\\n  string public _cpWalletManager = \\\"generic.B\\\";\\n  string public _cpBasketManager = \\\"generic.B\\\";\\n\\n  constructor(\\n    address weth,\\n    address proton,\\n    address chargedParticles,\\n    address chargedState\\n  ) {\\n    _weth = weth;\\n    _proton = proton;\\n    _chargedParticles = chargedParticles;\\n    _chargedState = chargedState;\\n  }\\n\\n\\n  /***********************************|\\n  |               Public              |\\n  |__________________________________*/\\n\\n  function bundle(\\n    IWeb3PacksDefs.BundleChunk[] calldata bundleChunks,\\n    address[] calldata referrals,\\n    string calldata tokenMetaUri,\\n    IWeb3PacksDefs.LockState calldata lockState,\\n    bytes32 packType,\\n    uint256 ethPackPrice\\n  )\\n    external\\n    override\\n    payable\\n    whenNotPaused\\n    nonReentrant\\n    returns(uint256 tokenId)\\n  {\\n    _collectFees(ethPackPrice);\\n    uint256 rewards = _calculateReferralRewards(ethPackPrice, referrals);\\n    tokenId = _bundle(\\n      bundleChunks,\\n      tokenMetaUri,\\n      lockState,\\n      ethPackPrice - rewards\\n    );\\n    emit PackBundled(tokenId, _msgSender(), packType, ethPackPrice);\\n  }\\n\\n  function unbundle(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 tokenId,\\n    bool sellAll\\n  )\\n    external\\n    override\\n    payable\\n    whenNotPaused\\n    nonReentrant\\n  {\\n    _collectFees(0);\\n    uint256 ethAmount = _unbundle(\\n      receiver,\\n      tokenAddress,\\n      tokenId,\\n      sellAll\\n    );\\n    emit PackUnbundled(tokenId, receiver, ethAmount);\\n  }\\n\\n  // NOTE: Call via \\\"staticCall\\\" for Balances\\n  function getPackBalances(address tokenAddress, uint256 tokenId) public override returns (TokenAmount[] memory) {\\n    return _getPackBalances(tokenAddress, tokenId);\\n  }\\n\\n  function getPackPriceEth(uint256 tokenId) public view override returns (uint256 packPriceEth) {\\n    packPriceEth = _packPriceByPackId[tokenId];\\n  }\\n\\n  function getReferralRewardsOf(address account) public view override returns (uint256 balance) {\\n    balance = _referrerBalance[account];\\n  }\\n\\n  function claimReferralRewards(address payable account) public override nonReentrant {\\n    uint256 balance = _referrerBalance[account];\\n    if (address(this).balance >= balance) {\\n      account.sendValue(balance);\\n      emit BalanceClaimed(account, balance);\\n    }\\n  }\\n\\n\\n  /***********************************|\\n  |     Private Bundle Functions      |\\n  |__________________________________*/\\n\\n  function _bundle(\\n    IWeb3PacksDefs.BundleChunk[] calldata bundleChunks,\\n    string calldata tokenMetaUri,\\n    IWeb3PacksDefs.LockState calldata lockState,\\n    uint256 ethPackPrice\\n  )\\n    internal\\n    returns(uint256 tokenId)\\n  {\\n    IWeb3PacksBundler bundler;\\n\\n    // Mint Web3Pack NFT\\n    tokenId = _createBasicProton(tokenMetaUri);\\n\\n    // Wrap ETH for WETH\\n    IWETH(_weth).deposit{value: ethPackPrice}();\\n    uint256 wethTotal = IERC20(_weth).balanceOf(address(this));\\n    uint256 chunkWeth;\\n\\n    // Returned from Each Bundle:\\n    address tokenAddress;\\n    uint256 amountOut;\\n    uint256 nftTokenId;\\n\\n    // Iterate over each Bundle\\n    bytes32[] memory packBundlerIds = new bytes32[](bundleChunks.length);\\n    for (uint256 i; i < bundleChunks.length; i++) {\\n      IWeb3PacksDefs.BundleChunk memory chunk = bundleChunks[i];\\n      packBundlerIds[i] = chunk.bundlerId; // track bundlerIds per pack\\n\\n      // Ensure Bundler is Registered\\n      if (_bundlersById[chunk.bundlerId] == address(0)) {\\n        revert BundlerNotRegistered(chunk.bundlerId);\\n      }\\n      bundler = IWeb3PacksBundler(_bundlersById[chunk.bundlerId]);\\n\\n      // Calculate Percent\\n      chunkWeth = (wethTotal * chunk.percentBasisPoints) / BASIS_POINTS;\\n\\n      // Send WETH to Bundler\\n      TransferHelper.safeTransfer(_weth, address(bundler), chunkWeth);\\n\\n      // Receive Assets from Bundler\\n      //  If Liquidity is ERC20: nftTokenId == 0\\n      //  If Liquidity is ERC721: nftTokenId > 0\\n      (tokenAddress, amountOut, nftTokenId) = bundler.bundle(tokenId, _msgSender());\\n\\n      // Deposit the Assets into the Web3Packs NFT\\n      if (nftTokenId == 0) {\\n        _energize(tokenId, tokenAddress, amountOut);\\n        emit BundledERC20(tokenAddress, amountOut);\\n      } else {\\n        _bond(tokenId, tokenAddress, nftTokenId);\\n        emit BundledERC721(tokenAddress, nftTokenId);\\n      }\\n    }\\n\\n    // Track Pack Data\\n    _bundlesByPackId[tokenId] = packBundlerIds;\\n    _packPriceByPackId[tokenId] = ethPackPrice;\\n\\n    // Set the Timelock State\\n    _lock(lockState, tokenId);\\n\\n    // Transfer the Web3Packs NFT to the Buyer\\n    IBaseProton(_proton).safeTransferFrom(address(this), _msgSender(), tokenId);\\n  }\\n\\n  function _unbundle(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 packTokenId,\\n    bool sellAll\\n  )\\n    internal\\n    returns (uint ethAmount)\\n  {\\n    IWeb3PacksBundler bundler;\\n\\n    // Verify Ownership\\n    address owner = IERC721(tokenAddress).ownerOf(packTokenId);\\n    if (_msgSender() != owner) {\\n      revert NotOwnerOrApproved();\\n    }\\n\\n    // Ensure Pack has Bundles\\n    if (_bundlesByPackId[packTokenId].length == 0) {\\n      revert NoBundlesInPack();\\n    }\\n\\n    address assetTokenAddress;\\n    uint256 assetTokenId;\\n    for (uint i; i < _bundlesByPackId[packTokenId].length; i++) {\\n      bytes32 bundlerId = _bundlesByPackId[packTokenId][i];\\n      if (_bundlersById[bundlerId] == address(0)) {\\n        // skip unregistered bundlers to prevent breaking unbundle\\n        continue;\\n      }\\n      bundler = IWeb3PacksBundler(_bundlersById[bundlerId]);\\n\\n      // Pull Assets from NFT and send to Bundler for Unbundling\\n      (assetTokenAddress, assetTokenId) = bundler.getLiquidityToken(packTokenId);\\n      if (assetTokenId == 0) {\\n        _release(_bundlersById[bundlerId], packTokenId, assetTokenAddress);\\n      } else {\\n        _breakBond(_bundlersById[bundlerId], packTokenId, assetTokenAddress, assetTokenId);\\n      }\\n\\n      // Unbundle current asset\\n      ethAmount += bundler.unbundle(receiver, packTokenId, sellAll);\\n    }\\n\\n    // Clear Bundles for Pack\\n    delete _bundlesByPackId[packTokenId];\\n    delete _packPriceByPackId[packTokenId];\\n  }\\n\\n  function _getPackBalances(address tokenAddress, uint256 tokenId) internal returns (TokenAmount[] memory) {\\n    IWeb3PacksBundler bundler;\\n\\n    // Ensure Pack has Bundles\\n    if (_bundlesByPackId[tokenId].length == 0) {\\n      revert NoBundlesInPack();\\n    }\\n\\n    uint256 bundleCount = _bundlesByPackId[tokenId].length;\\n    TokenAmount[] memory tokenBalances = new TokenAmount[](bundleCount);\\n    for (uint i; i < bundleCount; i++) {\\n      bytes32 bundlerId = _bundlesByPackId[tokenId][i];\\n      if (_bundlersById[bundlerId] == address(0)) {\\n        // skip unregistered bundlers\\n        continue;\\n      }\\n\\n      // Get Liquidity Token from Bundler\\n      bundler = IWeb3PacksBundler(_bundlersById[bundlerId]);\\n      (address assetTokenAddress, uint256 assetTokenId) = bundler.getLiquidityToken(tokenId);\\n      bool isNft = (assetTokenId > 0);\\n\\n      // Get Balance of NFT from Charged Particles\\n      uint256 assetBalance = isNft ? 1 : _getMass(tokenAddress, tokenId, assetTokenAddress);\\n\\n      // Track Token Balances\\n      tokenBalances[i] = TokenAmount({\\n        tokenAddress: assetTokenAddress,\\n        balance: assetBalance,\\n        nftTokenId: assetTokenId\\n      });\\n    }\\n    return tokenBalances;\\n  }\\n\\n  /***********************************|\\n  |     Private Charged Functions     |\\n  |__________________________________*/\\n\\n  function _createBasicProton(\\n    string memory tokenMetadataUri\\n  )\\n    internal\\n    returns (uint256 mintedTokenId)\\n  {\\n    // Mint Web3Packs NFT (Charged-Particles ProtonC)\\n    mintedTokenId = IBaseProton(_proton).createBasicProton(\\n      address(this),\\n      address(this),\\n      tokenMetadataUri\\n    );\\n  }\\n\\n  function _energize(\\n    uint256 packTokenId,\\n    address assetTokenAddress,\\n    uint256 assetTokenAmount\\n  )\\n    internal\\n  {\\n    if (assetTokenAmount == 0) {\\n      assetTokenAmount = IERC20(assetTokenAddress).balanceOf(address(this));\\n    }\\n\\n    TransferHelper.safeApprove(\\n      assetTokenAddress,\\n      address(_chargedParticles),\\n      assetTokenAmount\\n    );\\n\\n    IChargedParticles(_chargedParticles).energizeParticle(\\n      _proton,\\n      packTokenId,\\n      _cpWalletManager,\\n      assetTokenAddress,\\n      assetTokenAmount,\\n      address(this)\\n    );\\n  }\\n\\n  function _release(\\n    address receiver,\\n    uint256 packTokenId,\\n    address assetTokenAddress\\n  )\\n    internal\\n  {\\n    IChargedParticles(_chargedParticles).releaseParticle(\\n      receiver,\\n      _proton,\\n      packTokenId,\\n      _cpWalletManager,\\n      assetTokenAddress\\n    );\\n  }\\n\\n  function _bond(\\n    uint256 packTokenId,\\n    address nftTokenAddress,\\n    uint256 nftTokenId\\n  )\\n    internal\\n  {\\n    IERC721(nftTokenAddress).setApprovalForAll(_chargedParticles, true);\\n\\n    IChargedParticles(_chargedParticles).covalentBond(\\n      _proton,\\n      packTokenId,\\n      _cpBasketManager,\\n      nftTokenAddress,\\n      nftTokenId,\\n      1\\n    );\\n  }\\n\\n  function _breakBond(\\n    address receiver,\\n    uint256 packTokenId,\\n    address nftTokenAddress,\\n    uint256 nftTokenId\\n  )\\n    internal\\n  {\\n    IChargedParticles(_chargedParticles).breakCovalentBond(\\n      receiver,\\n      _proton,\\n      packTokenId,\\n      _cpBasketManager,\\n      nftTokenAddress,\\n      nftTokenId,\\n      1\\n    );\\n  }\\n\\n  function _lock(LockState calldata lockState, uint256 tokenId) internal {\\n    if(lockState.ERC20Timelock > 0) {\\n      IChargedState(_chargedState).setReleaseTimelock(\\n        _proton,\\n        tokenId,\\n        lockState.ERC20Timelock\\n      );\\n    }\\n\\n    if(lockState.ERC721Timelock > 0) {\\n      IChargedState(_chargedState).setBreakBondTimelock(\\n        _proton,\\n        tokenId,\\n        lockState.ERC721Timelock\\n      );\\n    }\\n  }\\n\\n  function _getMass(address tokenAddress, uint256 tokenId, address assetTokenAddress) internal returns (uint256 assetMass) {\\n    /// @dev \\\"baseParticleMass\\\" is not a \\\"view\\\" function; call via \\\"callStatic\\\"\\n    assetMass = IChargedParticles(_chargedParticles)\\n      .baseParticleMass(tokenAddress, tokenId, _cpWalletManager, assetTokenAddress);\\n  }\\n\\n  function _collectFees(uint256 excludedAmount) internal {\\n    // Track Collected Fees\\n    if (_protocolFee > 0 && msg.value < (_protocolFee + excludedAmount)) {\\n      revert InsufficientForFee(msg.value, excludedAmount, _protocolFee);\\n    }\\n    uint256 fees = msg.value - excludedAmount;\\n    _treasury.sendValue(fees);\\n  }\\n\\n  function _calculateReferralRewards(\\n    uint256 ethPackPrice,\\n    address[] memory referrals\\n  ) internal returns (uint256 fee) {\\n    uint256 referralAmountTotal = ((ethPackPrice * 330) / BASIS_POINTS);  // 3.3%\\n\\n    // Calculate Referral Amounts and Distribute\\n    if (referrals.length > 0 && referrals[0] != address(0)) {\\n      // Remove Referral Value from Funding Value\\n      fee = referralAmountTotal;\\n\\n      if (referrals.length > 1 && referrals[1] != address(0)) {\\n        if (referrals.length > 2 && referrals[2] != address(0)) {\\n          _referrerBalance[referrals[0]] += ((ethPackPrice * 30) / BASIS_POINTS);  // 0.3%\\n          _referrerBalance[referrals[1]] += ((ethPackPrice * 30) / BASIS_POINTS);  // 0.3%\\n          _referrerBalance[referrals[2]] += ((ethPackPrice * 270) / BASIS_POINTS); // 2.7%\\n        } else {\\n          _referrerBalance[referrals[0]] += ((ethPackPrice * 30) / BASIS_POINTS);  // 0.3%\\n          _referrerBalance[referrals[1]] += ((ethPackPrice * 300) / BASIS_POINTS);  // 3.0%\\n        }\\n      } else {\\n        _referrerBalance[referrals[0]] += referralAmountTotal;  // 3.3%\\n      }\\n    }\\n  }\\n\\n  /***********************************|\\n  |          Only Admin/DAO           |\\n  |__________________________________*/\\n\\n  /**\\n    * @dev Setup the ChargedParticles Interface\\n  */\\n  function setChargedParticles(address chargedParticles) external onlyOwner {\\n    require(chargedParticles != address(0), \\\"Invalid address for chargedParticles\\\");\\n    _chargedParticles = chargedParticles;\\n    emit ChargedParticlesSet(chargedParticles);\\n  }\\n\\n  function setChargedState(address chargedState) external onlyOwner {\\n    require(chargedState != address(0), \\\"Invalid address for chargedState\\\");\\n    _chargedState = chargedState;\\n    emit ChargedStateSet(chargedState);\\n  }\\n\\n  function setProton(address proton) external onlyOwner {\\n    require(proton != address(0), \\\"Invalid address for proton\\\");\\n    _proton = proton;\\n    emit ProtonSet(proton);\\n  }\\n\\n  function setTreasury(address payable treasury) external onlyOwner {\\n    require(treasury != address(0), \\\"Invalid address for treasury\\\");\\n    _treasury = treasury;\\n    emit Web3PacksTreasurySet(treasury);\\n  }\\n\\n  function setProtocolFee(uint256 fee) external onlyOwner {\\n    _protocolFee = fee;\\n    emit ProtocolFeeSet(fee);\\n  }\\n\\n  function registerBundlerId(bytes32 bundlerId, address bundlerAddress) external onlyOwner {\\n    _bundlersById[bundlerId] = bundlerAddress;\\n    emit BundlerRegistered(bundlerAddress, bundlerId);\\n  }\\n\\n  function pause() public onlyOwner {\\n    _pause();\\n  }\\n\\n  function unpause() public onlyOwner {\\n    _unpause();\\n  }\\n\\n\\n  /***********************************|\\n  |          Only Admin/DAO           |\\n  |      (blackhole prevention)       |\\n  |__________________________________*/\\n\\n  function withdrawEther(address payable receiver, uint256 amount) external virtual onlyOwner {\\n    _withdrawEther(receiver, amount);\\n  }\\n\\n  function withdrawErc20(address payable receiver, address tokenAddress, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC20(receiver, tokenAddress, amount);\\n  }\\n\\n  function withdrawERC721(address payable receiver, address tokenAddress, uint256 tokenId) external virtual onlyOwner {\\n    _withdrawERC721(receiver, tokenAddress, tokenId);\\n  }\\n\\n  function withdrawERC1155(address payable receiver, address tokenAddress, uint256 tokenId, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC1155(receiver, tokenAddress, tokenId, amount);\\n  }\\n\\n  function onERC721Received(\\n    address,\\n    address,\\n    uint256,\\n    bytes calldata\\n  ) external pure returns(bytes4) {\\n    return this.onERC721Received.selector;\\n  }\\n}\\n\",\"keccak256\":\"0x71a1ea161423c9ca8086ef0d3da5e984997bfe9ad6d945fc38e64f2b679c3e9c\",\"license\":\"MIT\"},\"contracts/interfaces/IBaseProton.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IBaseProton.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\ninterface IBaseProton {\\n  function createProton(\\n    address creator,\\n    address receiver,\\n    string memory tokenMetaUri\\n  ) external returns (uint256 newTokenId);\\n\\n  function createBasicProton(\\n    address creator,\\n    address receiver,\\n    string memory tokenMetaUri\\n  )\\n    external\\n    payable\\n    returns (uint256 newTokenId);\\n\\n  function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n}\",\"keccak256\":\"0x7548b7647b5407bb55566f44c95cace43cf38fd984caecb6e864d735ae4000a3\",\"license\":\"MIT\"},\"contracts/interfaces/IChargedParticles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IChargedParticles.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @notice Interface for Charged Particles\\n */\\ninterface IChargedParticles {\\n    /***********************************|\\n  |             Public API            |\\n  |__________________________________*/\\n\\n    function getStateAddress() external view returns (address stateAddress);\\n\\n    function getSettingsAddress()\\n        external\\n        view\\n        returns (address settingsAddress);\\n\\n    function getManagersAddress()\\n        external\\n        view\\n        returns (address managersAddress);\\n\\n    function getFeesForDeposit(uint256 assetAmount)\\n        external\\n        view\\n        returns (uint256 protocolFee);\\n\\n    function baseParticleMass(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256);\\n\\n    function currentParticleCharge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256);\\n\\n    function currentParticleKinetics(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256);\\n\\n    function currentParticleCovalentBonds(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata basketManagerId\\n    ) external view returns (uint256);\\n\\n    /***********************************|\\n  |        Particle Mechanics         |\\n  |__________________________________*/\\n\\n    function energizeParticle(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount,\\n        address referrer\\n    ) external returns (uint256 yieldTokensAmount);\\n\\n    function dischargeParticle(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function dischargeParticleAmount(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function dischargeParticleForCreator(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount\\n    ) external returns (uint256 receiverAmount);\\n\\n    function releaseParticle(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function releaseParticleAmount(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function covalentBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata basketManagerId,\\n        address nftTokenAddress,\\n        uint256 nftTokenId,\\n        uint256 nftTokenAmount\\n    ) external returns (bool success);\\n\\n    function breakCovalentBond(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata basketManagerId,\\n        address nftTokenAddress,\\n        uint256 nftTokenId,\\n        uint256 nftTokenAmount\\n    ) external returns (bool success);\\n\\n    /***********************************|\\n  |          Particle Events          |\\n  |__________________________________*/\\n\\n    event Initialized(address indexed initiator);\\n    event ControllerSet(address indexed controllerAddress, string controllerId);\\n    event DepositFeeSet(uint256 depositFee);\\n    event ProtocolFeesCollected(\\n        address indexed assetToken,\\n        uint256 depositAmount,\\n        uint256 feesCollected\\n    );\\n}\\n\",\"keccak256\":\"0xa32fcfc956d70a62f18a5dd80db30d1b3a70403e5865aa8a093da5ca79be8fe0\",\"license\":\"MIT\"},\"contracts/interfaces/IChargedState.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IChargedState.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @notice Interface for Charged State\\n */\\ninterface IChargedState {\\n  /***********************************|\\n  |             Public API            |\\n  |__________________________________*/\\n\\n    function getDischargeTimelockExpiry(\\n        address contractAddress,\\n        uint256 tokenId\\n    ) external view returns (uint256 lockExpiry);\\n\\n    function getReleaseTimelockExpiry(address contractAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (uint256 lockExpiry);\\n\\n    function getBreakBondTimelockExpiry(\\n        address contractAddress,\\n        uint256 tokenId\\n    ) external view returns (uint256 lockExpiry);\\n\\n    function isApprovedForDischarge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isApprovedForRelease(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isApprovedForBreakBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isApprovedForTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isEnergizeRestricted(address contractAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (bool);\\n\\n    function isCovalentBondRestricted(address contractAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (bool);\\n\\n    function getDischargeState(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address sender\\n    )\\n        external\\n        returns (\\n            bool allowFromAll,\\n            bool isApproved,\\n            uint256 timelock,\\n            uint256 tempLockExpiry\\n        );\\n\\n    function getReleaseState(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address sender\\n    )\\n        external\\n        returns (\\n            bool allowFromAll,\\n            bool isApproved,\\n            uint256 timelock,\\n            uint256 tempLockExpiry\\n        );\\n\\n    function getBreakBondState(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address sender\\n    )\\n        external\\n        returns (\\n            bool allowFromAll,\\n            bool isApproved,\\n            uint256 timelock,\\n            uint256 tempLockExpiry\\n        );\\n\\n    /***********************************|\\n  |      Only NFT Owner/Operator      |\\n  |__________________________________*/\\n\\n    function setDischargeApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setReleaseApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setBreakBondApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setTimelockApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setApprovalForAll(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setPermsForRestrictCharge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForAllowDischarge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForAllowRelease(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForRestrictBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForAllowBreakBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setDischargeTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        uint256 unlockBlock\\n    ) external;\\n\\n    function setReleaseTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        uint256 unlockBlock\\n    ) external;\\n\\n    function setBreakBondTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        uint256 unlockBlock\\n    ) external;\\n\\n    /***********************************|\\n  |         Only NFT Contract         |\\n  |__________________________________*/\\n\\n    function setTemporaryLock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool isLocked\\n    ) external;\\n\\n    /***********************************|\\n  |          Particle Events          |\\n  |__________________________________*/\\n\\n    event Initialized(address indexed initiator);\\n    event ControllerSet(address indexed controllerAddress, string controllerId);\\n\\n    event DischargeApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n    event ReleaseApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n    event BreakBondApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n    event TimelockApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n\\n    event TokenDischargeTimelock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed operator,\\n        uint256 unlockBlock\\n    );\\n    event TokenReleaseTimelock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed operator,\\n        uint256 unlockBlock\\n    );\\n    event TokenBreakBondTimelock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed operator,\\n        uint256 unlockBlock\\n    );\\n    event TokenTempLock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        uint256 unlockBlock\\n    );\\n\\n    event PermsSetForRestrictCharge(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForAllowDischarge(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForAllowRelease(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForRestrictBond(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForAllowBreakBond(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n}\\n\",\"keccak256\":\"0x3425b24ea258cabb1fb0244820487950704a0ddc62930e0f8315e75f2ebf7e17\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3Packs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3Packs.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\nimport \\\"./IWeb3PacksDefs.sol\\\";\\n\\ninterface IWeb3Packs is IWeb3PacksDefs {\\n  event BundledERC20(address indexed tokenAddress, uint256 amountOut);\\n  event BundledERC721(address indexed tokenAddress, uint256 nftTokenId);\\n\\n  // BUNDLE\\n  function bundle(\\n    IWeb3PacksDefs.BundleChunk[] calldata bundleChunks,\\n    address[] calldata referrals,\\n    string calldata tokenMetaUri,\\n    IWeb3PacksDefs.LockState calldata lockState,\\n    bytes32 packType,\\n    uint256 ethPackPrice\\n  ) external\\n    payable\\n    returns(uint256 tokenId);\\n\\n  // UNBUNDLE\\n  function unbundle(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 tokenId,\\n    bool sellAll\\n  ) external\\n    payable;\\n\\n  // QUERY\\n  function getPackBalances(\\n    address tokenAddress,\\n    uint256 tokenId\\n  ) external\\n    returns (TokenAmount[] memory);\\n\\n  function getPackPriceEth(uint256 tokenId)\\n    external\\n    returns (uint256 packPriceEth);\\n\\n  function getReferralRewardsOf(address account)\\n    external\\n    returns (uint256 balance);\\n\\n  function claimReferralRewards(address payable account)\\n    external;\\n}\\n\",\"keccak256\":\"0xd41f70f3d908764a761091a54f878eb3bc84edcce6ead002e87a4e9aed562978\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksBundler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksBundler.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\n\\ninterface IWeb3PacksBundler {\\n  event BundledTokenSS(address indexed token, uint256 amount);\\n  event BundledTokenLP(address indexed token0, address indexed token1, uint256 amount0, uint256 amount1, uint256 liquidity);\\n\\n  function getLiquidityToken(uint256 packTokenId) external returns (address tokenAddress, uint256 tokenId);\\n\\n  function bundle(uint256 packTokenId, address sender)\\n    payable\\n    external\\n    returns(\\n      address tokenAddress,\\n      uint256 amountOut,\\n      uint256 nftTokenId\\n    );\\n\\n  function unbundle(address payable receiver, uint256 packTokenId, bool sellAll)\\n    external\\n    returns(uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x5503608e26e5cc8feaf1216d25f865c7f163ae4f852343f05b8a95478279f4f6\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksDefs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksDefs.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\ninterface IWeb3PacksDefs {\\n  // Custom Errors\\n  error NotOwnerOrApproved();\\n  error FundingFailed();\\n  error SwapFailed();\\n  error NullReceiver();\\n  error ContractNotAllowed();\\n  error NativeAssetTransferFailed();\\n  error MismatchedTokens();\\n  error NoBundlesInPack();\\n  error FailedToExitWeth();\\n  error BundlerNotRegistered(bytes32 bundlerId);\\n  error MissingLiquidityUUID(address tokenAddress);\\n  error UnsucessfulSwap(address tokenOut, uint256 amountIn, address router);\\n  error InsufficientForFee(uint256 value, uint256 ethPackPrice, uint256 protocolFee);\\n\\n  struct RouterConfig {\\n    address weth;\\n    address token0;\\n    address token1;\\n    address manager;\\n    address swapRouter;\\n    address liquidityRouter;\\n    bytes32 poolId;\\n    bytes32 bundlerId;\\n    uint256 slippage;\\n    int24 tickLower;\\n    int24 tickUpper;\\n  }\\n\\n  struct BundleChunk {\\n    bytes32 bundlerId;\\n    uint256 percentBasisPoints;\\n  }\\n\\n  struct Token {\\n    address tokenAddress;\\n    uint256 tokenDecimals;\\n    string tokenSymbol;\\n  }\\n\\n  struct TokenAmount {\\n    address tokenAddress;\\n    uint256 balance;\\n    uint256 nftTokenId;\\n  }\\n\\n  struct Route {\\n    address token0;\\n    address token1;\\n    bool stable;\\n  }\\n\\n  struct LiquidityPosition {\\n    uint256 lpTokenId;\\n    uint256 liquidity;\\n    bool stable;\\n  }\\n\\n  struct LockState {\\n    uint256 ERC20Timelock;\\n    uint256 ERC721Timelock;\\n  }\\n}\\n\",\"keccak256\":\"0xd66482cd58eeed3a65b16b764aa81bebb2fdafb5fc966f1fa069e17e2c91247f\",\"license\":\"MIT\"},\"contracts/lib/BlackholePrevention.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// BlackholePrevention.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\n/**\\n * @notice Prevents ETH or Tokens from getting stuck in a contract by allowing\\n *  the Owner/DAO to pull them out on behalf of a user\\n * This is only meant to contracts that are not expected to hold tokens, but do handle transferring them.\\n */\\ncontract BlackholePrevention {\\n    using Address for address payable;\\n    using SafeERC20 for IERC20;\\n\\n    event WithdrawStuckEther(address indexed receiver, uint256 amount);\\n    event WithdrawStuckERC20(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 amount\\n    );\\n    event WithdrawStuckERC721(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId\\n    );\\n    event WithdrawStuckERC1155(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    function _withdrawEther(address payable receiver, uint256 amount)\\n        internal\\n        virtual\\n    {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (address(this).balance >= amount) {\\n            receiver.sendValue(amount);\\n            emit WithdrawStuckEther(receiver, amount);\\n        }\\n    }\\n\\n    function _withdrawERC20(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC20(tokenAddress).balanceOf(address(this)) >= amount) {\\n            IERC20(tokenAddress).safeTransfer(receiver, amount);\\n            emit WithdrawStuckERC20(receiver, tokenAddress, amount);\\n        }\\n    }\\n\\n    function _withdrawERC721(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC721(tokenAddress).ownerOf(tokenId) == address(this)) {\\n            IERC721(tokenAddress).transferFrom(\\n                address(this),\\n                receiver,\\n                tokenId\\n            );\\n            emit WithdrawStuckERC721(receiver, tokenAddress, tokenId);\\n        }\\n    }\\n\\n    function _withdrawERC1155(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (\\n            IERC1155(tokenAddress).balanceOf(address(this), tokenId) >= amount\\n        ) {\\n            IERC1155(tokenAddress).safeTransferFrom(\\n                address(this),\\n                receiver,\\n                tokenId,\\n                amount,\\n                \\\"\\\"\\n            );\\n            emit WithdrawStuckERC1155(receiver, tokenAddress, tokenId, amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa7de406bd3b1092f8222d3eb1e2a990381429a5cb6bab48a811ff7118a43746\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052600960809081526833b2b732b934b1972160b91b60a052600c906200002a9082620001f0565b5060408051808201909152600981526833b2b732b934b1972160b91b6020820152600d906200005a9082620001f0565b503480156200006857600080fd5b5060405162003aa138038062003aa18339810160408190526200008b91620002d9565b6200009633620000fb565b6000805460ff60a01b1916905560018055600280546001600160a01b039586166001600160a01b031991821617909155600380549486169482169490941790935560048054928516928416929092179091556005805491909316911617905562000336565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017657607f821691505b6020821081036200019757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001eb57600081815260208120601f850160051c81016020861015620001c65750805b601f850160051c820191505b81811015620001e757828155600101620001d2565b5050505b505050565b81516001600160401b038111156200020c576200020c6200014b565b62000224816200021d845462000161565b846200019d565b602080601f8311600181146200025c5760008415620002435750858301515b600019600386901b1c1916600185901b178555620001e7565b600085815260208120601f198616915b828110156200028d578886015182559484019460019091019084016200026c565b5085821015620002ac5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b0381168114620002d457600080fd5b919050565b60008060008060808587031215620002f057600080fd5b620002fb85620002bc565b93506200030b60208601620002bc565b92506200031b60408601620002bc565b91506200032b60608601620002bc565b905092959194509250565b61375b80620003466000396000f3fe6080604052600436106101d85760003560e01c8063787dce3d11610102578063b4540d7411610095578063dafb944911610064578063dafb9449146105cd578063edd777b3146105ed578063f0f4426014610600578063f2fde38b1461062057600080fd5b8063b4540d741461054d578063b7683e931461057a578063b76c37531461059a578063bd326616146105ad57600080fd5b8063a0edb48b116100d1578063a0edb48b146104cd578063a1764595146104ed578063a8499fdf1461050d578063b36a8e011461052d57600080fd5b8063787dce3d1461045a5780638456cb591461047a5780638da5cb5b1461048f5780639e3905c4146104ad57600080fd5b80634025feb21161017a5780635c975abb116101495780635c975abb146103e6578063609b8813146104105780636e5559fd14610425578063715018a61461044557600080fd5b80634025feb21461034357806341d6206c14610363578063522f681514610399578063524f389d146103b957600080fd5b8063252c9c94116101b6578063252c9c941461029e57806330219ef4146102c05780633f4ba83a146102f85780633f656fb81461030d57600080fd5b8063108e4db7146101dd578063150b7a02146102065780631593dee11461027c575b600080fd5b3480156101e957600080fd5b506101f360075481565b6040519081526020015b60405180910390f35b34801561021257600080fd5b5061024b610221366004612ea6565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101fd565b34801561028857600080fd5b5061029c610297366004612f19565b610640565b005b3480156102aa57600080fd5b506102b3610658565b6040516101fd9190612faa565b3480156102cc57600080fd5b506004546102e0906001600160a01b031681565b6040516001600160a01b0390911681526020016101fd565b34801561030457600080fd5b5061029c6106e6565b34801561031957600080fd5b506101f3610328366004612fbd565b6001600160a01b03166000908152600b602052604090205490565b34801561034f57600080fd5b5061029c61035e366004612f19565b6106f8565b34801561036f57600080fd5b506102e061037e366004612fe1565b6008602052600090815260409020546001600160a01b031681565b3480156103a557600080fd5b5061029c6103b4366004612ffa565b61070b565b3480156103c557600080fd5b506101f36103d4366004612fe1565b60009081526009602052604090205490565b3480156103f257600080fd5b50600054600160a01b900460ff1660405190151581526020016101fd565b34801561041c57600080fd5b506102b3610721565b34801561043157600080fd5b5061029c610440366004612fbd565b61072e565b34801561045157600080fd5b5061029c610800565b34801561046657600080fd5b5061029c610475366004612fe1565b610812565b34801561048657600080fd5b5061029c610855565b34801561049b57600080fd5b506000546001600160a01b03166102e0565b3480156104b957600080fd5b5061029c6104c8366004613026565b610865565b3480156104d957600080fd5b5061029c6104e8366004613056565b6108d0565b3480156104f957600080fd5b506002546102e0906001600160a01b031681565b34801561051957600080fd5b506005546102e0906001600160a01b031681565b34801561053957600080fd5b5061029c610548366004612fbd565b6108ea565b34801561055957600080fd5b5061056d610568366004612ffa565b610976565b6040516101fd919061309c565b34801561058657600080fd5b5061029c610595366004612fbd565b61098b565b61029c6105a836600461310c565b610a33565b3480156105b957600080fd5b5061029c6105c8366004612fbd565b610aab565b3480156105d957600080fd5b506003546102e0906001600160a01b031681565b6101f36105fb3660046131bc565b610b53565b34801561060c57600080fd5b5061029c61061b366004612fbd565b610c1d565b34801561062c57600080fd5b5061029c61063b366004612fbd565b610cc5565b610648610d52565b610653838383610dac565b505050565b600c8054610665906132a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610691906132a8565b80156106de5780601f106106b3576101008083540402835291602001916106de565b820191906000526020600020905b8154815290600101906020018083116106c157829003601f168201915b505050505081565b6106ee610d52565b6106f6610ec3565b565b610700610d52565b610653838383610f18565b610713610d52565b61071d82826110b3565b5050565b600d8054610665906132a8565b610736610d52565b6001600160a01b0381166107b65760405162461bcd60e51b8152602060048201526024808201527f496e76616c6964206164647265737320666f722063686172676564506172746960448201527f636c65730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517f5ce0e6b7fd36339ee97339831b6c72694ecee88c62aab49919d9cabe0a732e4190600090a250565b610808610d52565b6106f66000611149565b61081a610d52565b60078190556040518181527fdb5aafdb29539329e37d4e3ee869bc4031941fd55a5dfc92824fbe34b204e30d9060200160405180910390a150565b61085d610d52565b6106f6611199565b61086d610d52565b60008281526008602090815260409182902080546001600160a01b0319166001600160a01b03851690811790915591518481527ff2db398cc8122e242d54551a7bdf11fbda61e183aa561acb1361a73b9f8e5ae591015b60405180910390a25050565b6108d8610d52565b6108e4848484846111dc565b50505050565b6108f2611395565b6001600160a01b0381166000908152600b6020526040902054478111610969576109256001600160a01b038316826113ee565b816001600160a01b03167fe64799e036cf6322d0c3b6d11f4e2fc9d1bd9bb5938dd3d6835921a427c89b8f8260405161096091815260200190565b60405180910390a25b5061097360018055565b50565b60606109828383611507565b90505b92915050565b610993610d52565b6001600160a01b0381166109e95760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206164647265737320666f722063686172676564537461746560448201526064016107ad565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f62ff39aed768a426c7582b6e1062ab2631df1869b2d574e36f8274d2e2b0ab8190600090a250565b610a3b611726565b610a43611395565b610a4d6000611780565b6000610a5b8585858561180e565b9050846001600160a01b0316837f1143d14cf0b7fdb46022761b1a9b421b27c63d51cbf67363a425c415b14a8ad383604051610a9991815260200190565b60405180910390a3506108e460018055565b610ab3610d52565b6001600160a01b038116610b095760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206164647265737320666f722070726f746f6e00000000000060448201526064016107ad565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fa3d7b0fff2d93a7ba440166a8f7eba4acfe6e000fe19b8218e64264d62ef272690600090a250565b6000610b5d611726565b610b65611395565b610b6e82611780565b6000610bad838a8a80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611b2392505050565b9050610bc68b8b898989610bc1878a6132f2565b611e4f565b6040805186815260208101869052919350339184917f775e8ef7e6e96ebecce1023e6d6cf38ebecc41d241178408bf9723d407281a52910160405180910390a350610c1060018055565b9998505050505050505050565b610c25610d52565b6001600160a01b038116610c7b5760405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206164647265737320666f722074726561737572790000000060448201526064016107ad565b600680546001600160a01b0319166001600160a01b0383169081179091556040517febbf9e77f4905707c811ea2da45f04b959c1132fecd092aae1fe0dac5b176c3290600090a250565b610ccd610d52565b6001600160a01b038116610d495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107ad565b61097381611149565b6000546001600160a01b031633146106f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ad565b6001600160a01b038316610dee5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e589190613305565b1061065357610e716001600160a01b03831684836122ff565b816001600160a01b0316836001600160a01b03167f6c9d637297625e945b296ff73a71fcfbd0a9e062652b6491a921c4c60194176b83604051610eb691815260200190565b60405180910390a3505050565b610ecb612351565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610f5a5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde919061331e565b6001600160a01b031603610653576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906323b872dd90606401600060405180830381600087803b15801561105557600080fd5b505af1158015611069573d6000803e3d6000fd5b5050505080826001600160a01b0316846001600160a01b03167ffefe036cac4ee3a4aca074a81cbcc4376e1484693289078dbec149c890101d5b60405160405180910390a4505050565b6001600160a01b0382166110f55760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b80471061071d5761110f6001600160a01b038316826113ee565b816001600160a01b03167eddb683bb45cd5d0ad8a200c6fae7152b1c236ee90a4a37db692407f5cc38bd826040516108c491815260200190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111a1611726565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610efb3390565b6001600160a01b03841661121e5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905281906001600160a01b0385169062fdd58e90604401602060405180830381865afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a69190613305565b106108e4576040517ff242432a0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b15801561132957600080fd5b505af115801561133d573d6000803e3d6000fd5b5050505081836001600160a01b0316856001600160a01b03167f620337bf89eea2b9ae2657beead83b5fa620452817118348aff96e201d52598b8460405161138791815260200190565b60405180910390a450505050565b6002600154036113e75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ad565b6002600155565b8047101561143e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016107ad565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461148b576040519150601f19603f3d011682016040523d82523d6000602084013e611490565b606091505b50509050806106535760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107ad565b6000818152600a602052604081205460609190810361153957604051636239226960e11b815260040160405180910390fd5b6000838152600a6020526040812054908167ffffffffffffffff8111156115625761156261333b565b6040519080825280602002602001820160405280156115c057816020015b6115ad604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816115805790505b50905060005b8281101561171c576000868152600a602052604081208054839081106115ee576115ee613351565b600091825260208083209091015480835260089091526040909120549091506001600160a01b0316611620575061170a565b6000818152600860205260408082205490516305ff03af60e51b8152600481018a90526001600160a01b0390911696508190879063bfe075e09060240160408051808303816000875af115801561167b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169f9190613367565b90925090508015156000816116be576116b98c8c866123aa565b6116c1565b60015b90506040518060600160405280856001600160a01b03168152602001828152602001848152508787815181106116f9576116f9613351565b602002602001018190525050505050505b8061171481613395565b9150506115c6565b5095945050505050565b600054600160a01b900460ff16156106f65760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016107ad565b600060075411801561179e57508060075461179b91906133ae565b34105b156117e9576007546040517f562cac4d0000000000000000000000000000000000000000000000000000000081523460048201526024810183905260448101919091526064016107ad565b60006117f582346132f2565b60065490915061071d906001600160a01b0316826113ee565b6000806000856001600160a01b0316636352211e866040518263ffffffff1660e01b815260040161184191815260200190565b602060405180830381865afa15801561185e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611882919061331e565b9050336001600160a01b038216146118c6576040517fdb1453ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858152600a602052604081205490036118f457604051636239226960e11b815260040160405180910390fd5b60008060005b6000888152600a6020526040902054811015611aee576000888152600a6020526040812080548390811061193057611930613351565b600091825260208083209091015480835260089091526040909120549091506001600160a01b03166119625750611adc565b600081815260086020526040908190205490516305ff03af60e51b8152600481018b90526001600160a01b039091169650869063bfe075e09060240160408051808303816000875af11580156119bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e09190613367565b90945092506000839003611a1657600081815260086020526040902054611a11906001600160a01b03168a86612447565b611a3a565b600081815260086020526040902054611a3a906001600160a01b03168a86866124e5565b6040517fcc427bad0000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152602482018b9052891515604483015287169063cc427bad906064016020604051808303816000875af1158015611aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ace9190613305565b611ad890886133ae565b9650505b80611ae681613395565b9150506118fa565b506000878152600a60205260408120611b0691612dca565b505050600093845250600960205260408320929092555092915050565b600080612710611b358561014a6133c1565b611b3f91906133d8565b905060008351118015611b7f575060006001600160a01b031683600081518110611b6b57611b6b613351565b60200260200101516001600160a01b031614155b15611e485780915060018351118015611bc5575060006001600160a01b031683600181518110611bb157611bb1613351565b60200260200101516001600160a01b031614155b15611df35760028351118015611c08575060006001600160a01b031683600281518110611bf457611bf4613351565b60200260200101516001600160a01b031614155b15611d5757612710611c1b85601e6133c1565b611c2591906133d8565b600b600085600081518110611c3c57611c3c613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611c7391906133ae565b909155506127109050611c8785601e6133c1565b611c9191906133d8565b600b600085600181518110611ca857611ca8613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611cdf91906133ae565b909155506127109050611cf48561010e6133c1565b611cfe91906133d8565b600b600085600281518110611d1557611d15613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611d4c91906133ae565b90915550611e489050565b612710611d6585601e6133c1565b611d6f91906133d8565b600b600085600081518110611d8657611d86613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611dbd91906133ae565b909155506127109050611dd28561012c6133c1565b611ddc91906133d8565b600b600085600181518110611d1557611d15613351565b80600b600085600081518110611e0b57611e0b613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611e4291906133ae565b90915550505b5092915050565b600080611e9186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061258292505050565b9150600260009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ee357600080fd5b505af1158015611ef7573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015611f47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6b9190613305565b90506000808080808c67ffffffffffffffff811115611f8c57611f8c61333b565b604051908082528060200260200182016040528015611fb5578160200160208202803683370190505b50905060005b8d8110156122205760008f8f83818110611fd757611fd7613351565b905060400201803603810190611fed91906133fa565b9050806000015183838151811061200657612006613351565b60209081029190910181019190915281516000908152600890915260409020546001600160a01b031661206b5780516040517f75c3577900000000000000000000000000000000000000000000000000000000815260048101919091526024016107ad565b8051600090815260086020908152604090912054908201516001600160a01b0390911699506127109061209e908a6133c1565b6120a891906133d8565b6002549097506120c2906001600160a01b03168a89612613565b6001600160a01b038916631b22a4f08b336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b031660248201526044016060604051808303816000875af1158015612137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215b9190613457565b9197509550935060008490036121be576121768a8787612727565b856001600160a01b03167fe141b0c8fb58749d5af9414a49d94c6236c457ee3c2acee0a206810fbad56a5d866040516121b191815260200190565b60405180910390a261220d565b6121c98a878661284b565b856001600160a01b03167f392b7247a3398d2d55f17e40da2099255e8ce61ee318cbe5cf2a44d70565fe048560405161220491815260200190565b60405180910390a25b508061221881613395565b915050611fbb565b506000888152600a60209081526040909120825161224092840190612de8565b50600088815260096020526040902089905561225c8a89612969565b6003546001600160a01b03166342842e0e30336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604481018b9052606401600060405180830381600087803b1580156122d657600080fd5b505af11580156122ea573d6000803e3d6000fd5b50505050505050505050509695505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610653908490612a92565b600054600160a01b900460ff166106f65760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016107ad565b600480546040517fe6ea6ce70000000000000000000000000000000000000000000000000000000081526000926001600160a01b039092169163e6ea6ce7916123fc9188918891600c91899101613532565b6020604051808303816000875af115801561241b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243f9190613305565b949350505050565b600480546003546040517facab923c0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169363acab923c9361249c9389939116918891600c9189910161356f565b60408051808303816000875af11580156124ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124de91906135b5565b5050505050565b600480546003546040517ffe02fb000000000000000000000000000000000000000000000000000000000081526001600160a01b039283169363fe02fb009361253f938a939116918991600d918a918a91600191016135d9565b6020604051808303816000875af115801561255e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124de9190613628565b6003546040517f2c0cd5a30000000000000000000000000000000000000000000000000000000081526000916001600160a01b031690632c0cd5a3906125d090309081908790600401613645565b6020604051808303816000875af11580156125ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190613305565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161266f919061367a565b6000604051808303816000865af19150503d80600081146126ac576040519150601f19603f3d011682016040523d82523d6000602084013e6126b1565b606091505b50915091508180156126db5750805115806126db5750808060200190518101906126db9190613628565b6124de5760405162461bcd60e51b815260206004820152600260248201527f535400000000000000000000000000000000000000000000000000000000000060448201526064016107ad565b8060000361279a576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127979190613305565b90505b6004546127b29083906001600160a01b031683612b7a565b600480546003546040517f0bdde2ca0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831693630bdde2ca936128089316918891600c9189918991309101613696565b6020604051808303816000875af1158015612827573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190613305565b600480546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b03918216928101929092526001602483015283169063a22cb46590604401600060405180830381600087803b1580156128b457600080fd5b505af11580156128c8573d6000803e3d6000fd5b5050600480546003546040517f3ff956cc0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169550633ff956cc94506129269391909216918891600d9189918991600191016136df565b6020604051808303816000875af1158015612945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190613628565b8135156129f9576005546003546040517f090003d20000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018490528435604482015291169063090003d290606401600060405180830381600087803b1580156129e057600080fd5b505af11580156129f4573d6000803e3d6000fd5b505050505b60208201351561071d576005546003546040517f907990010000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810184905260208501356044820152911690639079900190606401600060405180830381600087803b158015612a7657600080fd5b505af1158015612a8a573d6000803e3d6000fd5b505050505050565b6000612ae7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ca79092919063ffffffff16565b9050805160001480612b08575080806020019051810190612b089190613628565b6106535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107ad565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691612bef919061367a565b6000604051808303816000865af19150503d8060008114612c2c576040519150601f19603f3d011682016040523d82523d6000602084013e612c31565b606091505b5091509150818015612c5b575080511580612c5b575080806020019051810190612c5b9190613628565b6124de5760405162461bcd60e51b815260206004820152600260248201527f534100000000000000000000000000000000000000000000000000000000000060448201526064016107ad565b606061243f848460008585600080866001600160a01b03168587604051612cce919061367a565b60006040518083038185875af1925050503d8060008114612d0b576040519150601f19603f3d011682016040523d82523d6000602084013e612d10565b606091505b5091509150612d2187838387612d2c565b979650505050505050565b60608315612d9b578251600003612d94576001600160a01b0385163b612d945760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ad565b508161243f565b61243f8383815115612db05781518083602001fd5b8060405162461bcd60e51b81526004016107ad9190612faa565b50805460008255906000526020600020908101906109739190612e33565b828054828255906000526020600020908101928215612e23579160200282015b82811115612e23578251825591602001919060010190612e08565b50612e2f929150612e33565b5090565b5b80821115612e2f5760008155600101612e34565b6001600160a01b038116811461097357600080fd5b60008083601f840112612e6f57600080fd5b50813567ffffffffffffffff811115612e8757600080fd5b602083019150836020828501011115612e9f57600080fd5b9250929050565b600080600080600060808688031215612ebe57600080fd5b8535612ec981612e48565b94506020860135612ed981612e48565b935060408601359250606086013567ffffffffffffffff811115612efc57600080fd5b612f0888828901612e5d565b969995985093965092949392505050565b600080600060608486031215612f2e57600080fd5b8335612f3981612e48565b92506020840135612f4981612e48565b929592945050506040919091013590565b60005b83811015612f75578181015183820152602001612f5d565b50506000910152565b60008151808452612f96816020860160208601612f5a565b601f01601f19169290920160200192915050565b6020815260006109826020830184612f7e565b600060208284031215612fcf57600080fd5b8135612fda81612e48565b9392505050565b600060208284031215612ff357600080fd5b5035919050565b6000806040838503121561300d57600080fd5b823561301881612e48565b946020939093013593505050565b6000806040838503121561303957600080fd5b82359150602083013561304b81612e48565b809150509250929050565b6000806000806080858703121561306c57600080fd5b843561307781612e48565b9350602085013561308781612e48565b93969395505050506040820135916060013590565b602080825282518282018190526000919060409081850190868401855b828110156130f157815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016130b9565b5091979650505050505050565b801515811461097357600080fd5b6000806000806080858703121561312257600080fd5b843561312d81612e48565b9350602085013561313d81612e48565b9250604085013591506060850135613154816130fe565b939692955090935050565b60008083601f84011261317157600080fd5b50813567ffffffffffffffff81111561318957600080fd5b6020830191508360208260051b8501011115612e9f57600080fd5b6000604082840312156131b657600080fd5b50919050565b600080600080600080600080600060e08a8c0312156131da57600080fd5b893567ffffffffffffffff808211156131f257600080fd5b818c0191508c601f83011261320657600080fd5b81358181111561321557600080fd5b8d60208260061b850101111561322a57600080fd5b60209283019b509950908b0135908082111561324557600080fd5b6132518d838e0161315f565b909950975060408c013591508082111561326a57600080fd5b506132778c828d01612e5d565b909650945061328b90508b60608c016131a4565b925060a08a0135915060c08a013590509295985092959850929598565b600181811c908216806132bc57607f821691505b6020821081036131b657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610985576109856132dc565b60006020828403121561331757600080fd5b5051919050565b60006020828403121561333057600080fd5b8151612fda81612e48565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561337a57600080fd5b825161338581612e48565b6020939093015192949293505050565b6000600182016133a7576133a76132dc565b5060010190565b80820180821115610985576109856132dc565b8082028115828204841417610985576109856132dc565b6000826133f557634e487b7160e01b600052601260045260246000fd5b500490565b60006040828403121561340c57600080fd5b6040516040810181811067ffffffffffffffff8211171561343d57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b60008060006060848603121561346c57600080fd5b835161347781612e48565b602085015160409095015190969495509392505050565b8054600090600181811c90808316806134a857607f831692505b602080841082036134c957634e487b7160e01b600052602260045260246000fd5b838852602088018280156134e457600181146134fa57613525565b60ff198716825285151560051b82019750613525565b60008981526020902060005b8781101561351f57815484820152908601908401613506565b83019850505b5050505050505092915050565b60006001600160a01b0380871683528560208401526080604084015261355b608084018661348e565b915080841660608401525095945050505050565b60006001600160a01b038088168352808716602084015285604084015260a060608401526135a060a084018661348e565b91508084166080840152509695505050505050565b600080604083850312156135c857600080fd5b505080516020909101519092909150565b60006001600160a01b03808a168352808916602084015287604084015260e0606084015261360a60e084018861348e565b951660808301525060a081019290925260c090910152949350505050565b60006020828403121561363a57600080fd5b8151612fda816130fe565b60006001600160a01b038086168352808516602084015250606060408301526136716060830184612f7e565b95945050505050565b6000825161368c818460208701612f5a565b9190910192915050565b60006001600160a01b03808916835287602084015260c060408401526136bf60c084018861348e565b9581166060840152608083019490945250911660a0909101529392505050565b60006001600160a01b03808916835287602084015260c0604084015261370860c084018861348e565b9516606083015250608081019290925260a090910152939250505056fea2646970667358221220a8b841f8624148dd50cda1e68ab051fff0b991e86d630db17416acbbcf03c76f64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101d85760003560e01c8063787dce3d11610102578063b4540d7411610095578063dafb944911610064578063dafb9449146105cd578063edd777b3146105ed578063f0f4426014610600578063f2fde38b1461062057600080fd5b8063b4540d741461054d578063b7683e931461057a578063b76c37531461059a578063bd326616146105ad57600080fd5b8063a0edb48b116100d1578063a0edb48b146104cd578063a1764595146104ed578063a8499fdf1461050d578063b36a8e011461052d57600080fd5b8063787dce3d1461045a5780638456cb591461047a5780638da5cb5b1461048f5780639e3905c4146104ad57600080fd5b80634025feb21161017a5780635c975abb116101495780635c975abb146103e6578063609b8813146104105780636e5559fd14610425578063715018a61461044557600080fd5b80634025feb21461034357806341d6206c14610363578063522f681514610399578063524f389d146103b957600080fd5b8063252c9c94116101b6578063252c9c941461029e57806330219ef4146102c05780633f4ba83a146102f85780633f656fb81461030d57600080fd5b8063108e4db7146101dd578063150b7a02146102065780631593dee11461027c575b600080fd5b3480156101e957600080fd5b506101f360075481565b6040519081526020015b60405180910390f35b34801561021257600080fd5b5061024b610221366004612ea6565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101fd565b34801561028857600080fd5b5061029c610297366004612f19565b610640565b005b3480156102aa57600080fd5b506102b3610658565b6040516101fd9190612faa565b3480156102cc57600080fd5b506004546102e0906001600160a01b031681565b6040516001600160a01b0390911681526020016101fd565b34801561030457600080fd5b5061029c6106e6565b34801561031957600080fd5b506101f3610328366004612fbd565b6001600160a01b03166000908152600b602052604090205490565b34801561034f57600080fd5b5061029c61035e366004612f19565b6106f8565b34801561036f57600080fd5b506102e061037e366004612fe1565b6008602052600090815260409020546001600160a01b031681565b3480156103a557600080fd5b5061029c6103b4366004612ffa565b61070b565b3480156103c557600080fd5b506101f36103d4366004612fe1565b60009081526009602052604090205490565b3480156103f257600080fd5b50600054600160a01b900460ff1660405190151581526020016101fd565b34801561041c57600080fd5b506102b3610721565b34801561043157600080fd5b5061029c610440366004612fbd565b61072e565b34801561045157600080fd5b5061029c610800565b34801561046657600080fd5b5061029c610475366004612fe1565b610812565b34801561048657600080fd5b5061029c610855565b34801561049b57600080fd5b506000546001600160a01b03166102e0565b3480156104b957600080fd5b5061029c6104c8366004613026565b610865565b3480156104d957600080fd5b5061029c6104e8366004613056565b6108d0565b3480156104f957600080fd5b506002546102e0906001600160a01b031681565b34801561051957600080fd5b506005546102e0906001600160a01b031681565b34801561053957600080fd5b5061029c610548366004612fbd565b6108ea565b34801561055957600080fd5b5061056d610568366004612ffa565b610976565b6040516101fd919061309c565b34801561058657600080fd5b5061029c610595366004612fbd565b61098b565b61029c6105a836600461310c565b610a33565b3480156105b957600080fd5b5061029c6105c8366004612fbd565b610aab565b3480156105d957600080fd5b506003546102e0906001600160a01b031681565b6101f36105fb3660046131bc565b610b53565b34801561060c57600080fd5b5061029c61061b366004612fbd565b610c1d565b34801561062c57600080fd5b5061029c61063b366004612fbd565b610cc5565b610648610d52565b610653838383610dac565b505050565b600c8054610665906132a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610691906132a8565b80156106de5780601f106106b3576101008083540402835291602001916106de565b820191906000526020600020905b8154815290600101906020018083116106c157829003601f168201915b505050505081565b6106ee610d52565b6106f6610ec3565b565b610700610d52565b610653838383610f18565b610713610d52565b61071d82826110b3565b5050565b600d8054610665906132a8565b610736610d52565b6001600160a01b0381166107b65760405162461bcd60e51b8152602060048201526024808201527f496e76616c6964206164647265737320666f722063686172676564506172746960448201527f636c65730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517f5ce0e6b7fd36339ee97339831b6c72694ecee88c62aab49919d9cabe0a732e4190600090a250565b610808610d52565b6106f66000611149565b61081a610d52565b60078190556040518181527fdb5aafdb29539329e37d4e3ee869bc4031941fd55a5dfc92824fbe34b204e30d9060200160405180910390a150565b61085d610d52565b6106f6611199565b61086d610d52565b60008281526008602090815260409182902080546001600160a01b0319166001600160a01b03851690811790915591518481527ff2db398cc8122e242d54551a7bdf11fbda61e183aa561acb1361a73b9f8e5ae591015b60405180910390a25050565b6108d8610d52565b6108e4848484846111dc565b50505050565b6108f2611395565b6001600160a01b0381166000908152600b6020526040902054478111610969576109256001600160a01b038316826113ee565b816001600160a01b03167fe64799e036cf6322d0c3b6d11f4e2fc9d1bd9bb5938dd3d6835921a427c89b8f8260405161096091815260200190565b60405180910390a25b5061097360018055565b50565b60606109828383611507565b90505b92915050565b610993610d52565b6001600160a01b0381166109e95760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206164647265737320666f722063686172676564537461746560448201526064016107ad565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f62ff39aed768a426c7582b6e1062ab2631df1869b2d574e36f8274d2e2b0ab8190600090a250565b610a3b611726565b610a43611395565b610a4d6000611780565b6000610a5b8585858561180e565b9050846001600160a01b0316837f1143d14cf0b7fdb46022761b1a9b421b27c63d51cbf67363a425c415b14a8ad383604051610a9991815260200190565b60405180910390a3506108e460018055565b610ab3610d52565b6001600160a01b038116610b095760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206164647265737320666f722070726f746f6e00000000000060448201526064016107ad565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fa3d7b0fff2d93a7ba440166a8f7eba4acfe6e000fe19b8218e64264d62ef272690600090a250565b6000610b5d611726565b610b65611395565b610b6e82611780565b6000610bad838a8a80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611b2392505050565b9050610bc68b8b898989610bc1878a6132f2565b611e4f565b6040805186815260208101869052919350339184917f775e8ef7e6e96ebecce1023e6d6cf38ebecc41d241178408bf9723d407281a52910160405180910390a350610c1060018055565b9998505050505050505050565b610c25610d52565b6001600160a01b038116610c7b5760405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206164647265737320666f722074726561737572790000000060448201526064016107ad565b600680546001600160a01b0319166001600160a01b0383169081179091556040517febbf9e77f4905707c811ea2da45f04b959c1132fecd092aae1fe0dac5b176c3290600090a250565b610ccd610d52565b6001600160a01b038116610d495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107ad565b61097381611149565b6000546001600160a01b031633146106f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ad565b6001600160a01b038316610dee5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e589190613305565b1061065357610e716001600160a01b03831684836122ff565b816001600160a01b0316836001600160a01b03167f6c9d637297625e945b296ff73a71fcfbd0a9e062652b6491a921c4c60194176b83604051610eb691815260200190565b60405180910390a3505050565b610ecb612351565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610f5a5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015610fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fde919061331e565b6001600160a01b031603610653576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906323b872dd90606401600060405180830381600087803b15801561105557600080fd5b505af1158015611069573d6000803e3d6000fd5b5050505080826001600160a01b0316846001600160a01b03167ffefe036cac4ee3a4aca074a81cbcc4376e1484693289078dbec149c890101d5b60405160405180910390a4505050565b6001600160a01b0382166110f55760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b80471061071d5761110f6001600160a01b038316826113ee565b816001600160a01b03167eddb683bb45cd5d0ad8a200c6fae7152b1c236ee90a4a37db692407f5cc38bd826040516108c491815260200190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111a1611726565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610efb3390565b6001600160a01b03841661121e5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b60448201526064016107ad565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905281906001600160a01b0385169062fdd58e90604401602060405180830381865afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a69190613305565b106108e4576040517ff242432a0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b15801561132957600080fd5b505af115801561133d573d6000803e3d6000fd5b5050505081836001600160a01b0316856001600160a01b03167f620337bf89eea2b9ae2657beead83b5fa620452817118348aff96e201d52598b8460405161138791815260200190565b60405180910390a450505050565b6002600154036113e75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ad565b6002600155565b8047101561143e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016107ad565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461148b576040519150601f19603f3d011682016040523d82523d6000602084013e611490565b606091505b50509050806106535760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107ad565b6000818152600a602052604081205460609190810361153957604051636239226960e11b815260040160405180910390fd5b6000838152600a6020526040812054908167ffffffffffffffff8111156115625761156261333b565b6040519080825280602002602001820160405280156115c057816020015b6115ad604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816115805790505b50905060005b8281101561171c576000868152600a602052604081208054839081106115ee576115ee613351565b600091825260208083209091015480835260089091526040909120549091506001600160a01b0316611620575061170a565b6000818152600860205260408082205490516305ff03af60e51b8152600481018a90526001600160a01b0390911696508190879063bfe075e09060240160408051808303816000875af115801561167b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169f9190613367565b90925090508015156000816116be576116b98c8c866123aa565b6116c1565b60015b90506040518060600160405280856001600160a01b03168152602001828152602001848152508787815181106116f9576116f9613351565b602002602001018190525050505050505b8061171481613395565b9150506115c6565b5095945050505050565b600054600160a01b900460ff16156106f65760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016107ad565b600060075411801561179e57508060075461179b91906133ae565b34105b156117e9576007546040517f562cac4d0000000000000000000000000000000000000000000000000000000081523460048201526024810183905260448101919091526064016107ad565b60006117f582346132f2565b60065490915061071d906001600160a01b0316826113ee565b6000806000856001600160a01b0316636352211e866040518263ffffffff1660e01b815260040161184191815260200190565b602060405180830381865afa15801561185e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611882919061331e565b9050336001600160a01b038216146118c6576040517fdb1453ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858152600a602052604081205490036118f457604051636239226960e11b815260040160405180910390fd5b60008060005b6000888152600a6020526040902054811015611aee576000888152600a6020526040812080548390811061193057611930613351565b600091825260208083209091015480835260089091526040909120549091506001600160a01b03166119625750611adc565b600081815260086020526040908190205490516305ff03af60e51b8152600481018b90526001600160a01b039091169650869063bfe075e09060240160408051808303816000875af11580156119bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e09190613367565b90945092506000839003611a1657600081815260086020526040902054611a11906001600160a01b03168a86612447565b611a3a565b600081815260086020526040902054611a3a906001600160a01b03168a86866124e5565b6040517fcc427bad0000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152602482018b9052891515604483015287169063cc427bad906064016020604051808303816000875af1158015611aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ace9190613305565b611ad890886133ae565b9650505b80611ae681613395565b9150506118fa565b506000878152600a60205260408120611b0691612dca565b505050600093845250600960205260408320929092555092915050565b600080612710611b358561014a6133c1565b611b3f91906133d8565b905060008351118015611b7f575060006001600160a01b031683600081518110611b6b57611b6b613351565b60200260200101516001600160a01b031614155b15611e485780915060018351118015611bc5575060006001600160a01b031683600181518110611bb157611bb1613351565b60200260200101516001600160a01b031614155b15611df35760028351118015611c08575060006001600160a01b031683600281518110611bf457611bf4613351565b60200260200101516001600160a01b031614155b15611d5757612710611c1b85601e6133c1565b611c2591906133d8565b600b600085600081518110611c3c57611c3c613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611c7391906133ae565b909155506127109050611c8785601e6133c1565b611c9191906133d8565b600b600085600181518110611ca857611ca8613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611cdf91906133ae565b909155506127109050611cf48561010e6133c1565b611cfe91906133d8565b600b600085600281518110611d1557611d15613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611d4c91906133ae565b90915550611e489050565b612710611d6585601e6133c1565b611d6f91906133d8565b600b600085600081518110611d8657611d86613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611dbd91906133ae565b909155506127109050611dd28561012c6133c1565b611ddc91906133d8565b600b600085600181518110611d1557611d15613351565b80600b600085600081518110611e0b57611e0b613351565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254611e4291906133ae565b90915550505b5092915050565b600080611e9186868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061258292505050565b9150600260009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ee357600080fd5b505af1158015611ef7573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015611f47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6b9190613305565b90506000808080808c67ffffffffffffffff811115611f8c57611f8c61333b565b604051908082528060200260200182016040528015611fb5578160200160208202803683370190505b50905060005b8d8110156122205760008f8f83818110611fd757611fd7613351565b905060400201803603810190611fed91906133fa565b9050806000015183838151811061200657612006613351565b60209081029190910181019190915281516000908152600890915260409020546001600160a01b031661206b5780516040517f75c3577900000000000000000000000000000000000000000000000000000000815260048101919091526024016107ad565b8051600090815260086020908152604090912054908201516001600160a01b0390911699506127109061209e908a6133c1565b6120a891906133d8565b6002549097506120c2906001600160a01b03168a89612613565b6001600160a01b038916631b22a4f08b336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b031660248201526044016060604051808303816000875af1158015612137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215b9190613457565b9197509550935060008490036121be576121768a8787612727565b856001600160a01b03167fe141b0c8fb58749d5af9414a49d94c6236c457ee3c2acee0a206810fbad56a5d866040516121b191815260200190565b60405180910390a261220d565b6121c98a878661284b565b856001600160a01b03167f392b7247a3398d2d55f17e40da2099255e8ce61ee318cbe5cf2a44d70565fe048560405161220491815260200190565b60405180910390a25b508061221881613395565b915050611fbb565b506000888152600a60209081526040909120825161224092840190612de8565b50600088815260096020526040902089905561225c8a89612969565b6003546001600160a01b03166342842e0e30336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604481018b9052606401600060405180830381600087803b1580156122d657600080fd5b505af11580156122ea573d6000803e3d6000fd5b50505050505050505050509695505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610653908490612a92565b600054600160a01b900460ff166106f65760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016107ad565b600480546040517fe6ea6ce70000000000000000000000000000000000000000000000000000000081526000926001600160a01b039092169163e6ea6ce7916123fc9188918891600c91899101613532565b6020604051808303816000875af115801561241b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243f9190613305565b949350505050565b600480546003546040517facab923c0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169363acab923c9361249c9389939116918891600c9189910161356f565b60408051808303816000875af11580156124ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124de91906135b5565b5050505050565b600480546003546040517ffe02fb000000000000000000000000000000000000000000000000000000000081526001600160a01b039283169363fe02fb009361253f938a939116918991600d918a918a91600191016135d9565b6020604051808303816000875af115801561255e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124de9190613628565b6003546040517f2c0cd5a30000000000000000000000000000000000000000000000000000000081526000916001600160a01b031690632c0cd5a3906125d090309081908790600401613645565b6020604051808303816000875af11580156125ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190613305565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161266f919061367a565b6000604051808303816000865af19150503d80600081146126ac576040519150601f19603f3d011682016040523d82523d6000602084013e6126b1565b606091505b50915091508180156126db5750805115806126db5750808060200190518101906126db9190613628565b6124de5760405162461bcd60e51b815260206004820152600260248201527f535400000000000000000000000000000000000000000000000000000000000060448201526064016107ad565b8060000361279a576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127979190613305565b90505b6004546127b29083906001600160a01b031683612b7a565b600480546003546040517f0bdde2ca0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831693630bdde2ca936128089316918891600c9189918991309101613696565b6020604051808303816000875af1158015612827573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190613305565b600480546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b03918216928101929092526001602483015283169063a22cb46590604401600060405180830381600087803b1580156128b457600080fd5b505af11580156128c8573d6000803e3d6000fd5b5050600480546003546040517f3ff956cc0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169550633ff956cc94506129269391909216918891600d9189918991600191016136df565b6020604051808303816000875af1158015612945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190613628565b8135156129f9576005546003546040517f090003d20000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018490528435604482015291169063090003d290606401600060405180830381600087803b1580156129e057600080fd5b505af11580156129f4573d6000803e3d6000fd5b505050505b60208201351561071d576005546003546040517f907990010000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810184905260208501356044820152911690639079900190606401600060405180830381600087803b158015612a7657600080fd5b505af1158015612a8a573d6000803e3d6000fd5b505050505050565b6000612ae7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ca79092919063ffffffff16565b9050805160001480612b08575080806020019051810190612b089190613628565b6106535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107ad565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691612bef919061367a565b6000604051808303816000865af19150503d8060008114612c2c576040519150601f19603f3d011682016040523d82523d6000602084013e612c31565b606091505b5091509150818015612c5b575080511580612c5b575080806020019051810190612c5b9190613628565b6124de5760405162461bcd60e51b815260206004820152600260248201527f534100000000000000000000000000000000000000000000000000000000000060448201526064016107ad565b606061243f848460008585600080866001600160a01b03168587604051612cce919061367a565b60006040518083038185875af1925050503d8060008114612d0b576040519150601f19603f3d011682016040523d82523d6000602084013e612d10565b606091505b5091509150612d2187838387612d2c565b979650505050505050565b60608315612d9b578251600003612d94576001600160a01b0385163b612d945760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ad565b508161243f565b61243f8383815115612db05781518083602001fd5b8060405162461bcd60e51b81526004016107ad9190612faa565b50805460008255906000526020600020908101906109739190612e33565b828054828255906000526020600020908101928215612e23579160200282015b82811115612e23578251825591602001919060010190612e08565b50612e2f929150612e33565b5090565b5b80821115612e2f5760008155600101612e34565b6001600160a01b038116811461097357600080fd5b60008083601f840112612e6f57600080fd5b50813567ffffffffffffffff811115612e8757600080fd5b602083019150836020828501011115612e9f57600080fd5b9250929050565b600080600080600060808688031215612ebe57600080fd5b8535612ec981612e48565b94506020860135612ed981612e48565b935060408601359250606086013567ffffffffffffffff811115612efc57600080fd5b612f0888828901612e5d565b969995985093965092949392505050565b600080600060608486031215612f2e57600080fd5b8335612f3981612e48565b92506020840135612f4981612e48565b929592945050506040919091013590565b60005b83811015612f75578181015183820152602001612f5d565b50506000910152565b60008151808452612f96816020860160208601612f5a565b601f01601f19169290920160200192915050565b6020815260006109826020830184612f7e565b600060208284031215612fcf57600080fd5b8135612fda81612e48565b9392505050565b600060208284031215612ff357600080fd5b5035919050565b6000806040838503121561300d57600080fd5b823561301881612e48565b946020939093013593505050565b6000806040838503121561303957600080fd5b82359150602083013561304b81612e48565b809150509250929050565b6000806000806080858703121561306c57600080fd5b843561307781612e48565b9350602085013561308781612e48565b93969395505050506040820135916060013590565b602080825282518282018190526000919060409081850190868401855b828110156130f157815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016130b9565b5091979650505050505050565b801515811461097357600080fd5b6000806000806080858703121561312257600080fd5b843561312d81612e48565b9350602085013561313d81612e48565b9250604085013591506060850135613154816130fe565b939692955090935050565b60008083601f84011261317157600080fd5b50813567ffffffffffffffff81111561318957600080fd5b6020830191508360208260051b8501011115612e9f57600080fd5b6000604082840312156131b657600080fd5b50919050565b600080600080600080600080600060e08a8c0312156131da57600080fd5b893567ffffffffffffffff808211156131f257600080fd5b818c0191508c601f83011261320657600080fd5b81358181111561321557600080fd5b8d60208260061b850101111561322a57600080fd5b60209283019b509950908b0135908082111561324557600080fd5b6132518d838e0161315f565b909950975060408c013591508082111561326a57600080fd5b506132778c828d01612e5d565b909650945061328b90508b60608c016131a4565b925060a08a0135915060c08a013590509295985092959850929598565b600181811c908216806132bc57607f821691505b6020821081036131b657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610985576109856132dc565b60006020828403121561331757600080fd5b5051919050565b60006020828403121561333057600080fd5b8151612fda81612e48565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561337a57600080fd5b825161338581612e48565b6020939093015192949293505050565b6000600182016133a7576133a76132dc565b5060010190565b80820180821115610985576109856132dc565b8082028115828204841417610985576109856132dc565b6000826133f557634e487b7160e01b600052601260045260246000fd5b500490565b60006040828403121561340c57600080fd5b6040516040810181811067ffffffffffffffff8211171561343d57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b60008060006060848603121561346c57600080fd5b835161347781612e48565b602085015160409095015190969495509392505050565b8054600090600181811c90808316806134a857607f831692505b602080841082036134c957634e487b7160e01b600052602260045260246000fd5b838852602088018280156134e457600181146134fa57613525565b60ff198716825285151560051b82019750613525565b60008981526020902060005b8781101561351f57815484820152908601908401613506565b83019850505b5050505050505092915050565b60006001600160a01b0380871683528560208401526080604084015261355b608084018661348e565b915080841660608401525095945050505050565b60006001600160a01b038088168352808716602084015285604084015260a060608401526135a060a084018661348e565b91508084166080840152509695505050505050565b600080604083850312156135c857600080fd5b505080516020909101519092909150565b60006001600160a01b03808a168352808916602084015287604084015260e0606084015261360a60e084018861348e565b951660808301525060a081019290925260c090910152949350505050565b60006020828403121561363a57600080fd5b8151612fda816130fe565b60006001600160a01b038086168352808516602084015250606060408301526136716060830184612f7e565b95945050505050565b6000825161368c818460208701612f5a565b9190910192915050565b60006001600160a01b03808916835287602084015260c060408401526136bf60c084018861348e565b9581166060840152608083019490945250911660a0909101529392505050565b60006001600160a01b03808916835287602084015260c0604084015261370860c084018861348e565b9516606083015250608081019290925260a090910152939250505056fea2646970667358221220a8b841f8624148dd50cda1e68ab051fff0b991e86d630db17416acbbcf03c76f64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setChargedParticles(address)": {
        "details": "Setup the ChargedParticles Interface"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 158,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 259,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 5227,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_weth",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 5229,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_proton",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 5231,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_chargedParticles",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 5233,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_chargedState",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5235,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_treasury",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 5237,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_protocolFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 5241,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_bundlersById",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 5245,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_packPriceByPackId",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 5250,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_bundlesByPackId",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 5254,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_referrerBalance",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5257,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_cpWalletManager",
        "offset": 0,
        "slot": "12",
        "type": "t_string_storage"
      },
      {
        "astId": 5260,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_cpBasketManager",
        "offset": 0,
        "slot": "13",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}