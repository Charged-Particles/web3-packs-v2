{
  "address": "0x34b0b4a124c521C3616328dBFf1d0204f6EDC6F8",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "weth",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidityRouter",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bundlerId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            },
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.RouterConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bundlerId",
          "type": "bytes32"
        }
      ],
      "name": "BundlerNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundingFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "name": "InsufficientForFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedTokens",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MissingLiquidityUUID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeAssetTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoBundlesInPack",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerOrApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "UnsucessfulSwap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "BundledTokenLP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BundledTokenSS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC1155",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckEther",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_bundlerId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_liquidityRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_poolId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_slippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_swapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tickLower",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tickUpper",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "bundle",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lpTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.LiquidityPosition",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "collectLpFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "createLiquidityPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceToken0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balanceToken0",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceToken1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balanceToken1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceWeth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balanceWeth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidityAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getLiquidityToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getOrderedAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken0",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.Token",
          "name": "token0",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.Token",
          "name": "token1",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getTokenPath",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.Route[]",
          "name": "tokenPath",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lpTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.LiquidityPosition",
          "name": "liquidityPosition",
          "type": "tuple"
        }
      ],
      "name": "removeLiquidityPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "setLiquidityRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "slippage",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "setSwapRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        }
      ],
      "name": "setTickLower",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "name": "setTickUpper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "weth",
          "type": "address"
        }
      ],
      "name": "setWeth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percentOfAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "swapCustom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percentOfAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "swapSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellAll",
          "type": "bool"
        }
      ],
      "name": "unbundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethAmountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0f4e786e4f4e51d8330d69475628fd1f44230e7b38c60a2d51357d219d73319e",
  "receipt": {
    "to": null,
    "from": "0xb8D175F16742395F530e0b3bC1d30BD06B78CdA9",
    "contractAddress": "0x34b0b4a124c521C3616328dBFf1d0204f6EDC6F8",
    "transactionIndex": 2,
    "gasUsed": "3251292",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000020000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000020000000000000000000000000000000000000010000000000000000000002000000",
    "blockHash": "0x28e7f2bc5a71ef7686f17a66a2a6c54c343434d8bdc190d25607bb22a8b27c6a",
    "transactionHash": "0x0f4e786e4f4e51d8330d69475628fd1f44230e7b38c60a2d51357d219d73319e",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 20905763,
        "transactionHash": "0x0f4e786e4f4e51d8330d69475628fd1f44230e7b38c60a2d51357d219d73319e",
        "address": "0x34b0b4a124c521C3616328dBFf1d0204f6EDC6F8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b8d175f16742395f530e0b3bc1d30bd06b78cda9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x28e7f2bc5a71ef7686f17a66a2a6c54c343434d8bdc190d25607bb22a8b27c6a"
      }
    ],
    "blockNumber": 20905763,
    "cumulativeGasUsed": "3856019",
    "status": 1,
    "byzantium": true
  },
  "args": [
    {
      "weth": "0x4200000000000000000000000000000000000006",
      "token0": "0x4200000000000000000000000000000000000006",
      "token1": "0xFDa619b6d20975be80A10332cD39b9a4b0FAa8BB",
      "manager": "0xEEC393142db33eb94C18f3d5514888Ad5e7BECc2",
      "swapRouter": "0xc1e624C810D297FD70eF53B0E08F44FABE468591",
      "liquidityRouter": "0xc1e624C810D297FD70eF53B0E08F44FABE468591",
      "poolId": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "bundlerId": "0x53532d574554482d534d44000000000000000000000000000000000000000000",
      "slippage": "900",
      "tickLower": "-887220",
      "tickUpper": "887220"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "d8b852bd036582cb15fa077fe9c1fdff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityRouter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct IWeb3PacksDefs.RouterConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"}],\"name\":\"BundlerNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundingFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"InsufficientForFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MissingLiquidityUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeAssetTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBundlesInPack\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"UnsucessfulSwap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"BundledTokenLP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BundledTokenSS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckEther\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_bundlerId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tickLower\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tickUpper\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"bundle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"internalType\":\"struct IWeb3PacksDefs.LiquidityPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"collectLpFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"createLiquidityPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceToken0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken0\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceToken1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceWeth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceWeth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getLiquidityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getOrderedAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken0\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"internalType\":\"struct IWeb3PacksDefs.Token\",\"name\":\"token0\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"internalType\":\"struct IWeb3PacksDefs.Token\",\"name\":\"token1\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getTokenPath\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"internalType\":\"struct IWeb3PacksDefs.Route[]\",\"name\":\"tokenPath\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"internalType\":\"struct IWeb3PacksDefs.LiquidityPosition\",\"name\":\"liquidityPosition\",\"type\":\"tuple\"}],\"name\":\"removeLiquidityPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setLiquidityRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"}],\"name\":\"setTickLower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"setTickUpper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"setWeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentOfAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"swapCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentOfAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"swapSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellAll\",\"type\":\"bool\"}],\"name\":\"unbundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLiquidityAmounts()\":{\"details\":\"This can be overridden to specify custom amounts for swapping\"},\"getLiquidityToken(uint256)\":{\"details\":\"This can be overridden to specify custom liquidity tokens\"},\"getOrderedAssets(bool)\":{\"details\":\"This can be overridden to specify custom ordering for swapping\"},\"getToken0()\":{\"details\":\"This should be overridden if Token0 is not WETH\"},\"getToken1()\":{\"details\":\"This should be overridden if Token1 is not WETH\"},\"getTokenPath(bool)\":{\"details\":\"This can be overridden to specify custom routes/paths for swapping\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/mode/bundlers/SSWethSmd.sol\":\"SSWethSmd\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0xfc10758fd8dba790c39468dccd358cb7cef06ae7c4781832cc7aa76f91f167e6\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IWeb3PacksBundler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksBundler.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\n\\ninterface IWeb3PacksBundler {\\n  event BundledTokenSS(address indexed token, uint256 amount);\\n  event BundledTokenLP(address indexed token0, address indexed token1, uint256 amount0, uint256 amount1, uint256 liquidity);\\n\\n  function getLiquidityToken(uint256 packTokenId) external returns (address tokenAddress, uint256 tokenId);\\n\\n  function bundle(uint256 packTokenId, address sender)\\n    payable\\n    external\\n    returns(\\n      address tokenAddress,\\n      uint256 amountOut,\\n      uint256 nftTokenId\\n    );\\n\\n  function unbundle(address payable receiver, uint256 packTokenId, bool sellAll)\\n    external\\n    returns(uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x5503608e26e5cc8feaf1216d25f865c7f163ae4f852343f05b8a95478279f4f6\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksDefs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksDefs.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\ninterface IWeb3PacksDefs {\\n  // Custom Errors\\n  error NotOwnerOrApproved();\\n  error FundingFailed();\\n  error NullReceiver();\\n  error ContractNotAllowed();\\n  error NativeAssetTransferFailed();\\n  error MismatchedTokens();\\n  error NoBundlesInPack();\\n  error BundlerNotRegistered(bytes32 bundlerId);\\n  error MissingLiquidityUUID(address tokenAddress);\\n  error UnsucessfulSwap(address tokenOut, uint256 amountIn, address router);\\n  error InsufficientForFee(uint256 value, uint256 ethPackPrice, uint256 protocolFee);\\n\\n  struct RouterConfig {\\n    address weth;\\n    address token0;\\n    address token1;\\n    address manager;\\n    address swapRouter;\\n    address liquidityRouter;\\n    bytes32 poolId;\\n    bytes32 bundlerId;\\n    uint256 slippage;\\n    int24 tickLower;\\n    int24 tickUpper;\\n  }\\n\\n  struct BundleChunk {\\n    bytes32 bundlerId;\\n    uint256 percentBasisPoints;\\n  }\\n\\n  struct Token {\\n    address tokenAddress;\\n    uint256 tokenDecimals;\\n    string tokenSymbol;\\n  }\\n\\n  struct TokenAmount {\\n    address tokenAddress;\\n    uint256 balance;\\n    uint256 nftTokenId;\\n  }\\n\\n  struct Route {\\n    address token0;\\n    address token1;\\n    bool stable;\\n  }\\n\\n  struct LiquidityPosition {\\n    uint256 lpTokenId;\\n    uint256 liquidity;\\n    bool stable;\\n  }\\n\\n  struct LockState {\\n    uint256 ERC20Timelock;\\n    uint256 ERC721Timelock;\\n  }\\n}\\n\",\"keccak256\":\"0x9fdc33469c45f85edc79101536406fb5d60282f5eb9006a07c0389f8c5f29e9b\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksRouter.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\nimport \\\"./IWeb3PacksDefs.sol\\\";\\n\\ninterface IWeb3PacksRouter is IWeb3PacksDefs {\\n  function getToken0() external returns (IWeb3PacksDefs.Token calldata token0);\\n  function getToken1() external returns (IWeb3PacksDefs.Token calldata token1);\\n\\n  function getTokenPath(bool reverse) external returns (IWeb3PacksDefs.Route[] memory tokenPath);\\n  function getOrderedAssets(bool reverse) external returns (address[] memory assets, uint256[] memory amounts);\\n  function getLiquidityAmounts() external returns (uint256 amount0, uint256 amount1, uint256 minAmount0, uint256 minAmount1);\\n\\n  function getBalanceToken0() external returns (uint256 balanceToken0);\\n  function getBalanceToken1() external returns (uint256 balanceToken1);\\n  function getBalanceWeth() external returns (uint256 balanceWeth);\\n\\n  function swapSingle(uint256 percentOfAmount, bool reverse)\\n    external\\n    returns (uint256 amountOut);\\n\\n  function swapCustom(uint256 percentOfAmount, address token0, address token1)\\n    external\\n    returns (uint256 amountOut);\\n\\n  function createLiquidityPosition(bool stable)\\n    external\\n    returns (\\n      uint256 lpTokenId,\\n      uint256 liquidity,\\n      uint256 amount0,\\n      uint256 amount1\\n    );\\n\\n  function collectLpFees(IWeb3PacksDefs.LiquidityPosition calldata liquidityPosition)\\n    external\\n    returns (uint256 amount0, uint256 amount1);\\n\\n  function removeLiquidityPosition(IWeb3PacksDefs.LiquidityPosition calldata liquidityPosition)\\n    external\\n    returns (uint amount0, uint amount1);\\n}\\n\",\"keccak256\":\"0xf1780b9b0896259c4c184347ea6ff8990e8ac8434bd3abc0534513e35d2c8b9b\",\"license\":\"MIT\"},\"contracts/interfaces/mode/IPancakeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IFeeSharing {\\n    function assign(uint256 _tokenId) external returns (uint256);\\n}\\n\\ninterface IProtocolToken {\\n    function feeShareContract() external view returns (IFeeSharing);\\n\\n    function feeShareTokenId() external view returns (uint256);\\n}\\n\\ninterface IPancakeFactory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n\\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\\n\\n    function protocolToken() external view returns (IProtocolToken);\\n}\\n\",\"keccak256\":\"0xc373654ec50f3f91191ad6a71891f817606447438c863f691f7b1555e9ad7c8a\",\"license\":\"MIT\"},\"contracts/interfaces/mode/IPancakeRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IPancakeRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ninterface IPancakeRouter02 is IPancakeRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfe19e4e8a6b7b761e5df7b386af4794eeeec7d87667f79031087c95cbe2cc161\",\"license\":\"MIT\"},\"contracts/lib/BlackholePrevention.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// BlackholePrevention.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\n/**\\n * @notice Prevents ETH or Tokens from getting stuck in a contract by allowing\\n *  the Owner/DAO to pull them out on behalf of a user\\n * This is only meant to contracts that are not expected to hold tokens, but do handle transferring them.\\n */\\ncontract BlackholePrevention {\\n    using Address for address payable;\\n    using SafeERC20 for IERC20;\\n\\n    event WithdrawStuckEther(address indexed receiver, uint256 amount);\\n    event WithdrawStuckERC20(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 amount\\n    );\\n    event WithdrawStuckERC721(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId\\n    );\\n    event WithdrawStuckERC1155(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    function _withdrawEther(address payable receiver, uint256 amount)\\n        internal\\n        virtual\\n    {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (address(this).balance >= amount) {\\n            receiver.sendValue(amount);\\n            emit WithdrawStuckEther(receiver, amount);\\n        }\\n    }\\n\\n    function _withdrawERC20(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC20(tokenAddress).balanceOf(address(this)) >= amount) {\\n            IERC20(tokenAddress).safeTransfer(receiver, amount);\\n            emit WithdrawStuckERC20(receiver, tokenAddress, amount);\\n        }\\n    }\\n\\n    function _withdrawERC721(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC721(tokenAddress).ownerOf(tokenId) == address(this)) {\\n            IERC721(tokenAddress).transferFrom(\\n                address(this),\\n                receiver,\\n                tokenId\\n            );\\n            emit WithdrawStuckERC721(receiver, tokenAddress, tokenId);\\n        }\\n    }\\n\\n    function _withdrawERC1155(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (\\n            IERC1155(tokenAddress).balanceOf(address(this), tokenId) >= amount\\n        ) {\\n            IERC1155(tokenAddress).safeTransferFrom(\\n                address(this),\\n                receiver,\\n                tokenId,\\n                amount,\\n                \\\"\\\"\\n            );\\n            emit WithdrawStuckERC1155(receiver, tokenAddress, tokenId, amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa7de406bd3b1092f8222d3eb1e2a990381429a5cb6bab48a811ff7118a43746\",\"license\":\"MIT\"},\"contracts/lib/Web3PacksRouterBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Web3PacksRouterBase.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"./BlackholePrevention.sol\\\";\\nimport \\\"../interfaces/IWeb3PacksRouter.sol\\\";\\nimport \\\"../interfaces/IWeb3PacksDefs.sol\\\";\\n\\nabstract contract Web3PacksRouterBase is\\n  IWeb3PacksRouter,\\n  Ownable,\\n  BlackholePrevention\\n{\\n  using Address for address payable;\\n\\n  address public _weth;\\n  address public _manager;\\n  address public _token0;\\n  address public _token1;\\n\\n  address public _swapRouter;\\n  address public _liquidityRouter;\\n  bytes32 public _poolId;\\n\\n  // The ID Associated with this Bundler (must be Registered with Web3Packs)\\n  bytes32 public _bundlerId;\\n\\n  uint256 public _slippage;\\n  int24 public _tickLower;\\n  int24 public _tickUpper;\\n\\n  // Store Liquidity Positions by Pack Token ID\\n  mapping(uint256 => IWeb3PacksDefs.LiquidityPosition) internal _liquidityPositionsByTokenId;\\n\\n  constructor(IWeb3PacksDefs.RouterConfig memory config) {\\n    _weth = config.weth;\\n    _token0 = config.token0;\\n    _token1 = config.token1;\\n    _manager = config.manager;\\n    _swapRouter = config.swapRouter;\\n    _liquidityRouter = config.liquidityRouter;\\n    _poolId = config.poolId;\\n    _bundlerId = config.bundlerId;\\n    _slippage = config.slippage;\\n    _tickLower = config.tickLower;\\n    _tickUpper = config.tickUpper;\\n  }\\n\\n  receive() external payable {}\\n\\n  /***********************************|\\n  |          Configuration            |\\n  |__________________________________*/\\n\\n  /// @dev This should be overridden if Token0 is not WETH\\n  function getToken0() public virtual view returns (IWeb3PacksDefs.Token memory token0) {\\n    IWeb3PacksDefs.Token memory token = IWeb3PacksDefs.Token({\\n      tokenAddress: _weth,\\n      tokenDecimals: 18,\\n      tokenSymbol: \\\"WETH\\\"\\n    });\\n    return token;\\n  }\\n\\n  /// @dev This should be overridden if Token1 is not WETH\\n  function getToken1() public virtual view returns (IWeb3PacksDefs.Token memory token1) {\\n    IWeb3PacksDefs.Token memory token = IWeb3PacksDefs.Token({\\n      tokenAddress: _weth,\\n      tokenDecimals: 18,\\n      tokenSymbol: \\\"WETH\\\"\\n    });\\n    return token;\\n  }\\n\\n  /// @dev This can be overridden to specify custom routes/paths for swapping\\n  function getTokenPath(bool reverse) public virtual view returns (IWeb3PacksDefs.Route[] memory tokenPath) {\\n    IWeb3PacksDefs.Route[] memory tokens = new IWeb3PacksDefs.Route[](1);\\n    tokens[0] = reverse\\n      ? IWeb3PacksDefs.Route({token0: getToken1().tokenAddress, token1: getToken0().tokenAddress, stable: false})\\n      : IWeb3PacksDefs.Route({token0: getToken0().tokenAddress, token1: getToken1().tokenAddress, stable: false});\\n    return tokens;\\n  }\\n\\n  /// @dev This can be overridden to specify custom ordering for swapping\\n  function getOrderedAssets(bool reverse) public virtual view returns (address[] memory, uint256[] memory) {\\n    address[] memory assets = new address[](2);\\n    assets[0] = reverse ? getToken1().tokenAddress : getToken0().tokenAddress;\\n    assets[1] = reverse ? getToken0().tokenAddress : getToken1().tokenAddress;\\n\\n    uint256[] memory amounts = new uint256[](2);\\n    amounts[0] = reverse ? getBalanceToken1() : getBalanceToken0();\\n    amounts[1] = reverse ? getBalanceToken0() : getBalanceToken1();\\n\\n    return (assets, amounts);\\n  }\\n\\n  /// @dev This can be overridden to specify custom amounts for swapping\\n  function getLiquidityAmounts() public virtual view returns (uint256 amount0, uint256 amount1, uint256 minAmount0, uint256 minAmount1) {\\n    amount0 = getBalanceToken0();\\n    amount1 = getBalanceToken1();\\n    minAmount0 = (amount0 * (10000 - _slippage)) / 10000;\\n    minAmount1 = (amount1 * (10000 - _slippage)) / 10000;\\n  }\\n\\n  /***********************************|\\n  |          Standard Code            |\\n  |__________________________________*/\\n\\n  function getBalanceWeth() public virtual view returns (uint256 balanceWeth) {\\n    return IERC20(_weth).balanceOf(address(this));\\n  }\\n\\n  function getBalanceToken0() public virtual view returns (uint256 balanceToken0) {\\n    return IERC20(getToken0().tokenAddress).balanceOf(address(this));\\n  }\\n\\n  function getBalanceToken1() public virtual view returns (uint256 balanceToken1) {\\n    return IERC20(getToken1().tokenAddress).balanceOf(address(this));\\n  }\\n\\n  function enterWeth(uint256 amount) internal virtual {\\n    IWETH(_weth).deposit{value: amount}();\\n  }\\n\\n  function exitWethAndTransfer(address payable receiver) internal virtual returns (uint256 ethAmount) {\\n    uint256 wethBalance = getBalanceWeth();\\n    if (wethBalance > 0) {\\n      IWETH(_weth).withdraw(wethBalance);\\n    }\\n    ethAmount = address(this).balance;\\n    if (ethAmount > 0) {\\n      receiver.sendValue(ethAmount);\\n    }\\n  }\\n\\n  function refundUnusedTokens(address sender) internal virtual returns (uint256 unusedAmount0, uint256 unusedAmount1) {\\n    // Refund Unused Amounts\\n    unusedAmount0 = getBalanceToken0();\\n    if (unusedAmount0 > 0) {\\n      TransferHelper.safeTransfer(getToken0().tokenAddress, sender, unusedAmount0);\\n    }\\n    unusedAmount1 = getBalanceToken1();\\n    if (unusedAmount1 > 0) {\\n      TransferHelper.safeTransfer(getToken1().tokenAddress, sender, unusedAmount1);\\n    }\\n  }\\n\\n  function onERC721Received(\\n    address,\\n    address,\\n    uint256,\\n    bytes calldata\\n  ) external virtual pure returns(bytes4) {\\n    return this.onERC721Received.selector;\\n  }\\n\\n  /***********************************|\\n  |          Only Admin/DAO           |\\n  |      (blackhole prevention)       |\\n  |__________________________________*/\\n\\n  function setWeth(address weth) external virtual onlyOwner {\\n    _weth = weth;\\n  }\\n\\n  function setSwapRouter(address router) external virtual onlyOwner {\\n    _swapRouter = router;\\n  }\\n\\n  function setLiquidityRouter(address router) external virtual onlyOwner {\\n    _liquidityRouter = router;\\n  }\\n\\n  function setManager(address manager) external virtual onlyOwner {\\n    _manager = manager;\\n  }\\n\\n  function setSlippage(uint256 slippage) external virtual onlyOwner {\\n    _slippage = slippage;\\n  }\\n\\n  function setTickLower(int24 tickLower) external virtual onlyOwner {\\n    _tickLower = tickLower;\\n  }\\n\\n  function setTickUpper(int24 tickUpper) external virtual onlyOwner {\\n    _tickUpper = tickUpper;\\n  }\\n\\n  function withdrawEther(address payable receiver, uint256 amount) external virtual onlyOwner {\\n    _withdrawEther(receiver, amount);\\n  }\\n\\n  function withdrawErc20(address payable receiver, address tokenAddress, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC20(receiver, tokenAddress, amount);\\n  }\\n\\n  function withdrawERC721(address payable receiver, address tokenAddress, uint256 tokenId) external virtual onlyOwner {\\n    _withdrawERC721(receiver, tokenAddress, tokenId);\\n  }\\n\\n  function withdrawERC1155(address payable receiver, address tokenAddress, uint256 tokenId, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC1155(receiver, tokenAddress, tokenId, amount);\\n  }\\n\\n\\n  modifier onlyManagerOrSelf() {\\n    require(msg.sender == _manager || msg.sender == address(this), \\\"Web3PacksRouterBase - Invalid Web3Packs Manager\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xd9c0d6a3bf431f8448dc9c5efa34e10532b7f841d3b024d2be14bdaf9c991f1c\",\"license\":\"MIT\"},\"contracts/lib/mode/bundlers/SSWethSmd.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// SSWethSmd.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"../routers/PancakeRouter.sol\\\";\\nimport \\\"../../../interfaces/IWeb3PacksBundler.sol\\\";\\n\\n/*\\n  Performs a Single-Sided Swap on SwapMode Exchange using the Pancake Router\\n  Token 0 = WETH\\n  Token 1 = SMD\\n */\\ncontract SSWethSmd is IWeb3PacksBundler, PancakeRouter {\\n  // Inherit from the Pancake Router\\n  constructor(IWeb3PacksDefs.RouterConfig memory config) PancakeRouter(config) {}\\n\\n  /***********************************|\\n  |          Configuration            |\\n  |__________________________________*/\\n\\n  // Token 1 = SMD on Mode (SwapMode Exchange)\\n  function getToken1() public view override returns (IWeb3PacksDefs.Token memory token1) {\\n    IWeb3PacksDefs.Token memory token = IWeb3PacksDefs.Token({\\n      tokenAddress: _token1,\\n      tokenDecimals: 18,\\n      tokenSymbol: \\\"SMD\\\"\\n    });\\n    return token;\\n  }\\n\\n  /// @dev This can be overridden to specify custom liquidity tokens\\n  function getLiquidityToken(uint256) public virtual view returns (address tokenAddress, uint256 tokenId) {\\n    tokenAddress = getToken1().tokenAddress;\\n    tokenId = 0;\\n  }\\n\\n  /***********************************|\\n  |          Standard Code            |\\n  |__________________________________*/\\n\\n  function bundle(uint256, address sender)\\n    payable\\n    external\\n    override\\n    onlyManagerOrSelf\\n    returns(\\n      address tokenAddress,\\n      uint256 amountOut,\\n      uint256 nftTokenId\\n    )\\n  {\\n    // Perform Swap\\n    amountOut = swapSingle(10000, false); // 100% token0 -> token1\\n\\n    // Transfer back to Manager\\n    tokenAddress = getToken1().tokenAddress;\\n    nftTokenId = 0;\\n    TransferHelper.safeTransfer(tokenAddress, _manager, amountOut);\\n\\n    // Refund Unused Amounts\\n    refundUnusedTokens(sender);\\n    emit BundledTokenSS(tokenAddress, amountOut);\\n  }\\n\\n  function unbundle(address payable receiver, uint256, bool sellAll)\\n    external\\n    override\\n    onlyManagerOrSelf\\n    returns(uint256 ethAmountOut)\\n  {\\n    if (sellAll) {\\n      // Perform Swap\\n      swapSingle(10000, true); // 100% token1 -> token0\\n\\n      // Send ETH to Receiver\\n      ethAmountOut = exitWethAndTransfer(receiver);\\n    } else {\\n      // Send Token to Receiver\\n      TransferHelper.safeTransfer(getToken1().tokenAddress, receiver, getBalanceToken1());\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xa1d73370e90822cce7b0f79a3d20ad487ee0af0af5afc0236a22e2ba2b95149e\",\"license\":\"MIT\"},\"contracts/lib/mode/routers/PancakeRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// PancakeRouter.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"../../Web3PacksRouterBase.sol\\\";\\nimport \\\"../../../interfaces/IWeb3PacksDefs.sol\\\";\\nimport \\\"../../../interfaces/mode/IPancakeRouter02.sol\\\";\\nimport \\\"../../../interfaces/mode/IPancakeFactory.sol\\\";\\n\\n\\n// UniswapV2-like Router\\nabstract contract PancakeRouter is Web3PacksRouterBase {\\n  // Pass constructor data\\n  constructor(IWeb3PacksDefs.RouterConfig memory config) Web3PacksRouterBase(config) {}\\n\\n  function swapSingle(uint256 percentOfAmount, bool reverse)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amountOut)\\n  {\\n    IWeb3PacksDefs.Token memory token0 = reverse ? getToken1() : getToken0();\\n    IWeb3PacksDefs.Token memory token1 = reverse ? getToken0() : getToken1();\\n    amountOut = _performSwap(percentOfAmount, token0.tokenAddress, token1.tokenAddress);\\n  }\\n\\n  function swapCustom(uint256 percentOfAmount, address token0, address token1)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amountOut)\\n  {\\n    amountOut = _performSwap(percentOfAmount, token0, token1);\\n  }\\n\\n  function createLiquidityPosition(bool)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (\\n      uint256 lpTokenId,\\n      uint256 liquidity,\\n      uint256 amount0,\\n      uint256 amount1\\n    )\\n  {\\n    IWeb3PacksDefs.Token memory token0 = getToken0();\\n    IWeb3PacksDefs.Token memory token1 = getToken1();\\n    (\\n      uint256 balanceAmount0,\\n      uint256 balanceAmount1,\\n      uint256 minAmount0,\\n      uint256 minAmount1\\n    ) = getLiquidityAmounts();\\n\\n    TransferHelper.safeApprove(token0.tokenAddress, _liquidityRouter, balanceAmount0);\\n    TransferHelper.safeApprove(token1.tokenAddress, _liquidityRouter, balanceAmount1);\\n\\n    // Add Liquidity\\n    (amount0, amount1, liquidity) = IPancakeRouter02(_liquidityRouter).addLiquidity(\\n      token0.tokenAddress,\\n      token1.tokenAddress,\\n      balanceAmount0,\\n      balanceAmount1,\\n      minAmount0,\\n      minAmount1,\\n      address(this),\\n      block.timestamp\\n    );\\n\\n    // Deposit the LP tokens into the Web3Packs NFT\\n    address lpTokenAddress = _getPancakePairAddress();\\n    lpTokenId = uint256(uint160(lpTokenAddress));\\n  }\\n\\n  function collectLpFees(IWeb3PacksDefs.LiquidityPosition memory)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amount0, uint256 amount1)\\n  {\\n    amount0 = 0;\\n    amount1 = 0;\\n  }\\n\\n  function removeLiquidityPosition(IWeb3PacksDefs.LiquidityPosition memory liquidityPosition)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint amount0, uint amount1)\\n  {\\n    IWeb3PacksDefs.Token memory token0 = getToken0();\\n    IWeb3PacksDefs.Token memory token1 = getToken1();\\n    address lpTokenAddress = _getPancakePairAddress();\\n\\n    TransferHelper.safeApprove(\\n      lpTokenAddress,\\n      _liquidityRouter,\\n      liquidityPosition.liquidity\\n    );\\n\\n    (amount0, amount1) = IPancakeRouter02(_liquidityRouter).removeLiquidity(\\n      token0.tokenAddress,\\n      token1.tokenAddress,\\n      liquidityPosition.liquidity,\\n      0,\\n      0,\\n      address(this),\\n      block.timestamp\\n    );\\n  }\\n\\n\\n  function _performSwap(uint256 percentOfAmount, address token0, address token1)\\n    internal\\n    returns (uint256 amountOut)\\n  {\\n    address[] memory routes = new address[](2);\\n    routes[0] = token0;\\n    routes[1] = token1;\\n\\n    uint256 balance = IERC20(token0).balanceOf(address(this));\\n    uint256 swapAmount = (balance * percentOfAmount) / 10000;\\n\\n    if (swapAmount > 0) {\\n      TransferHelper.safeApprove(token0, _swapRouter, swapAmount);\\n      IPancakeRouter02(_swapRouter).swapExactTokensForTokens(\\n        swapAmount,\\n        0,\\n        routes,\\n        address(this),\\n        block.timestamp\\n      );\\n      amountOut = IERC20(token1).balanceOf(address(this));\\n    }\\n  }\\n\\n  function _getPancakeFactory() internal view returns (address) {\\n    return IPancakeRouter02(_liquidityRouter).factory();\\n  }\\n\\n  function _getPancakePairAddress() internal view returns (address) {\\n    IWeb3PacksDefs.Token memory token0 = getToken0();\\n    IWeb3PacksDefs.Token memory token1 = getToken1();\\n    IPancakeFactory _factory = IPancakeFactory(_getPancakeFactory());\\n    return _factory.getPair(token0.tokenAddress, token1.tokenAddress);\\n  }\\n}\\n\",\"keccak256\":\"0xcbad17a469bb3b307cf3dcb83ca8462240a11fa6028d6eb5aa35c88e08280065\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003859380380620038598339810160408190526200003491620001d7565b808062000041336200011f565b8051600180546001600160a01b039283166001600160a01b03199182161790915560208301516003805491841691831691909117905560408301516004805491841691831691909117905560608301516002805491841691831691909117905560808301516005805491841691831691909117905560a08301516006805491909316911617905560c081015160075560e0810151600855610100810151600955610120810151600a80546101409093015162ffffff90811663010000000265ffffffffffff1990941692169190911791909117905550620002b09050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405161016081016001600160401b0381118282101715620001a157634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620001bf57600080fd5b919050565b8051600281900b8114620001bf57600080fd5b60006101608284031215620001eb57600080fd5b620001f56200016f565b6200020083620001a7565b81526200021060208401620001a7565b60208201526200022360408401620001a7565b60408201526200023660608401620001a7565b60608201526200024960808401620001a7565b60808201526200025c60a08401620001a7565b60a082015260c083015160c082015260e083015160e082015261010080840151818301525061012062000291818501620001c4565b90820152610140620002a5848201620001c4565b908201529392505050565b61359980620002c06000396000f3fe6080604052600436106102d55760003560e01c8063a176459511610179578063cc427bad116100d6578063e6ef0f661161008a578063f0fa55a911610064578063f0fa55a914610928578063f2fde38b14610948578063f54da1e21461096857600080fd5b8063e6ef0f66146108d8578063e7d0c498146108ee578063f0329f6b1461090857600080fd5b8063d0ebdbe7116100bb578063d0ebdbe714610882578063d8102529146108a2578063daa63ae2146108b857600080fd5b8063cc427bad14610842578063cd6e18f11461086257600080fd5b8063b30d0aa21161012d578063ba94a31511610112578063ba94a31514610784578063bfe075e0146107ee578063cb75436b1461082d57600080fd5b8063b30d0aa21461072f578063b8d1452f1461076457600080fd5b8063a5835ff91161015e578063a5835ff9146106cf578063a7755866146106ef578063a7cfa4511461070f57600080fd5b8063a176459514610681578063a2d003c7146106a157600080fd5b8063496b35b9116102325780637440d0fb116101e65780638da5cb5b116101c05780638da5cb5b146106165780638db738b114610634578063a0edb48b1461066157600080fd5b80637440d0fb146105c157806385497dc1146105e157806387e36e601461060157600080fd5b8063522f681511610217578063522f68151461051a5780636f26a7101461053a578063715018a6146105ac57600080fd5b8063496b35b9146104da5780634ef4ebaf146104fa57600080fd5b806320ff415f116102895780634025feb21161026e5780634025feb214610477578063412736571461049757806346fc8a77146104b757600080fd5b806320ff415f14610422578063221ea0751461045757600080fd5b80631593dee1116102ba5780631593dee1146103905780631b22a4f0146103b2578063206c17bb146103ea57600080fd5b80630f74be62146102e1578063150b7a021461031a57600080fd5b366102dc57005b600080fd5b3480156102ed57600080fd5b50600a54610302906301000000900460020b81565b60405160029190910b81526020015b60405180910390f35b34801561032657600080fd5b5061035f610335366004612e58565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610311565b34801561039c57600080fd5b506103b06103ab366004612ef7565b61097e565b005b6103c56103c0366004612f38565b610996565b604080516001600160a01b039094168452602084019290925290820152606001610311565b3480156103f657600080fd5b5060055461040a906001600160a01b031681565b6040516001600160a01b039091168152602001610311565b34801561042e57600080fd5b5061044261043d366004612fbd565b610aff565b60408051928352602083019190915201610311565b34801561046357600080fd5b506103b061047236600461301f565b610b8b565b34801561048357600080fd5b506103b0610492366004612ef7565b610bad565b3480156104a357600080fd5b506103b06104b2366004613042565b610bc0565b3480156104c357600080fd5b506104cc610bea565b604051908152602001610311565b3480156104e657600080fd5b5060045461040a906001600160a01b031681565b34801561050657600080fd5b5060035461040a906001600160a01b031681565b34801561052657600080fd5b506103b061053536600461305f565b610cb9565b34801561054657600080fd5b5060408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b92810192909252918201525b60405161031191906130db565b3480156105b857600080fd5b506103b0610ccf565b3480156105cd57600080fd5b506104cc6105dc366004613113565b610ce3565b3480156105ed57600080fd5b506103b06105fc36600461301f565b610d75565b34801561060d57600080fd5b506104cc610da1565b34801561062257600080fd5b506000546001600160a01b031661040a565b34801561064057600080fd5b5061065461064f366004613155565b610e01565b6040516103119190613172565b34801561066d57600080fd5b506103b061067c3660046131d9565b61104c565b34801561068d57600080fd5b5060015461040a906001600160a01b031681565b3480156106ad57600080fd5b506106c16106bc366004613155565b611066565b604051610311929190613263565b3480156106db57600080fd5b506104cc6106ea3660046132ba565b611302565b3480156106fb57600080fd5b5061044261070a366004612fbd565b611519565b34801561071b57600080fd5b5060065461040a906001600160a01b031681565b34801561073b57600080fd5b5061074461174b565b604080519485526020850193909352918301526060820152608001610311565b34801561077057600080fd5b506103b061077f366004613042565b6117bd565b34801561079057600080fd5b5060408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015261059f565b3480156107fa57600080fd5b5061080e6108093660046132df565b6117e7565b604080516001600160a01b039093168352602083019190915201610311565b34801561083957600080fd5b506104cc611852565b34801561084e57600080fd5b506104cc61085d3660046132f8565b611883565b34801561086e57600080fd5b506103b061087d366004613042565b61199c565b34801561088e57600080fd5b506103b061089d366004613042565b6119c6565b3480156108ae57600080fd5b506104cc60075481565b3480156108c457600080fd5b506107446108d3366004613155565b6119f0565b3480156108e457600080fd5b506104cc60085481565b3480156108fa57600080fd5b50600a546103029060020b81565b34801561091457600080fd5b5060025461040a906001600160a01b031681565b34801561093457600080fd5b506103b06109433660046132df565b611c6c565b34801561095457600080fd5b506103b0610963366004613042565b611c79565b34801561097457600080fd5b506104cc60095481565b610986611d09565b610991838383611d63565b505050565b600254600090819081906001600160a01b03163314806109b557503330145b610a1e5760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b60648201526084015b60405180910390fd5b610a2b6127106000611302565b9150610a8a60408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b5160025490935060009150610aaa9084906001600160a01b031684611e7a565b610ab384611f95565b5050826001600160a01b03167feeb24a104634ac471bb06ef0ccbeb5ea3f19bc6a55af51c9096d0bf63fd83ab283604051610af091815260200190565b60405180910390a29250925092565b60025460009081906001600160a01b0316331480610b1c57503330145b610b805760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b6064820152608401610a15565b506000928392509050565b610b93611d09565b600a805462ffffff191662ffffff92909216919091179055565b610bb5611d09565b61099183838361208e565b610bc8611d09565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c4960408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b516040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024015b602060405180830381865afa158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb4919061332f565b905090565b610cc1611d09565b610ccb8282612229565b5050565b610cd7611d09565b610ce160006122cb565b565b6002546000906001600160a01b0316331480610cfe57503330145b610d625760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b6064820152608401610a15565b610d6d84848461231b565b949350505050565b610d7d611d09565b600a805462ffffff90921663010000000265ffffff00000019909216919091179055565b6000610c4960408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b60408051600180825281830190925260609160009190816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610e1c57905050905082610f3e576040518060600160405280610eb960408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b516001600160a01b03168152602001610f2560408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b516001600160a01b031681526000602090910152611028565b6040518060600160405280610fa660408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b516001600160a01b0316815260200161101360408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b516001600160a01b0316815260006020909101525b8160008151811061103b5761103b613348565b602090810291909101015292915050565b611054611d09565b6110608484848461254b565b50505050565b60408051600280825260608281019093528291600091816020016020820280368337019050509050836110f15760408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b92810192909252918201525161114a565b60408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b9281019290925291820152515b8160008151811061115d5761115d613348565b60200260200101906001600160a01b031690816001600160a01b031681525050836111df5760408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015251611239565b60408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b9281019290925291820152515b8160018151811061124c5761124c613348565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835260009391929091830190803683370190505090508461129957611294610da1565b6112a1565b6112a1610bea565b816000815181106112b4576112b4613348565b602002602001018181525050846112d2576112cd610bea565b6112da565b6112da610da1565b816001815181106112ed576112ed613348565b60209081029190910101529094909350915050565b6002546000906001600160a01b031633148061131d57503330145b6113815760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b6064820152608401610a15565b6000826113e55760408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015261143d565b60408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b92810192909252918201525b90506000836114a25760408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b92810192909252918201526114fb565b60408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b92810192909252918201525b9050611510858360000151836000015161231b565b95945050505050565b60025460009081906001600160a01b031633148061153657503330145b61159a5760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b6064820152608401610a15565b60006115fa60408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b9050600061165b60408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b90506000611667612704565b60065460208801519192506116879183916001600160a01b03169061286c565b6006548351835160208901516040517fbaa2abde0000000000000000000000000000000000000000000000000000000081526001600160a01b0393841660048201529183166024830152604482015260006064820181905260848201523060a48201524260c482015291169063baa2abde9060e40160408051808303816000875af115801561171a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173e919061335e565b9097909650945050505050565b600080600080611759610da1565b9350611763610bea565b92506127106009546127106117789190613398565b61178290866133b1565b61178c91906133c8565b91506127106009546127106117a19190613398565b6117ab90856133b1565b6117b591906133c8565b905090919293565b6117c5611d09565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008061184760408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b519360009350915050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610c73565b6002546000906001600160a01b031633148061189e57503330145b6119025760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b6064820152608401610a15565b8115611926576119156127106001611302565b5061191f84612999565b9050611995565b61199561198660408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b5185611990610bea565b611e7a565b9392505050565b6119a4611d09565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6119ce611d09565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546000908190819081906001600160a01b0316331480611a1157503330145b611a755760405162461bcd60e51b815260206004820152602f60248201527f576562335061636b73526f7574657242617365202d20496e76616c696420576560448201526e3119a830b1b5b99026b0b730b3b2b960891b6064820152608401610a15565b6000611ad560408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b90506000611b3660408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b9050600080600080611b4661174b565b89516006549498509296509094509250611b69916001600160a01b03168661286c565b8451600654611b8291906001600160a01b03168561286c565b600654865186516040517fe8e337000000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015260448101879052606481018690526084810185905260a481018490523060c48201524260e482015291169063e8e3370090610104016060604051808303816000875af1158015611c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3f91906133ea565b9a5090985096506000611c50612704565b9050806001600160a01b03169a50505050505050509193509193565b611c74611d09565b600955565b611c81611d09565b6001600160a01b038116611cfd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610a15565b611d06816122cb565b50565b6000546001600160a01b03163314610ce15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a15565b6001600160a01b038316611da55760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610a15565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015611deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0f919061332f565b1061099157611e286001600160a01b0383168483612a46565b816001600160a01b0316836001600160a01b03167f6c9d637297625e945b296ff73a71fcfbd0a9e062652b6491a921c4c60194176b83604051611e6d91815260200190565b60405180910390a3505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611ed69190613418565b6000604051808303816000865af19150503d8060008114611f13576040519150601f19603f3d011682016040523d82523d6000602084013e611f18565b606091505b5091509150818015611f42575080511580611f42575080806020019051810190611f429190613434565b611f8e5760405162461bcd60e51b815260206004820152600260248201527f53540000000000000000000000000000000000000000000000000000000000006044820152606401610a15565b5050505050565b600080611fa0610da1565b915081156120115761201161200960408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b518484611e7a565b612019610bea565b905080156120895761208961208160408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b518483611e7a565b915091565b6001600160a01b0383166120d05760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610a15565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa158015612130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121549190613451565b6001600160a01b031603610991576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906323b872dd90606401600060405180830381600087803b1580156121cb57600080fd5b505af11580156121df573d6000803e3d6000fd5b5050505080826001600160a01b0316846001600160a01b03167ffefe036cac4ee3a4aca074a81cbcc4376e1484693289078dbec149c890101d5b60405160405180910390a4505050565b6001600160a01b03821661226b5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610a15565b804710610ccb576122856001600160a01b03831682612a98565b816001600160a01b03167eddb683bb45cd5d0ad8a200c6fae7152b1c236ee90a4a37db692407f5cc38bd826040516122bf91815260200190565b60405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051600280825260608201835260009283929190602083019080368337019050509050838160008151811061235457612354613348565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061238857612388613348565b6001600160a01b0392831660209182029290920101526040516370a0823160e01b81523060048201526000918616906370a0823190602401602060405180830381865afa1580156123dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612401919061332f565b9050600061271061241288846133b1565b61241c91906133c8565b905080156125415760055461243c9087906001600160a01b03168361286c565b6005546040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906338ed17399061248e90849060009088903090429060040161346e565b6000604051808303816000875af11580156124ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124d591908101906134aa565b506040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa15801561251a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253e919061332f565b93505b5050509392505050565b6001600160a01b03841661258d5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610a15565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905281906001600160a01b0385169062fdd58e90604401602060405180830381865afa1580156125f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612615919061332f565b10611060576040517ff242432a0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b15801561269857600080fd5b505af11580156126ac573d6000803e3d6000fd5b5050505081836001600160a01b0316856001600160a01b03167f620337bf89eea2b9ae2657beead83b5fa620452817118348aff96e201d52598b846040516126f691815260200190565b60405180910390a450505050565b60008061276560408051606080820183526000808352602080840191909152918301819052825190810183526001546001600160a01b031681526012818301528251808401845260048152630ae8aa8960e31b928101929092529182015290565b905060006127c660408051606080820183526000808352602080840191909152918301819052825190810183526004546001600160a01b0316815260128183015282518084018452600381526214d35160ea1b928101929092529182015290565b905060006127d2612bb1565b835183516040517fe6a439050000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015291925082169063e6a4390590604401602060405180830381865afa158015612840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128649190613451565b935050505090565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b30000000000000000000000000000000000000000000000000000000017905291516000928392908716916128e19190613418565b6000604051808303816000865af19150503d806000811461291e576040519150601f19603f3d011682016040523d82523d6000602084013e612923565b606091505b509150915081801561294d57508051158061294d57508080602001905181019061294d9190613434565b611f8e5760405162461bcd60e51b815260206004820152600260248201527f53410000000000000000000000000000000000000000000000000000000000006044820152606401610a15565b6000806129a4611852565b90508015612a24576001546040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015612a0b57600080fd5b505af1158015612a1f573d6000803e3d6000fd5b505050505b4791508115612a4057612a406001600160a01b03841683612a98565b50919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610991908490612c38565b80471015612ae85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a15565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b35576040519150601f19603f3d011682016040523d82523d6000602084013e612b3a565b606091505b50509050806109915760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a15565b600654604080517fc45a015500000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163c45a01559160048083019260209291908290030181865afa158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb49190613451565b6000612c8d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d209092919063ffffffff16565b9050805160001480612cae575080806020019051810190612cae9190613434565b6109915760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a15565b6060610d6d848460008585600080866001600160a01b03168587604051612d479190613418565b60006040518083038185875af1925050503d8060008114612d84576040519150601f19603f3d011682016040523d82523d6000602084013e612d89565b606091505b5091509150612d9a87838387612da5565b979650505050505050565b60608315612e14578251600003612e0d576001600160a01b0385163b612e0d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a15565b5081610d6d565b610d6d8383815115612e295781518083602001fd5b8060405162461bcd60e51b8152600401610a159190613550565b6001600160a01b0381168114611d0657600080fd5b600080600080600060808688031215612e7057600080fd5b8535612e7b81612e43565b94506020860135612e8b81612e43565b935060408601359250606086013567ffffffffffffffff80821115612eaf57600080fd5b818801915088601f830112612ec357600080fd5b813581811115612ed257600080fd5b896020828501011115612ee457600080fd5b9699959850939650602001949392505050565b600080600060608486031215612f0c57600080fd5b8335612f1781612e43565b92506020840135612f2781612e43565b929592945050506040919091013590565b60008060408385031215612f4b57600080fd5b823591506020830135612f5d81612e43565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612fa757612fa7612f68565b604052919050565b8015158114611d0657600080fd5b600060608284031215612fcf57600080fd5b6040516060810181811067ffffffffffffffff82111715612ff257612ff2612f68565b80604052508235815260208301356020820152604083013561301381612faf565b60408201529392505050565b60006020828403121561303157600080fd5b81358060020b811461199557600080fd5b60006020828403121561305457600080fd5b813561199581612e43565b6000806040838503121561307257600080fd5b823561307d81612e43565b946020939093013593505050565b60005b838110156130a657818101518382015260200161308e565b50506000910152565b600081518084526130c781602086016020860161308b565b601f01601f19169290920160200192915050565b602081526001600160a01b0382511660208201526020820151604082015260006040830151606080840152610d6d60808401826130af565b60008060006060848603121561312857600080fd5b83359250602084013561313a81612e43565b9150604084013561314a81612e43565b809150509250925092565b60006020828403121561316757600080fd5b813561199581612faf565b602080825282518282018190526000919060409081850190868401855b828110156131cc57815180516001600160a01b0390811686528782015116878601528501511515858501526060909301929085019060010161318f565b5091979650505050505050565b600080600080608085870312156131ef57600080fd5b84356131fa81612e43565b9350602085013561320a81612e43565b93969395505050506040820135916060013590565b600081518084526020808501945080840160005b838110156132585781516001600160a01b031687529582019590820190600101613233565b509495945050505050565b604081526000613276604083018561321f565b82810360208481019190915284518083528582019282019060005b818110156132ad57845183529383019391830191600101613291565b5090979650505050505050565b600080604083850312156132cd57600080fd5b823591506020830135612f5d81612faf565b6000602082840312156132f157600080fd5b5035919050565b60008060006060848603121561330d57600080fd5b833561331881612e43565b925060208401359150604084013561314a81612faf565b60006020828403121561334157600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561337157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b818103818111156133ab576133ab613382565b92915050565b80820281158282048414176133ab576133ab613382565b6000826133e557634e487b7160e01b600052601260045260246000fd5b500490565b6000806000606084860312156133ff57600080fd5b8351925060208401519150604084015190509250925092565b6000825161342a81846020870161308b565b9190910192915050565b60006020828403121561344657600080fd5b815161199581612faf565b60006020828403121561346357600080fd5b815161199581612e43565b85815284602082015260a06040820152600061348d60a083018661321f565b6001600160a01b0394909416606083015250608001529392505050565b600060208083850312156134bd57600080fd5b825167ffffffffffffffff808211156134d557600080fd5b818501915085601f8301126134e957600080fd5b8151818111156134fb576134fb612f68565b8060051b915061350c848301612f7e565b818152918301840191848101908884111561352657600080fd5b938501935b838510156135445784518252938501939085019061352b565b98975050505050505050565b60208152600061199560208301846130af56fea26469706673582212201eaa956f789e9d10e2eb269439a90a52c71062dde84159ca53133735517f452164736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getLiquidityAmounts()": {
        "details": "This can be overridden to specify custom amounts for swapping"
      },
      "getLiquidityToken(uint256)": {
        "details": "This can be overridden to specify custom liquidity tokens"
      },
      "getOrderedAssets(bool)": {
        "details": "This can be overridden to specify custom ordering for swapping"
      },
      "getToken0()": {
        "details": "This should be overridden if Token0 is not WETH"
      },
      "getToken1()": {
        "details": "This should be overridden if Token1 is not WETH"
      },
      "getTokenPath(bool)": {
        "details": "This can be overridden to specify custom routes/paths for swapping"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10031,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_weth",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 10033,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_manager",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 10035,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_token0",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 10037,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_token1",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 10039,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_swapRouter",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 10041,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_liquidityRouter",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 10043,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_poolId",
        "offset": 0,
        "slot": "7",
        "type": "t_bytes32"
      },
      {
        "astId": 10045,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_bundlerId",
        "offset": 0,
        "slot": "8",
        "type": "t_bytes32"
      },
      {
        "astId": 10047,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_slippage",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 10049,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_tickLower",
        "offset": 0,
        "slot": "10",
        "type": "t_int24"
      },
      {
        "astId": 10051,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_tickUpper",
        "offset": 3,
        "slot": "10",
        "type": "t_int24"
      },
      {
        "astId": 10056,
        "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
        "label": "_liquidityPositionsByTokenId",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(LiquidityPosition)7508_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int24": {
        "encoding": "inplace",
        "label": "int24",
        "numberOfBytes": "3"
      },
      "t_mapping(t_uint256,t_struct(LiquidityPosition)7508_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IWeb3PacksDefs.LiquidityPosition)",
        "numberOfBytes": "32",
        "value": "t_struct(LiquidityPosition)7508_storage"
      },
      "t_struct(LiquidityPosition)7508_storage": {
        "encoding": "inplace",
        "label": "struct IWeb3PacksDefs.LiquidityPosition",
        "members": [
          {
            "astId": 7503,
            "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
            "label": "lpTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7505,
            "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
            "label": "liquidity",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7507,
            "contract": "contracts/lib/mode/bundlers/SSWethSmd.sol:SSWethSmd",
            "label": "stable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}