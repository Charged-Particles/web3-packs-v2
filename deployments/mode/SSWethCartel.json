{
  "address": "0x53D8bb03e201D08b492938151Ce5280fDE5a7456",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "weth",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "swapRouter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidityRouter",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bundlerId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "slippage",
              "type": "uint256"
            },
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.RouterConfig",
          "name": "config",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "mode",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bundlerId",
          "type": "bytes32"
        }
      ],
      "name": "BundlerNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedToExitWeth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundingFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "name": "InsufficientForFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedTokens",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MissingLiquidityUUID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeAssetTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoBundlesInPack",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerOrApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullReceiver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "UnsucessfulSwap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "BundledTokenLP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BundledTokenSS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EthTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "SwappedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC1155",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckEther",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_bundlerId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_liquidityRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_mode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_poolId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_slippage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_swapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tickLower",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_tickUpper",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "bundle",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lpTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.LiquidityPosition",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "collectLpFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "createLiquidityPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceToken0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balanceToken0",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceToken1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balanceToken1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalanceWeth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balanceWeth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidityAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getLiquidityToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getOrderedAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken0",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.Token",
          "name": "token0",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenDecimals",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.Token",
          "name": "token1",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getTokenPath",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.Route[]",
          "name": "tokenPath",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lpTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.LiquidityPosition",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "removeLiquidityPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "setLiquidityRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "slippage",
          "type": "uint256"
        }
      ],
      "name": "setSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "setSwapRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        }
      ],
      "name": "setTickLower",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "name": "setTickUpper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "weth",
          "type": "address"
        }
      ],
      "name": "setWeth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percentOfAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "swapCustom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percentOfAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "swapSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellAll",
          "type": "bool"
        }
      ],
      "name": "unbundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethAmountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcfffb137434f4d3ac8bf08b848d33c418f553f52d7a97e52452f468368a3b119",
  "receipt": {
    "to": null,
    "from": "0xb8D175F16742395F530e0b3bC1d30BD06B78CdA9",
    "contractAddress": "0x53D8bb03e201D08b492938151Ce5280fDE5a7456",
    "transactionIndex": 2,
    "gasUsed": "3203991",
    "logsBloom": "0x
    "blockHash": "0xbc735334bf57463f48abc95fd82d6c021338b380ff755d016556081a925d2da9",
    "transactionHash": "0xcfffb137434f4d3ac8bf08b848d33c418f553f52d7a97e52452f468368a3b119",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 21075317,
        "transactionHash": "0xcfffb137434f4d3ac8bf08b848d33c418f553f52d7a97e52452f468368a3b119",
        "address": "0x53D8bb03e201D08b492938151Ce5280fDE5a7456",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b8d175f16742395f530e0b3bc1d30bd06b78cda9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xbc735334bf57463f48abc95fd82d6c021338b380ff755d016556081a925d2da9"
      }
    ],
    "blockNumber": 21075317,
    "cumulativeGasUsed": "3286458",
    "status": 1,
    "byzantium": true
  },
  "args": [
    {
      "weth": "0x4200000000000000000000000000000000000006",
      "token0": "0x4200000000000000000000000000000000000006",
      "token1": "0x98E0AD23382184338dDcEC0E13685358EF845f30",
      "manager": "0xEEC393142db33eb94C18f3d5514888Ad5e7BECc2",
      "swapRouter": "0x652e53C6a4FE39B6B30426d9c96376a105C89A95",
      "liquidityRouter": "0x652e53C6a4FE39B6B30426d9c96376a105C89A95",
      "poolId": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "bundlerId": "0x53532d574554482d43415254454c000000000000000000000000000000000000",
      "slippage": "300",
      "tickLower": "100",
      "tickUpper": "200"
    },
    "0xDfc7C877a950e49D2610114102175A06C2e3167a"
  ],
  "numDeployments": 2,
  "solcInputHash": "599a58eced1c7d5d806c243ecdc9c838",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityRouter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct IWeb3PacksDefs.RouterConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"mode\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"}],\"name\":\"BundlerNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToExitWeth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundingFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"InsufficientForFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MissingLiquidityUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeAssetTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBundlesInPack\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"UnsucessfulSwap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"BundledTokenLP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BundledTokenSS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EthTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"SwappedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckEther\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_bundlerId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_mode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_poolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tickLower\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tickUpper\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"bundle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"internalType\":\"struct IWeb3PacksDefs.LiquidityPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"collectLpFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"createLiquidityPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceToken0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken0\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceToken1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceToken1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceWeth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceWeth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidityAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getLiquidityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getOrderedAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken0\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"internalType\":\"struct IWeb3PacksDefs.Token\",\"name\":\"token0\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"internalType\":\"struct IWeb3PacksDefs.Token\",\"name\":\"token1\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getTokenPath\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"internalType\":\"struct IWeb3PacksDefs.Route[]\",\"name\":\"tokenPath\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"internalType\":\"struct IWeb3PacksDefs.LiquidityPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"removeLiquidityPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setLiquidityRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"name\":\"setSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setSwapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"}],\"name\":\"setTickLower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"setTickUpper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"name\":\"setWeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentOfAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"swapCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentOfAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"swapSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellAll\",\"type\":\"bool\"}],\"name\":\"unbundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLiquidityAmounts()\":{\"details\":\"This can be overridden to specify custom amounts for swapping\"},\"getLiquidityToken(uint256)\":{\"details\":\"This can be overridden to specify custom liquidity tokens\"},\"getOrderedAssets(bool)\":{\"details\":\"This can be overridden to specify custom ordering for swapping\"},\"getToken0()\":{\"details\":\"This should be overridden if Token0 is not WETH\"},\"getToken1()\":{\"details\":\"This should be overridden if Token1 is not WETH\"},\"getTokenPath(bool)\":{\"details\":\"This can be overridden to specify custom routes/paths for swapping\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/mode/bundlers/SSWethCartel.sol\":\"SSWethCartel\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0xfc10758fd8dba790c39468dccd358cb7cef06ae7c4781832cc7aa76f91f167e6\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IWeb3PacksBundler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksBundler.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\n\\ninterface IWeb3PacksBundler {\\n  event BundledTokenSS(address indexed token, uint256 amount);\\n  event BundledTokenLP(address indexed token0, address indexed token1, uint256 amount0, uint256 amount1, uint256 liquidity);\\n\\n  function getLiquidityToken(uint256 packTokenId) external returns (address tokenAddress, uint256 tokenId);\\n\\n  function bundle(uint256 packTokenId, address sender)\\n    payable\\n    external\\n    returns(\\n      address tokenAddress,\\n      uint256 amountOut,\\n      uint256 nftTokenId\\n    );\\n\\n  function unbundle(address payable receiver, uint256 packTokenId, bool sellAll)\\n    external\\n    returns(uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x5503608e26e5cc8feaf1216d25f865c7f163ae4f852343f05b8a95478279f4f6\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksDefs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksDefs.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\ninterface IWeb3PacksDefs {\\n  // Custom Errors\\n  error NotOwnerOrApproved();\\n  error FundingFailed();\\n  error SwapFailed();\\n  error NullReceiver();\\n  error ContractNotAllowed();\\n  error NativeAssetTransferFailed();\\n  error MismatchedTokens();\\n  error NoBundlesInPack();\\n  error FailedToExitWeth();\\n  error BundlerNotRegistered(bytes32 bundlerId);\\n  error MissingLiquidityUUID(address tokenAddress);\\n  error UnsucessfulSwap(address tokenOut, uint256 amountIn, address router);\\n  error InsufficientForFee(uint256 value, uint256 ethPackPrice, uint256 protocolFee);\\n\\n  struct RouterConfig {\\n    address weth;\\n    address token0;\\n    address token1;\\n    address manager;\\n    address swapRouter;\\n    address liquidityRouter;\\n    bytes32 poolId;\\n    bytes32 bundlerId;\\n    uint256 slippage;\\n    int24 tickLower;\\n    int24 tickUpper;\\n  }\\n\\n  struct BundleChunk {\\n    bytes32 bundlerId;\\n    uint256 percentBasisPoints;\\n  }\\n\\n  struct Token {\\n    address tokenAddress;\\n    uint256 tokenDecimals;\\n    string tokenSymbol;\\n  }\\n\\n  struct TokenAmount {\\n    address tokenAddress;\\n    uint256 balance;\\n    uint256 nftTokenId;\\n  }\\n\\n  struct Route {\\n    address token0;\\n    address token1;\\n    bool stable;\\n  }\\n\\n  struct LiquidityPosition {\\n    uint256 lpTokenId;\\n    uint256 liquidity;\\n    bool stable;\\n  }\\n\\n  struct LockState {\\n    uint256 ERC20Timelock;\\n    uint256 ERC721Timelock;\\n  }\\n}\\n\",\"keccak256\":\"0xd66482cd58eeed3a65b16b764aa81bebb2fdafb5fc966f1fa069e17e2c91247f\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksRouter.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\nimport \\\"./IWeb3PacksDefs.sol\\\";\\n\\ninterface IWeb3PacksRouter is IWeb3PacksDefs {\\n  event EthTransferred(address indexed receiver, uint256 amount);\\n  event SwappedTokens(address indexed token0, address indexed token1, uint256 amount0, uint256 amount1);\\n\\n  function getToken0() external returns (IWeb3PacksDefs.Token calldata token0);\\n  function getToken1() external returns (IWeb3PacksDefs.Token calldata token1);\\n\\n  function getTokenPath(bool reverse) external returns (IWeb3PacksDefs.Route[] memory tokenPath);\\n  function getOrderedAssets(bool reverse) external returns (address[] memory assets, uint256[] memory amounts);\\n  function getLiquidityAmounts() external returns (uint256 amount0, uint256 amount1, uint256 minAmount0, uint256 minAmount1);\\n\\n  function getBalanceToken0() external returns (uint256 balanceToken0);\\n  function getBalanceToken1() external returns (uint256 balanceToken1);\\n  function getBalanceWeth() external returns (uint256 balanceWeth);\\n\\n  function swapSingle(uint256 percentOfAmount, bool reverse)\\n    external\\n    returns (uint256 amountOut);\\n\\n  function swapCustom(uint256 percentOfAmount, address token0, address token1)\\n    external\\n    returns (uint256 amountOut);\\n\\n  function createLiquidityPosition(bool stable)\\n    external\\n    returns (\\n      uint256 lpTokenId,\\n      uint256 liquidity,\\n      uint256 amount0,\\n      uint256 amount1\\n    );\\n\\n  function collectLpFees(IWeb3PacksDefs.LiquidityPosition calldata liquidityPosition)\\n    external\\n    returns (uint256 amount0, uint256 amount1);\\n\\n  function removeLiquidityPosition(IWeb3PacksDefs.LiquidityPosition calldata liquidityPosition)\\n    external\\n    returns (uint amount0, uint amount1);\\n}\\n\",\"keccak256\":\"0x79abf65b4f4a896a704ded949c5d9111c546ec6fa6e25e7233afeed461b31344\",\"license\":\"MIT\"},\"contracts/interfaces/mode/IVelodrome.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IVelodrome {\\n    struct Route {\\n        address from;\\n        address to;\\n        bool stable;\\n    }\\n\\n    error ETHTransferFailed();\\n    error Expired();\\n    error InsufficientAmount();\\n    error InsufficientAmountA();\\n    error InsufficientAmountB();\\n    error InsufficientAmountADesired();\\n    error InsufficientAmountBDesired();\\n    error InsufficientLiquidity();\\n    error InsufficientOutputAmount();\\n    error InvalidPath();\\n    error OnlyWETH();\\n    error SameAddresses();\\n    error ZeroAddress();\\n\\n    /// @notice Address of Velodrome v2 pool factory\\n    function factory() external view returns (address);\\n\\n    /// @notice Address of Velodrome v2 pool implementation\\n    function poolImplementation() external view returns (address);\\n\\n    /// @notice Sort two tokens by which address value is less than the other\\n    /// @param tokenA   Address of token to sort\\n    /// @param tokenB   Address of token to sort\\n    /// @return token0  Lower address value between tokenA and tokenB\\n    /// @return token1  Higher address value between tokenA and tokenB\\n    function sortTokens(address tokenA, address tokenB) external pure returns (address token0, address token1);\\n\\n    /// @notice Calculate the address of a pool by its' factory.\\n    /// @dev Returns a randomly generated address for a nonexistent pool\\n    /// @param tokenA   Address of token to query\\n    /// @param tokenB   Address of token to query\\n    /// @param stable   True if pool is stable, false if volatile\\n    function poolFor(address tokenA, address tokenB, bool stable) external view returns (address pool);\\n\\n    /// @notice Fetch and sort the reserves for a pool\\n    /// @param tokenA       .\\n    /// @param tokenB       .\\n    /// @param stable       True if pool is stable, false if volatile\\n    /// @return reserveA    Amount of reserves of the sorted token A\\n    /// @return reserveB    Amount of reserves of the sorted token B\\n    function getReserves(address tokenA, address tokenB, bool stable)\\n        external\\n        view\\n        returns (uint256 reserveA, uint256 reserveB);\\n\\n    /// @notice Perform chained getAmountOut calculations on any number of pools\\n    function getAmountsOut(uint256 amountIn, Route[] memory routes) external view returns (uint256[] memory amounts);\\n\\n    // **** ADD LIQUIDITY ****\\n\\n    /// @notice Quote the amount deposited into a Pool\\n    /// @param tokenA           .\\n    /// @param tokenB           .\\n    /// @param stable           True if pool is stable, false if volatile\\n    /// @param amountADesired   Amount of tokenA desired to deposit\\n    /// @param amountBDesired   Amount of tokenB desired to deposit\\n    /// @return amountA         Amount of tokenA to actually deposit\\n    /// @return amountB         Amount of tokenB to actually deposit\\n    /// @return liquidity       Amount of liquidity token returned from deposit\\n    function quoteAddLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        bool stable,\\n        uint256 amountADesired,\\n        uint256 amountBDesired\\n    ) external view returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    /// @notice Quote the amount of liquidity removed from a Pool\\n    /// @param tokenA       .\\n    /// @param tokenB       .\\n    /// @param stable       True if pool is stable, false if volatile\\n    /// @param liquidity    Amount of liquidity to remove\\n    /// @return amountA     Amount of tokenA received\\n    /// @return amountB     Amount of tokenB received\\n    function quoteRemoveLiquidity(address tokenA, address tokenB, bool stable, uint256 liquidity)\\n        external\\n        view\\n        returns (uint256 amountA, uint256 amountB);\\n\\n    /// @notice Add liquidity of two tokens to a Pool\\n    /// @param tokenA           .\\n    /// @param tokenB           .\\n    /// @param stable           True if pool is stable, false if volatile\\n    /// @param amountADesired   Amount of tokenA desired to deposit\\n    /// @param amountBDesired   Amount of tokenB desired to deposit\\n    /// @param amountAMin       Minimum amount of tokenA to deposit\\n    /// @param amountBMin       Minimum amount of tokenB to deposit\\n    /// @param to               Recipient of liquidity token\\n    /// @param deadline         Deadline to receive liquidity\\n    /// @return amountA         Amount of tokenA to actually deposit\\n    /// @return amountB         Amount of tokenB to actually deposit\\n    /// @return liquidity       Amount of liquidity token returned from deposit\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        bool stable,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    /// @notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\\n    /// @param token                .\\n    /// @param stable               True if pool is stable, false if volatile\\n    /// @param amountTokenDesired   Amount of token desired to deposit\\n    /// @param amountTokenMin       Minimum amount of token to deposit\\n    /// @param amountETHMin         Minimum amount of ETH to deposit\\n    /// @param to                   Recipient of liquidity token\\n    /// @param deadline             Deadline to add liquidity\\n    /// @return amountToken         Amount of token to actually deposit\\n    /// @return amountETH           Amount of tokenETH to actually deposit\\n    /// @return liquidity           Amount of liquidity token returned from deposit\\n    function addLiquidityETH(\\n        address token,\\n        bool stable,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    // **** REMOVE LIQUIDITY ****\\n\\n    /// @notice Remove liquidity of two tokens from a Pool\\n    /// @param tokenA       .\\n    /// @param tokenB       .\\n    /// @param stable       True if pool is stable, false if volatile\\n    /// @param liquidity    Amount of liquidity to remove\\n    /// @param amountAMin   Minimum amount of tokenA to receive\\n    /// @param amountBMin   Minimum amount of tokenB to receive\\n    /// @param to           Recipient of tokens received\\n    /// @param deadline     Deadline to remove liquidity\\n    /// @return amountA     Amount of tokenA received\\n    /// @return amountB     Amount of tokenB received\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        bool stable,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    /// @notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\\n    /// @param token            .\\n    /// @param stable           True if pool is stable, false if volatile\\n    /// @param liquidity        Amount of liquidity to remove\\n    /// @param amountTokenMin   Minimum amount of token to receive\\n    /// @param amountETHMin     Minimum amount of ETH to receive\\n    /// @param to               Recipient of liquidity token\\n    /// @param deadline         Deadline to receive liquidity\\n    /// @return amountToken     Amount of token received\\n    /// @return amountETH       Amount of ETH received\\n    function removeLiquidityETH(\\n        address token,\\n        bool stable,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    /// @notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\\n    /// @param token            .\\n    /// @param stable           True if pool is stable, false if volatile\\n    /// @param liquidity        Amount of liquidity to remove\\n    /// @param amountTokenMin   Minimum amount of token to receive\\n    /// @param amountETHMin     Minimum amount of ETH to receive\\n    /// @param to               Recipient of liquidity token\\n    /// @param deadline         Deadline to receive liquidity\\n    /// @return amountETH       Amount of ETH received\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        bool stable,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    /// @notice Swap one token for another\\n    /// @param amountIn     Amount of token in\\n    /// @param amountOutMin Minimum amount of desired token received\\n    /// @param routes       Array of trade routes used in the swap\\n    /// @param to           Recipient of the tokens received\\n    /// @param deadline     Deadline to receive tokens\\n    /// @return amounts     Array of amounts returned per route\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        Route[] calldata routes,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    /// @notice Swap ETH for a token\\n    /// @param amountOutMin Minimum amount of desired token received\\n    /// @param routes       Array of trade routes used in the swap\\n    /// @param to           Recipient of the tokens received\\n    /// @param deadline     Deadline to receive tokens\\n    /// @return amounts     Array of amounts returned per route\\n    function swapExactETHForTokens(uint256 amountOutMin, Route[] calldata routes, address to, uint256 deadline)\\n        external\\n        payable\\n        returns (uint256[] memory amounts);\\n\\n    /// @notice Swap a token for WETH (returned as ETH)\\n    /// @param amountIn     Amount of token in\\n    /// @param amountOutMin Minimum amount of desired ETH\\n    /// @param routes       Array of trade routes used in the swap\\n    /// @param to           Recipient of the tokens received\\n    /// @param deadline     Deadline to receive tokens\\n    /// @return amounts     Array of amounts returned per route\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        Route[] calldata routes,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x6bf43df51e474ad9a07b54fc66e20064e76e3084ac1a647234de8461e803242a\",\"license\":\"MIT\"},\"contracts/interfaces/mode/IVelodromeUniversalRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.17;\\n\\nimport {IERC721Receiver} from '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\\nimport {IERC1155Receiver} from '@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol';\\n\\ninterface IRewardsCollector {\\n    /// @notice Fetches users' LooksRare rewards and sends them to the distributor contract\\n    /// @param looksRareClaim The data required by LooksRare to claim reward tokens\\n    function collectRewards(bytes calldata looksRareClaim) external;\\n}\\n\\ninterface IUniversalRouter is IRewardsCollector, IERC721Receiver, IERC1155Receiver {\\n    /// @notice Thrown when a required command has failed\\n    error ExecutionFailed(uint256 commandIndex, bytes message);\\n\\n    /// @notice Thrown when attempting to send ETH directly to the contract\\n    error ETHNotAccepted();\\n\\n    /// @notice Thrown when executing commands with an expired deadline\\n    error TransactionDeadlinePassed();\\n\\n    /// @notice Thrown when attempting to execute commands and an incorrect number of inputs are provided\\n    error LengthMismatch();\\n\\n    /// @notice Executes encoded commands along with provided inputs. Reverts if deadline has expired.\\n    /// @param commands A set of concatenated commands, each 1 byte in length\\n    /// @param inputs An array of byte strings containing abi encoded inputs for each command\\n    /// @param deadline The deadline by which the transaction must be executed\\n    function execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline) external payable;\\n}\\n\",\"keccak256\":\"0x28bc19e52b5965f6e1dc12cb7ef4cdeea12befa52f7a7a724cb157441fd40633\",\"license\":\"GPL-3.0-or-later\"},\"contracts/lib/BlackholePrevention.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// BlackholePrevention.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\n/**\\n * @notice Prevents ETH or Tokens from getting stuck in a contract by allowing\\n *  the Owner/DAO to pull them out on behalf of a user\\n * This is only meant to contracts that are not expected to hold tokens, but do handle transferring them.\\n */\\ncontract BlackholePrevention {\\n    using Address for address payable;\\n    using SafeERC20 for IERC20;\\n\\n    event WithdrawStuckEther(address indexed receiver, uint256 amount);\\n    event WithdrawStuckERC20(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 amount\\n    );\\n    event WithdrawStuckERC721(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId\\n    );\\n    event WithdrawStuckERC1155(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    function _withdrawEther(address payable receiver, uint256 amount)\\n        internal\\n        virtual\\n    {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (address(this).balance >= amount) {\\n            receiver.sendValue(amount);\\n            emit WithdrawStuckEther(receiver, amount);\\n        }\\n    }\\n\\n    function _withdrawERC20(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC20(tokenAddress).balanceOf(address(this)) >= amount) {\\n            IERC20(tokenAddress).safeTransfer(receiver, amount);\\n            emit WithdrawStuckERC20(receiver, tokenAddress, amount);\\n        }\\n    }\\n\\n    function _withdrawERC721(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC721(tokenAddress).ownerOf(tokenId) == address(this)) {\\n            IERC721(tokenAddress).transferFrom(\\n                address(this),\\n                receiver,\\n                tokenId\\n            );\\n            emit WithdrawStuckERC721(receiver, tokenAddress, tokenId);\\n        }\\n    }\\n\\n    function _withdrawERC1155(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (\\n            IERC1155(tokenAddress).balanceOf(address(this), tokenId) >= amount\\n        ) {\\n            IERC1155(tokenAddress).safeTransferFrom(\\n                address(this),\\n                receiver,\\n                tokenId,\\n                amount,\\n                \\\"\\\"\\n            );\\n            emit WithdrawStuckERC1155(receiver, tokenAddress, tokenId, amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa7de406bd3b1092f8222d3eb1e2a990381429a5cb6bab48a811ff7118a43746\",\"license\":\"MIT\"},\"contracts/lib/Web3PacksRouterBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Web3PacksRouterBase.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"./BlackholePrevention.sol\\\";\\nimport \\\"../interfaces/IWeb3PacksRouter.sol\\\";\\nimport \\\"../interfaces/IWeb3PacksDefs.sol\\\";\\n\\nabstract contract Web3PacksRouterBase is\\n  IWeb3PacksRouter,\\n  Ownable,\\n  BlackholePrevention\\n{\\n  using Address for address payable;\\n\\n  address public _weth;\\n  address public _manager;\\n  address public _token0;\\n  address public _token1;\\n\\n  address public _swapRouter;\\n  address public _liquidityRouter;\\n  bytes32 public _poolId;\\n\\n  // The ID Associated with this Bundler (must be Registered with Web3Packs)\\n  bytes32 public _bundlerId;\\n\\n  uint256 public _slippage;\\n  int24 public _tickLower;\\n  int24 public _tickUpper;\\n\\n  // Store Liquidity Positions by Pack Token ID\\n  mapping(uint256 => IWeb3PacksDefs.LiquidityPosition) internal _liquidityPositionsByTokenId;\\n\\n  constructor(IWeb3PacksDefs.RouterConfig memory config) {\\n    _weth = config.weth;\\n    _token0 = config.token0;\\n    _token1 = config.token1;\\n    _manager = config.manager;\\n    _swapRouter = config.swapRouter;\\n    _liquidityRouter = config.liquidityRouter;\\n    _poolId = config.poolId;\\n    _bundlerId = config.bundlerId;\\n    _slippage = config.slippage;\\n    _tickLower = config.tickLower;\\n    _tickUpper = config.tickUpper;\\n  }\\n\\n  receive() external payable {}\\n\\n  /***********************************|\\n  |          Configuration            |\\n  |__________________________________*/\\n\\n  /// @dev This should be overridden if Token0 is not WETH\\n  function getToken0() public virtual view returns (IWeb3PacksDefs.Token memory token0) {\\n    IWeb3PacksDefs.Token memory token = IWeb3PacksDefs.Token({\\n      tokenAddress: _weth,\\n      tokenDecimals: 18,\\n      tokenSymbol: \\\"WETH\\\"\\n    });\\n    return token;\\n  }\\n\\n  /// @dev This should be overridden if Token1 is not WETH\\n  function getToken1() public virtual view returns (IWeb3PacksDefs.Token memory token1) {\\n    IWeb3PacksDefs.Token memory token = IWeb3PacksDefs.Token({\\n      tokenAddress: _weth,\\n      tokenDecimals: 18,\\n      tokenSymbol: \\\"WETH\\\"\\n    });\\n    return token;\\n  }\\n\\n  /// @dev This can be overridden to specify custom routes/paths for swapping\\n  function getTokenPath(bool reverse) public virtual view returns (IWeb3PacksDefs.Route[] memory tokenPath) {\\n    IWeb3PacksDefs.Route[] memory tokens = new IWeb3PacksDefs.Route[](1);\\n    tokens[0] = reverse\\n      ? IWeb3PacksDefs.Route({token0: getToken1().tokenAddress, token1: getToken0().tokenAddress, stable: false})\\n      : IWeb3PacksDefs.Route({token0: getToken0().tokenAddress, token1: getToken1().tokenAddress, stable: false});\\n    return tokens;\\n  }\\n\\n  /// @dev This can be overridden to specify custom ordering for swapping\\n  function getOrderedAssets(bool reverse) public virtual view returns (address[] memory, uint256[] memory) {\\n    address[] memory assets = new address[](2);\\n    assets[0] = reverse ? getToken1().tokenAddress : getToken0().tokenAddress;\\n    assets[1] = reverse ? getToken0().tokenAddress : getToken1().tokenAddress;\\n\\n    uint256[] memory amounts = new uint256[](2);\\n    amounts[0] = reverse ? getBalanceToken1() : getBalanceToken0();\\n    amounts[1] = reverse ? getBalanceToken0() : getBalanceToken1();\\n\\n    return (assets, amounts);\\n  }\\n\\n  /// @dev This can be overridden to specify custom amounts for swapping\\n  function getLiquidityAmounts() public virtual view returns (uint256 amount0, uint256 amount1, uint256 minAmount0, uint256 minAmount1) {\\n    amount0 = getBalanceToken0();\\n    amount1 = getBalanceToken1();\\n    minAmount0 = (amount0 * (10000 - _slippage)) / 10000;\\n    minAmount1 = (amount1 * (10000 - _slippage)) / 10000;\\n  }\\n\\n  /***********************************|\\n  |          Standard Code            |\\n  |__________________________________*/\\n\\n  function getBalanceWeth() public virtual view returns (uint256 balanceWeth) {\\n    return IERC20(_weth).balanceOf(address(this));\\n  }\\n\\n  function getBalanceToken0() public virtual view returns (uint256 balanceToken0) {\\n    return IERC20(getToken0().tokenAddress).balanceOf(address(this));\\n  }\\n\\n  function getBalanceToken1() public virtual view returns (uint256 balanceToken1) {\\n    return IERC20(getToken1().tokenAddress).balanceOf(address(this));\\n  }\\n\\n  function enterWeth(uint256 amount) internal virtual {\\n    IWETH(_weth).deposit{value: amount}();\\n  }\\n\\n  function exitWethAndTransfer(address payable receiver) internal virtual returns (uint256 ethAmount) {\\n    uint256 wethBalance = getBalanceWeth();\\n    if (wethBalance > 0) {\\n      IWETH(_weth).withdraw(wethBalance);\\n    }\\n    ethAmount = address(this).balance;\\n    if (ethAmount != wethBalance) {\\n      revert FailedToExitWeth();\\n    }\\n    if (ethAmount > 0) {\\n      receiver.sendValue(ethAmount);\\n      emit EthTransferred(receiver, ethAmount);\\n    }\\n  }\\n\\n  function refundUnusedTokens(address sender) internal virtual returns (uint256 unusedAmount0, uint256 unusedAmount1) {\\n    // Refund Unused Amounts\\n    unusedAmount0 = getBalanceToken0();\\n    if (unusedAmount0 > 0) {\\n      TransferHelper.safeTransfer(getToken0().tokenAddress, sender, unusedAmount0);\\n    }\\n    unusedAmount1 = getBalanceToken1();\\n    if (unusedAmount1 > 0) {\\n      TransferHelper.safeTransfer(getToken1().tokenAddress, sender, unusedAmount1);\\n    }\\n  }\\n\\n  function onERC721Received(\\n    address,\\n    address,\\n    uint256,\\n    bytes calldata\\n  ) external virtual pure returns(bytes4) {\\n    return this.onERC721Received.selector;\\n  }\\n\\n  /***********************************|\\n  |          Only Admin/DAO           |\\n  |      (blackhole prevention)       |\\n  |__________________________________*/\\n\\n  function setWeth(address weth) external virtual onlyOwner {\\n    _weth = weth;\\n  }\\n\\n  function setSwapRouter(address router) external virtual onlyOwner {\\n    _swapRouter = router;\\n  }\\n\\n  function setLiquidityRouter(address router) external virtual onlyOwner {\\n    _liquidityRouter = router;\\n  }\\n\\n  function setManager(address manager) external virtual onlyOwner {\\n    _manager = manager;\\n  }\\n\\n  function setSlippage(uint256 slippage) external virtual onlyOwner {\\n    _slippage = slippage;\\n  }\\n\\n  function setTickLower(int24 tickLower) external virtual onlyOwner {\\n    _tickLower = tickLower;\\n  }\\n\\n  function setTickUpper(int24 tickUpper) external virtual onlyOwner {\\n    _tickUpper = tickUpper;\\n  }\\n\\n  function withdrawEther(address payable receiver, uint256 amount) external virtual onlyOwner {\\n    _withdrawEther(receiver, amount);\\n  }\\n\\n  function withdrawErc20(address payable receiver, address tokenAddress, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC20(receiver, tokenAddress, amount);\\n  }\\n\\n  function withdrawERC721(address payable receiver, address tokenAddress, uint256 tokenId) external virtual onlyOwner {\\n    _withdrawERC721(receiver, tokenAddress, tokenId);\\n  }\\n\\n  function withdrawERC1155(address payable receiver, address tokenAddress, uint256 tokenId, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC1155(receiver, tokenAddress, tokenId, amount);\\n  }\\n\\n\\n  modifier onlyManagerOrSelf() {\\n    require(msg.sender == _manager || msg.sender == address(this), \\\"Web3PacksRouterBase - Invalid Web3Packs Manager\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x0fb549ff1f5438c24fa6e3ef8e90ef252d6e004811893e9496e3b039c37c4499\",\"license\":\"MIT\"},\"contracts/lib/mode/bundlers/SSWethCartel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// SSWethCartel.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"../routers/VelodromeV2Router.sol\\\";\\nimport \\\"../../../interfaces/IWeb3PacksBundler.sol\\\";\\n\\n/*\\n  Performs a Single-Sided Swap on Velodrome Exchange using the Velodrome Universal Router\\n  Token 0 = WETH\\n  Token 1 = CARTEL\\n */\\ncontract SSWethCartel is IWeb3PacksBundler, VelodromeV2Router {\\n  address public _mode;\\n\\n  // Inherit from the Velodrome Universal Router\\n  constructor(IWeb3PacksDefs.RouterConfig memory config, address mode) VelodromeV2Router(config) {\\n    _mode = mode;\\n  }\\n\\n  /***********************************|\\n  |          Configuration            |\\n  |__________________________________*/\\n\\n  // Token 1 = CARTEL on Mode (Velodrome Exchange)\\n  function getToken1() public view override returns (IWeb3PacksDefs.Token memory token1) {\\n    IWeb3PacksDefs.Token memory token = IWeb3PacksDefs.Token({\\n      tokenAddress: _token1,\\n      tokenDecimals: 18,\\n      tokenSymbol: \\\"CARTEL\\\"\\n    });\\n    return token;\\n  }\\n\\n  /// @dev This can be overridden to specify custom liquidity tokens\\n  function getLiquidityToken(uint256) public virtual view returns (address tokenAddress, uint256 tokenId) {\\n    tokenAddress = getToken1().tokenAddress;\\n    tokenId = 0;\\n  }\\n\\n  function swapSingle(uint256 percentOfAmount, bool reverse)\\n    public\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amountOut)\\n  {\\n    IWeb3PacksDefs.Token memory token0 = reverse ? getToken1() : getToken0();\\n    IWeb3PacksDefs.Token memory token1 = reverse ? getToken0() : getToken1();\\n    int24 token0Tick = reverse ? _tickLower : _tickUpper;\\n    int24 token1Tick = reverse ? _tickUpper: _tickLower;\\n\\n    uint256 balance = IERC20(token0.tokenAddress).balanceOf(address(this));\\n    uint256 swapAmount = (balance * percentOfAmount) / 10000;\\n    bytes memory path;\\n\\n    if (swapAmount > 0) {\\n      TransferHelper.safeApprove(token0.tokenAddress, _swapRouter, swapAmount);\\n      path = abi.encodePacked(token0.tokenAddress, token0Tick, _mode, token1Tick, token1.tokenAddress);\\n      amountOut = _performSwapV3(percentOfAmount, token0.tokenAddress, token1.tokenAddress, path);\\n    }\\n  }\\n\\n  /***********************************|\\n  |          Standard Code            |\\n  |__________________________________*/\\n\\n  function bundle(uint256, address sender)\\n    payable\\n    external\\n    override\\n    onlyManagerOrSelf\\n    returns(\\n      address tokenAddress,\\n      uint256 amountOut,\\n      uint256 nftTokenId\\n    )\\n  {\\n    // Perform Swap\\n    amountOut = swapSingle(10000, false); // 100% token0 -> token1\\n\\n    // Transfer back to Manager\\n    tokenAddress = getToken1().tokenAddress;\\n    nftTokenId = 0;\\n    TransferHelper.safeTransfer(tokenAddress, _manager, amountOut);\\n\\n    // Refund Unused Amounts\\n    refundUnusedTokens(sender);\\n    emit BundledTokenSS(tokenAddress, amountOut);\\n  }\\n\\n  function unbundle(address payable receiver, uint256, bool sellAll)\\n    external\\n    override\\n    onlyManagerOrSelf\\n    returns(uint256 ethAmountOut)\\n  {\\n    if (sellAll) {\\n      // Perform Swap\\n      swapSingle(10000, true); // 100% token1 -> token0\\n\\n      // Send ETH to Receiver\\n      ethAmountOut = exitWethAndTransfer(receiver);\\n    } else {\\n      // Send Token to Receiver\\n      TransferHelper.safeTransfer(getToken1().tokenAddress, receiver, getBalanceToken1());\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x800ea77c8eeabd88b2ee8ec31ed858e5b3169c6a2cb18d35f3e401d22a36f00d\",\"license\":\"MIT\"},\"contracts/lib/mode/routers/VelodromeV2Router.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// VelodromeV2Router.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"../../Web3PacksRouterBase.sol\\\";\\nimport \\\"../../../interfaces/IWeb3PacksDefs.sol\\\";\\nimport \\\"../../../interfaces/mode/IVelodrome.sol\\\";\\nimport {IUniversalRouter} from \\\"../../../interfaces/mode/IVelodromeUniversalRouter.sol\\\";\\nimport {Commands} from \\\"./lib/VelodromeV2Commands.sol\\\";\\nimport {Constants} from \\\"./lib/VelodromeV2Constants.sol\\\";\\n\\n// REF: https://github.com/velodrome-finance/universal-router/blob/main/test/foundry-tests/v2/UniswapV2MultiHop.t.sol#L68\\n\\n// Velodrome Universal Router\\nabstract contract VelodromeV2Router is Web3PacksRouterBase {\\n  struct VRoute {\\n    address from;\\n    address to;\\n    bool stable;\\n  }\\n\\n  // Pass constructor data\\n  constructor(IWeb3PacksDefs.RouterConfig memory config) Web3PacksRouterBase(config) {}\\n\\n  function swapSingle(uint256 percentOfAmount, bool reverse)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amountOut)\\n  {\\n    IWeb3PacksDefs.Token memory token0 = reverse ? getToken1() : getToken0();\\n    IWeb3PacksDefs.Token memory token1 = reverse ? getToken0() : getToken1();\\n    IWeb3PacksDefs.Route[] memory tokens = getTokenPath(reverse);\\n    VRoute[] memory routes = new VRoute[](tokens.length);\\n    for (uint i; i < tokens.length; i++) {\\n      routes[i] = VRoute({from: tokens[i].token0, to: tokens[i].token1, stable: tokens[i].stable});\\n    }\\n    amountOut = _performSwapV2(percentOfAmount, token0.tokenAddress, token1.tokenAddress, routes);\\n  }\\n\\n  function swapCustom(uint256 percentOfAmount, address token0, address token1)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amountOut)\\n  {\\n    VRoute[] memory routes = new VRoute[](1);\\n    routes[0] = VRoute({from: token0, to: token1, stable: false});\\n    amountOut = _performSwapV2(percentOfAmount, token0, token1, routes);\\n  }\\n\\n  function createLiquidityPosition(bool)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (\\n      uint256 lpTokenId,\\n      uint256 liquidity,\\n      uint256 amount0,\\n      uint256 amount1\\n    )\\n  {\\n    lpTokenId = 0;\\n    liquidity = 0;\\n    amount0 = 0;\\n    amount1 = 0;\\n  }\\n\\n  function collectLpFees(IWeb3PacksDefs.LiquidityPosition memory)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint256 amount0, uint256 amount1)\\n  {\\n    amount0 = 0;\\n    amount1 = 0;\\n  }\\n\\n  function removeLiquidityPosition(IWeb3PacksDefs.LiquidityPosition memory)\\n    public\\n    virtual\\n    override\\n    onlyManagerOrSelf\\n    returns (uint amount0, uint amount1)\\n  {\\n    amount0 = 0;\\n    amount1 = 0;\\n  }\\n\\n\\n  function _performSwapV2(uint256 percentOfAmount, address token0, address token1, VRoute[] memory routes)\\n    internal\\n    returns (uint256 amountOut)\\n  {\\n    uint256 balance = IERC20(token0).balanceOf(address(this));\\n    uint256 swapAmount = (balance * percentOfAmount) / 10000;\\n\\n    if (swapAmount > 0) {\\n      TransferHelper.safeApprove(token0, _swapRouter, swapAmount);\\n      bytes memory commands = abi.encodePacked(bytes1(uint8(Commands.V2_SWAP_EXACT_IN)));\\n      bytes[] memory inputs = new bytes[](1);\\n      inputs[0] = abi.encode(Constants.MSG_SENDER, swapAmount, 0, routes, true);\\n      IUniversalRouter(_swapRouter).execute(commands, inputs, block.timestamp);\\n      amountOut = IERC20(token1).balanceOf(address(this));\\n      if (amountOut == 0) { revert SwapFailed(); }\\n      emit SwappedTokens(token0, token1, swapAmount, amountOut);\\n    }\\n  }\\n\\n  function _performSwapV3(uint256 percentOfAmount, address token0, address token1, bytes memory path)\\n    internal\\n    returns (uint256 amountOut)\\n  {\\n    uint256 balance = IERC20(token0).balanceOf(address(this));\\n    uint256 swapAmount = (balance * percentOfAmount) / 10000;\\n\\n    if (swapAmount > 0) {\\n      TransferHelper.safeApprove(token0, _swapRouter, swapAmount);\\n      bytes memory commands = abi.encodePacked(bytes1(uint8(Commands.V3_SWAP_EXACT_IN)));\\n      bytes[] memory inputs = new bytes[](1);\\n      inputs[0] = abi.encode(Constants.MSG_SENDER, swapAmount, 0, path, true);\\n      IUniversalRouter(_swapRouter).execute(commands, inputs, block.timestamp);\\n      amountOut = IERC20(token1).balanceOf(address(this));\\n      if (amountOut == 0) { revert SwapFailed(); }\\n      emit SwappedTokens(token0, token1, swapAmount, amountOut);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4e4ac4a82f5f5ab33f0977c88a26a49ac9d158b2b7d6a4832599282f989656b7\",\"license\":\"MIT\"},\"contracts/lib/mode/routers/lib/VelodromeV2Commands.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.17;\\n\\n/// @title Commands\\n/// @notice Command Flags used to decode commands\\nlibrary Commands {\\n    // Masks to extract certain bits of commands\\n    bytes1 internal constant FLAG_ALLOW_REVERT = 0x80;\\n    bytes1 internal constant COMMAND_TYPE_MASK = 0x3f;\\n\\n    // Command Types. Maximum supported command at this moment is 0x3f.\\n\\n    // Command Types where value<0x08, executed in the first nested-if block\\n    uint256 constant V3_SWAP_EXACT_IN = 0x00;\\n    uint256 constant V3_SWAP_EXACT_OUT = 0x01;\\n    uint256 constant PERMIT2_TRANSFER_FROM = 0x02;\\n    uint256 constant PERMIT2_PERMIT_BATCH = 0x03;\\n    uint256 constant SWEEP = 0x04;\\n    uint256 constant TRANSFER = 0x05;\\n    uint256 constant PAY_PORTION = 0x06;\\n    // COMMAND_PLACEHOLDER = 0x07;\\n\\n    // The commands are executed in nested if blocks to minimise gas consumption\\n    // The following constant defines one of the boundaries where the if blocks split commands\\n    uint256 constant FIRST_IF_BOUNDARY = 0x08;\\n\\n    // Command Types where 0x08<=value<=0x0f, executed in the second nested-if block\\n    uint256 constant V2_SWAP_EXACT_IN = 0x08;\\n    uint256 constant V2_SWAP_EXACT_OUT = 0x09;\\n    uint256 constant PERMIT2_PERMIT = 0x0a;\\n    uint256 constant WRAP_ETH = 0x0b;\\n    uint256 constant UNWRAP_WETH = 0x0c;\\n    uint256 constant PERMIT2_TRANSFER_FROM_BATCH = 0x0d;\\n    uint256 constant BALANCE_CHECK_ERC20 = 0x0e;\\n    // COMMAND_PLACEHOLDER = 0x0f;\\n\\n    // The commands are executed in nested if blocks to minimise gas consumption\\n    // The following constant defines one of the boundaries where the if blocks split commands\\n    uint256 constant SECOND_IF_BOUNDARY = 0x10;\\n\\n    // Command Types where 0x10<=value<0x18, executed in the third nested-if block\\n    uint256 constant SEAPORT_V1_5 = 0x10;\\n    uint256 constant LOOKS_RARE_V2 = 0x11;\\n    uint256 constant NFTX = 0x12;\\n    uint256 constant CRYPTOPUNKS = 0x13;\\n    // 0x14;\\n    uint256 constant OWNER_CHECK_721 = 0x15;\\n    uint256 constant OWNER_CHECK_1155 = 0x16;\\n    uint256 constant SWEEP_ERC721 = 0x17;\\n\\n    // The commands are executed in nested if blocks to minimise gas consumption\\n    // The following constant defines one of the boundaries where the if blocks split commands\\n    uint256 constant THIRD_IF_BOUNDARY = 0x18;\\n\\n    // Command Types where 0x18<=value<=0x1f, executed in the final nested-if block\\n    uint256 constant X2Y2_721 = 0x18;\\n    uint256 constant SUDOSWAP = 0x19;\\n    uint256 constant NFT20 = 0x1a;\\n    uint256 constant X2Y2_1155 = 0x1b;\\n    uint256 constant FOUNDATION = 0x1c;\\n    uint256 constant SWEEP_ERC1155 = 0x1d;\\n    uint256 constant ELEMENT_MARKET = 0x1e;\\n    // COMMAND_PLACEHOLDER = 0x1f;\\n\\n    // The commands are executed in nested if blocks to minimise gas consumption\\n    // The following constant defines one of the boundaries where the if blocks split commands\\n    uint256 constant FOURTH_IF_BOUNDARY = 0x20;\\n\\n    // Command Types where 0x20<=value\\n    uint256 constant SEAPORT_V1_4 = 0x20;\\n    uint256 constant EXECUTE_SUB_PLAN = 0x21;\\n    uint256 constant APPROVE_ERC20 = 0x22;\\n    // COMMAND_PLACEHOLDER for 0x23 to 0x3f (all unused)\\n}\\n\",\"keccak256\":\"0x7495192865b4cdd91d2469183c4550ac621669f77a0c8952a53d3c287410f64f\",\"license\":\"GPL-3.0-or-later\"},\"contracts/lib/mode/routers/lib/VelodromeV2Constants.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.17;\\n\\n/// @title Constant state\\n/// @notice Constant state used by the Universal Router\\nlibrary Constants {\\n    /// @dev Used for identifying cases when this contract's balance of a token is to be used as an input\\n    /// This value is equivalent to 1<<255, i.e. a singular 1 in the most significant bit.\\n    uint256 internal constant CONTRACT_BALANCE = 0x8000000000000000000000000000000000000000000000000000000000000000;\\n\\n    /// @dev Used for identifying cases when a v2 pair has already received input tokens\\n    uint256 internal constant ALREADY_PAID = 0;\\n\\n    /// @dev Used as a flag for identifying the transfer of ETH instead of a token\\n    address internal constant ETH = address(0);\\n\\n    /// @dev Used as a flag for identifying that msg.sender should be used, saves gas by sending more 0 bytes\\n    address internal constant MSG_SENDER = address(1);\\n\\n    /// @dev Used as a flag for identifying address(this) should be used, saves gas by sending more 0 bytes\\n    address internal constant ADDRESS_THIS = address(2);\\n\\n    /// @dev The length of the bytes encoded address\\n    uint256 internal constant ADDR_SIZE = 20;\\n\\n    /// @dev The length of the bytes encoded fee\\n    uint256 internal constant V3_FEE_SIZE = 3;\\n\\n    /// @dev The offset of a single token address (20) and pool fee (3)\\n    uint256 internal constant NEXT_V3_POOL_OFFSET = ADDR_SIZE + V3_FEE_SIZE;\\n\\n    /// @dev The offset of an encoded pool key\\n    /// Token (20) + Fee (3) + Token (20) = 43\\n    uint256 internal constant V3_POP_OFFSET = NEXT_V3_POOL_OFFSET + ADDR_SIZE;\\n\\n    /// @dev The minimum length of an encoding that contains 2 or more pools\\n    uint256 internal constant MULTIPLE_V3_POOLS_MIN_LENGTH = V3_POP_OFFSET + NEXT_V3_POOL_OFFSET;\\n}\",\"keccak256\":\"0x30b4b776f9f85482ebb218e5f9e361eae96f0b4c6f875c9a5667447b990cc77e\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getLiquidityAmounts()": {
        "details": "This can be overridden to specify custom amounts for swapping"
      },
      "getLiquidityToken(uint256)": {
        "details": "This can be overridden to specify custom liquidity tokens"
      },
      "getOrderedAssets(bool)": {
        "details": "This can be overridden to specify custom ordering for swapping"
      },
      "getToken0()": {
        "details": "This should be overridden if Token0 is not WETH"
      },
      "getToken1()": {
        "details": "This should be overridden if Token1 is not WETH"
      },
      "getTokenPath(bool)": {
        "details": "This can be overridden to specify custom routes/paths for swapping"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3952,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_weth",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3954,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_manager",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3956,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_token0",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3958,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_token1",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 3960,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_swapRouter",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 3962,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_liquidityRouter",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 3964,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_poolId",
        "offset": 0,
        "slot": "7",
        "type": "t_bytes32"
      },
      {
        "astId": 3966,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_bundlerId",
        "offset": 0,
        "slot": "8",
        "type": "t_bytes32"
      },
      {
        "astId": 3968,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_slippage",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 3970,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_tickLower",
        "offset": 0,
        "slot": "10",
        "type": "t_int24"
      },
      {
        "astId": 3972,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_tickUpper",
        "offset": 3,
        "slot": "10",
        "type": "t_int24"
      },
      {
        "astId": 3977,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_liquidityPositionsByTokenId",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(LiquidityPosition)2075_storage)"
      },
      {
        "astId": 6860,
        "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
        "label": "_mode",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int24": {
        "encoding": "inplace",
        "label": "int24",
        "numberOfBytes": "3"
      },
      "t_mapping(t_uint256,t_struct(LiquidityPosition)2075_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IWeb3PacksDefs.LiquidityPosition)",
        "numberOfBytes": "32",
        "value": "t_struct(LiquidityPosition)2075_storage"
      },
      "t_struct(LiquidityPosition)2075_storage": {
        "encoding": "inplace",
        "label": "struct IWeb3PacksDefs.LiquidityPosition",
        "members": [
          {
            "astId": 2070,
            "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
            "label": "lpTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2072,
            "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
            "label": "liquidity",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2074,
            "contract": "contracts/lib/mode/bundlers/SSWethCartel.sol:SSWethCartel",
            "label": "stable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}