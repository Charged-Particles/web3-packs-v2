{
  "address": "0xB7DB5BF6B45782372B40e759cB60A79a522942f3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proton",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "chargedParticles",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "chargedState",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "bundlerId",
          "type": "bytes32"
        }
      ],
      "name": "BundlerNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedToExitWeth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundingFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protocolFee",
          "type": "uint256"
        }
      ],
      "name": "InsufficientForFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedTokens",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "MissingLiquidityUUID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeAssetTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoBundlesInPack",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwnerOrApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullReceiver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "UnsucessfulSwap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "BundledERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "BundledERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "chargedParticles",
          "type": "address"
        }
      ],
      "name": "ChargedParticlesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "chargedState",
          "type": "address"
        }
      ],
      "name": "ChargedStateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "packType",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        }
      ],
      "name": "PackBundled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "PackUnbundled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "ProtocolFeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proton",
          "type": "address"
        }
      ],
      "name": "ProtonSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "web3state",
          "type": "address"
        }
      ],
      "name": "Web3PacksStateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "Web3PacksTreasurySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC1155",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawStuckEther",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_chargedParticles",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_chargedState",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_cpBasketManager",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_cpWalletManager",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_proton",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_web3state",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "bundlerId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "percentBasisPoints",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.BundleChunk[]",
          "name": "bundleChunks",
          "type": "tuple[]"
        },
        {
          "internalType": "address[]",
          "name": "referrals",
          "type": "address[]"
        },
        {
          "internalType": "string",
          "name": "tokenMetaUri",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ERC20Timelock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ERC721Timelock",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.LockState",
          "name": "lockState",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "packType",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "ethPackPrice",
          "type": "uint256"
        }
      ],
      "name": "bundle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPackBalances",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftTokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IWeb3PacksDefs.TokenAmount[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPackPriceEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "packPriceEth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getReferralRewardsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "chargedParticles",
          "type": "address"
        }
      ],
      "name": "setChargedParticles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "chargedState",
          "type": "address"
        }
      ],
      "name": "setChargedState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proton",
          "type": "address"
        }
      ],
      "name": "setProton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "web3state",
          "type": "address"
        }
      ],
      "name": "setWeb3PacksState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellAll",
          "type": "bool"
        }
      ],
      "name": "unbundle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "packBundles",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "sellAll",
          "type": "bool"
        }
      ],
      "name": "unbundleUnknown",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x859d70181670bde6edc5f8b5e4a1be99f806f610d9167a6c6821c7a70a0a10da",
  "receipt": {
    "to": null,
    "from": "0xb8D175F16742395F530e0b3bC1d30BD06B78CdA9",
    "contractAddress": "0xB7DB5BF6B45782372B40e759cB60A79a522942f3",
    "transactionIndex": 6,
    "gasUsed": "3619835",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000400000000000000000000000010000000008000000000002000000",
    "blockHash": "0xc4ed42792764310ec8ac5925cd87811ceaef2c0171192ac56f5114b2f487933f",
    "transactionHash": "0x859d70181670bde6edc5f8b5e4a1be99f806f610d9167a6c6821c7a70a0a10da",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 21731875,
        "transactionHash": "0x859d70181670bde6edc5f8b5e4a1be99f806f610d9167a6c6821c7a70a0a10da",
        "address": "0xB7DB5BF6B45782372B40e759cB60A79a522942f3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b8d175f16742395f530e0b3bc1d30bd06b78cda9"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xc4ed42792764310ec8ac5925cd87811ceaef2c0171192ac56f5114b2f487933f"
      }
    ],
    "blockNumber": 21731875,
    "cumulativeGasUsed": "8344908",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4200000000000000000000000000000000000006",
    "0x76a5df1c6F53A4B80c8c8177edf52FBbC368E825",
    "0x0288280Df6221E7e9f23c1BB398c820ae0Aa6c10",
    "0x2691B4f4251408bA4b8bf9530B6961b9D0C1231F"
  ],
  "numDeployments": 1,
  "solcInputHash": "1696ac68afd6115cebb7032c3c7e3d5e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chargedParticles\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chargedState\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"}],\"name\":\"BundlerNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToExitWeth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundingFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"InsufficientForFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"MissingLiquidityUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeAssetTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBundlesInPack\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"UnsucessfulSwap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"BundledERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"name\":\"BundledERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"chargedParticles\",\"type\":\"address\"}],\"name\":\"ChargedParticlesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"chargedState\",\"type\":\"address\"}],\"name\":\"ChargedStateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"packType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"}],\"name\":\"PackBundled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"PackUnbundled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proton\",\"type\":\"address\"}],\"name\":\"ProtonSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"web3state\",\"type\":\"address\"}],\"name\":\"Web3PacksStateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"Web3PacksTreasurySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawStuckEther\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_chargedParticles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chargedState\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_cpBasketManager\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_cpWalletManager\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_web3state\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"bundlerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"percentBasisPoints\",\"type\":\"uint256\"}],\"internalType\":\"struct IWeb3PacksDefs.BundleChunk[]\",\"name\":\"bundleChunks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"referrals\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"tokenMetaUri\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ERC20Timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ERC721Timelock\",\"type\":\"uint256\"}],\"internalType\":\"struct IWeb3PacksDefs.LockState\",\"name\":\"lockState\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"packType\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ethPackPrice\",\"type\":\"uint256\"}],\"name\":\"bundle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPackBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IWeb3PacksDefs.TokenAmount[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPackPriceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"packPriceEth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getReferralRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chargedParticles\",\"type\":\"address\"}],\"name\":\"setChargedParticles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chargedState\",\"type\":\"address\"}],\"name\":\"setChargedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proton\",\"type\":\"address\"}],\"name\":\"setProton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"web3state\",\"type\":\"address\"}],\"name\":\"setWeb3PacksState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellAll\",\"type\":\"bool\"}],\"name\":\"unbundle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"packBundles\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"sellAll\",\"type\":\"bool\"}],\"name\":\"unbundleUnknown\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setChargedParticles(address)\":{\"details\":\"Setup the ChargedParticles Interface\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3PacksV2.sol\":\"Web3PacksV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0xfc10758fd8dba790c39468dccd358cb7cef06ae7c4781832cc7aa76f91f167e6\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/Web3PacksV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Web3PacksV2.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n//\\n//  __    __     _    _____   ___           _                   ____\\n// / / /\\\\ \\\\ \\\\___| |__|___ /  / _ \\\\__ _  ___| | _____     /\\\\   /\\\\___ \\\\\\n// \\\\ \\\\/  \\\\/ / _ \\\\ '_ \\\\ |_ \\\\ / /_)/ _` |/ __| |/ / __|____\\\\ \\\\ / / __) |\\n//  \\\\  /\\\\  /  __/ |_) |__) / ___/ (_| | (__|   <\\\\__ \\\\_____\\\\ V / / __/\\n//   \\\\/  \\\\/ \\\\___|_.__/____/\\\\/    \\\\__,_|\\\\___|_|\\\\_\\\\___/      \\\\_/ |_____|\\n//\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IWETH.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"./lib/BlackholePrevention.sol\\\";\\nimport \\\"./interfaces/IWeb3Packs.sol\\\";\\nimport \\\"./interfaces/IWeb3PacksState.sol\\\";\\nimport \\\"./interfaces/IWeb3PacksDefs.sol\\\";\\nimport \\\"./interfaces/IWeb3PacksBundler.sol\\\";\\nimport \\\"./interfaces/IChargedState.sol\\\";\\nimport \\\"./interfaces/IChargedParticles.sol\\\";\\nimport \\\"./interfaces/IBaseProton.sol\\\";\\n\\ncontract Web3PacksV2 is\\n  IWeb3Packs,\\n  Ownable,\\n  Pausable,\\n  BlackholePrevention,\\n  ReentrancyGuard\\n{\\n  using Address for address payable;\\n\\n  event ChargedParticlesSet(address indexed chargedParticles);\\n  event ChargedStateSet(address indexed chargedState);\\n  event Web3PacksStateSet(address indexed web3state);\\n  event ProtonSet(address indexed proton);\\n  event PackBundled(uint256 indexed tokenId, address indexed receiver, bytes32 packType, uint256 ethPackPrice);\\n  event PackUnbundled(uint256 indexed tokenId, address indexed receiver, uint256 ethAmount);\\n  event ProtocolFeeSet(uint256 fee);\\n  event Web3PacksTreasurySet(address indexed treasury);\\n\\n  uint256 private constant BASIS_POINTS = 10000;\\n\\n  address public _weth;\\n  address public _proton;\\n  address public _web3state;\\n  address public _chargedParticles;\\n  address public _chargedState;\\n  address payable internal _treasury;\\n  uint256 public _protocolFee;\\n\\n  // Charged Particles Wallet Managers\\n  string public _cpWalletManager = \\\"generic.B\\\";\\n  string public _cpBasketManager = \\\"generic.B\\\";\\n\\n  constructor(\\n    address weth,\\n    address proton,\\n    address chargedParticles,\\n    address chargedState\\n  ) {\\n    _weth = weth;\\n    _proton = proton;\\n    _chargedParticles = chargedParticles;\\n    _chargedState = chargedState;\\n  }\\n\\n  receive() external payable {}\\n\\n\\n  /***********************************|\\n  |               Public              |\\n  |__________________________________*/\\n\\n  function bundle(\\n    IWeb3PacksDefs.BundleChunk[] calldata bundleChunks,\\n    address[] calldata referrals,\\n    string calldata tokenMetaUri,\\n    IWeb3PacksDefs.LockState calldata lockState,\\n    bytes32 packType,\\n    uint256 ethPackPrice\\n  )\\n    external\\n    override\\n    payable\\n    whenNotPaused\\n    nonReentrant\\n    returns(uint256 tokenId)\\n  {\\n    _collectFees(ethPackPrice);\\n    uint256 rewards = _calculateReferralRewards(ethPackPrice, referrals);\\n    tokenId = _bundle(\\n      bundleChunks,\\n      tokenMetaUri,\\n      lockState,\\n      ethPackPrice - rewards\\n    );\\n    emit PackBundled(tokenId, _msgSender(), packType, ethPackPrice);\\n  }\\n\\n  function unbundle(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 tokenId,\\n    bool sellAll\\n  )\\n    external\\n    override\\n    payable\\n    whenNotPaused\\n    nonReentrant\\n  {\\n    _collectFees(0);\\n    uint256 ethAmount = _unbundle(\\n      receiver,\\n      tokenAddress,\\n      tokenId,\\n      sellAll\\n    );\\n    emit PackUnbundled(tokenId, receiver, ethAmount);\\n  }\\n\\n  // Primarily for Unbundling Old Packs from V1\\n  function unbundleUnknown(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 tokenId,\\n    bytes32[] memory packBundles,\\n    bool sellAll\\n  )\\n    external\\n    override\\n    payable\\n    whenNotPaused\\n    nonReentrant\\n  {\\n    _collectFees(0);\\n    uint256 ethAmount = _unbundlePack(\\n      receiver,\\n      tokenAddress,\\n      tokenId,\\n      packBundles,\\n      sellAll\\n    );\\n    emit PackUnbundled(tokenId, receiver, ethAmount);\\n  }\\n\\n  // NOTE: Call via \\\"staticCall\\\" for Balances\\n  function getPackBalances(address tokenAddress, uint256 tokenId) public override returns (TokenAmount[] memory) {\\n    return _getPackBalances(tokenAddress, tokenId);\\n  }\\n\\n  function getPackPriceEth(uint256 tokenId) public view override returns (uint256 packPriceEth) {\\n    packPriceEth = IWeb3PacksState(_web3state).getPackPriceByPackId(tokenId);\\n  }\\n\\n  function getReferralRewardsOf(address account) public view override returns (uint256 balance) {\\n    balance = IWeb3PacksState(_web3state).getReferrerBalance(account);\\n  }\\n\\n  /***********************************|\\n  |     Private Bundle Functions      |\\n  |__________________________________*/\\n\\n  function _bundle(\\n    IWeb3PacksDefs.BundleChunk[] calldata bundleChunks,\\n    string calldata tokenMetaUri,\\n    IWeb3PacksDefs.LockState calldata lockState,\\n    uint256 ethPackPrice\\n  )\\n    internal\\n    returns(uint256 tokenId)\\n  {\\n    IWeb3PacksBundler bundler;\\n\\n    // Mint Web3Pack NFT\\n    tokenId = _createBasicProton(tokenMetaUri);\\n\\n    // Wrap ETH for WETH\\n    IWETH(_weth).deposit{value: ethPackPrice}();\\n    uint256 wethTotal = IERC20(_weth).balanceOf(address(this));\\n    uint256 chunkWeth;\\n\\n    // Returned from Each Bundle:\\n    address tokenAddress;\\n    uint256 amountOut;\\n    uint256 nftTokenId;\\n\\n    // Iterate over each Bundle\\n    bytes32[] memory packBundlerIds = new bytes32[](bundleChunks.length);\\n    for (uint256 i; i < bundleChunks.length; i++) {\\n      IWeb3PacksDefs.BundleChunk memory chunk = bundleChunks[i];\\n      packBundlerIds[i] = chunk.bundlerId; // track bundlerIds per pack\\n\\n      // Ensure Bundler is Registered\\n      address bundlerAddress = IWeb3PacksState(_web3state).getBundlerById(chunk.bundlerId);\\n      if (bundlerAddress == address(0)) {\\n        revert BundlerNotRegistered(chunk.bundlerId);\\n      }\\n      bundler = IWeb3PacksBundler(bundlerAddress);\\n\\n      // Calculate Percent\\n      chunkWeth = (wethTotal * chunk.percentBasisPoints) / BASIS_POINTS;\\n\\n      // Send WETH to Bundler\\n      TransferHelper.safeTransfer(_weth, address(bundler), chunkWeth);\\n\\n      // Receive Assets from Bundler\\n      //  If Liquidity is ERC20: nftTokenId == 0\\n      //  If Liquidity is ERC721: nftTokenId > 0\\n      (tokenAddress, amountOut, nftTokenId) = bundler.bundle(tokenId, _msgSender());\\n\\n      // Deposit the Assets into the Web3Packs NFT\\n      if (nftTokenId == 0) {\\n        _energize(tokenId, tokenAddress, amountOut);\\n        emit BundledERC20(tokenAddress, amountOut);\\n      } else {\\n        _bond(tokenId, tokenAddress, nftTokenId);\\n        emit BundledERC721(tokenAddress, nftTokenId);\\n      }\\n    }\\n\\n    // Track Pack Data\\n    IWeb3PacksState(_web3state).setBundlesByPackId(tokenId, packBundlerIds);\\n    IWeb3PacksState(_web3state).setPackPriceByPackId(tokenId, ethPackPrice);\\n\\n    // Set the Timelock State\\n    _lock(lockState, tokenId);\\n\\n    // Transfer the Web3Packs NFT to the Buyer\\n    IBaseProton(_proton).safeTransferFrom(address(this), _msgSender(), tokenId);\\n  }\\n\\n  function _unbundle(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 packTokenId,\\n    bool sellAll\\n  )\\n    internal\\n    returns (uint ethAmount)\\n  {\\n    // Ensure Pack has Bundles\\n    bytes32[] memory bundles = IWeb3PacksState(_web3state).getBundlesByPackId(packTokenId);\\n    if (bundles.length == 0) {\\n      revert NoBundlesInPack();\\n    }\\n\\n    // Unbundle Known Pack\\n    ethAmount = _unbundlePack(\\n      receiver,\\n      tokenAddress,\\n      packTokenId,\\n      bundles,\\n      sellAll\\n    );\\n\\n    // Clear Bundles for Pack\\n    bytes32[] memory empty;\\n    IWeb3PacksState(_web3state).setBundlesByPackId(packTokenId, empty);\\n    IWeb3PacksState(_web3state).setPackPriceByPackId(packTokenId, 0);\\n  }\\n\\n  function _unbundlePack(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 packTokenId,\\n    bytes32[] memory packBundles,\\n    bool sellAll\\n  )\\n    internal\\n    returns (uint ethAmount)\\n  {\\n    IWeb3PacksBundler bundler;\\n\\n    // Verify Ownership\\n    address owner = IERC721(tokenAddress).ownerOf(packTokenId);\\n    if (_msgSender() != owner) {\\n      revert NotOwnerOrApproved();\\n    }\\n\\n    address assetTokenAddress;\\n    uint256 assetTokenId;\\n    for (uint i; i < packBundles.length; i++) {\\n      address bundlerAddress = IWeb3PacksState(_web3state).getBundlerById(packBundles[i]);\\n      if (bundlerAddress == address(0)) {\\n        // skip unregistered bundlers to prevent breaking unbundle\\n        continue;\\n      }\\n      bundler = IWeb3PacksBundler(bundlerAddress);\\n\\n      // Pull Assets from NFT and send to Bundler for Unbundling\\n      (assetTokenAddress, assetTokenId) = bundler.getLiquidityToken(packTokenId);\\n      if (assetTokenId == 0) {\\n        _release(bundlerAddress, packTokenId, assetTokenAddress);\\n      } else {\\n        _breakBond(bundlerAddress, packTokenId, assetTokenAddress, assetTokenId);\\n      }\\n\\n      // Unbundle current asset\\n      ethAmount += bundler.unbundle(receiver, packTokenId, sellAll);\\n    }\\n  }\\n\\n  function _getPackBalances(address tokenAddress, uint256 tokenId) internal returns (TokenAmount[] memory) {\\n    IWeb3PacksBundler bundler;\\n\\n    // Ensure Pack has Bundles\\n    bytes32[] memory bundles = IWeb3PacksState(_web3state).getBundlesByPackId(tokenId);\\n    uint256 bundleCount = bundles.length;\\n    if (bundleCount == 0) {\\n      revert NoBundlesInPack();\\n    }\\n\\n    TokenAmount[] memory tokenBalances = new TokenAmount[](bundleCount);\\n    for (uint i; i < bundleCount; i++) {\\n      bytes32 bundlerId = bundles[i];\\n      address bundlerAddress = IWeb3PacksState(_web3state).getBundlerById(bundlerId);\\n      if (bundlerAddress == address(0)) {\\n        // skip unregistered bundlers\\n        continue;\\n      }\\n\\n      // Get Liquidity Token from Bundler\\n      bundler = IWeb3PacksBundler(bundlerAddress);\\n      (address assetTokenAddress, uint256 assetTokenId) = bundler.getLiquidityToken(tokenId);\\n      bool isNft = (assetTokenId > 0);\\n\\n      // Get Balance of NFT from Charged Particles\\n      uint256 assetBalance = isNft ? 1 : _getMass(tokenAddress, tokenId, assetTokenAddress);\\n\\n      // Track Token Balances\\n      tokenBalances[i] = TokenAmount({\\n        tokenAddress: assetTokenAddress,\\n        balance: assetBalance,\\n        nftTokenId: assetTokenId\\n      });\\n    }\\n    return tokenBalances;\\n  }\\n\\n  /***********************************|\\n  |     Private Charged Functions     |\\n  |__________________________________*/\\n\\n  function _createBasicProton(\\n    string memory tokenMetadataUri\\n  )\\n    internal\\n    returns (uint256 mintedTokenId)\\n  {\\n    // Mint Web3Packs NFT (Charged-Particles ProtonC)\\n    mintedTokenId = IBaseProton(_proton).createBasicProton(\\n      address(this),\\n      address(this),\\n      tokenMetadataUri\\n    );\\n  }\\n\\n  function _energize(\\n    uint256 packTokenId,\\n    address assetTokenAddress,\\n    uint256 assetTokenAmount\\n  )\\n    internal\\n  {\\n    if (assetTokenAmount == 0) {\\n      assetTokenAmount = IERC20(assetTokenAddress).balanceOf(address(this));\\n    }\\n\\n    TransferHelper.safeApprove(\\n      assetTokenAddress,\\n      address(_chargedParticles),\\n      assetTokenAmount\\n    );\\n\\n    IChargedParticles(_chargedParticles).energizeParticle(\\n      _proton,\\n      packTokenId,\\n      _cpWalletManager,\\n      assetTokenAddress,\\n      assetTokenAmount,\\n      address(this)\\n    );\\n  }\\n\\n  function _release(\\n    address receiver,\\n    uint256 packTokenId,\\n    address assetTokenAddress\\n  )\\n    internal\\n  {\\n    IChargedParticles(_chargedParticles).releaseParticle(\\n      receiver,\\n      _proton,\\n      packTokenId,\\n      _cpWalletManager,\\n      assetTokenAddress\\n    );\\n  }\\n\\n  function _bond(\\n    uint256 packTokenId,\\n    address nftTokenAddress,\\n    uint256 nftTokenId\\n  )\\n    internal\\n  {\\n    IERC721(nftTokenAddress).setApprovalForAll(_chargedParticles, true);\\n\\n    IChargedParticles(_chargedParticles).covalentBond(\\n      _proton,\\n      packTokenId,\\n      _cpBasketManager,\\n      nftTokenAddress,\\n      nftTokenId,\\n      1\\n    );\\n  }\\n\\n  function _breakBond(\\n    address receiver,\\n    uint256 packTokenId,\\n    address nftTokenAddress,\\n    uint256 nftTokenId\\n  )\\n    internal\\n  {\\n    IChargedParticles(_chargedParticles).breakCovalentBond(\\n      receiver,\\n      _proton,\\n      packTokenId,\\n      _cpBasketManager,\\n      nftTokenAddress,\\n      nftTokenId,\\n      1\\n    );\\n  }\\n\\n  function _lock(LockState calldata lockState, uint256 tokenId) internal {\\n    if(lockState.ERC20Timelock > 0) {\\n      IChargedState(_chargedState).setReleaseTimelock(\\n        _proton,\\n        tokenId,\\n        lockState.ERC20Timelock\\n      );\\n    }\\n\\n    if(lockState.ERC721Timelock > 0) {\\n      IChargedState(_chargedState).setBreakBondTimelock(\\n        _proton,\\n        tokenId,\\n        lockState.ERC721Timelock\\n      );\\n    }\\n  }\\n\\n  function _getMass(address tokenAddress, uint256 tokenId, address assetTokenAddress) internal returns (uint256 assetMass) {\\n    /// @dev \\\"baseParticleMass\\\" is not a \\\"view\\\" function; call via \\\"callStatic\\\"\\n    assetMass = IChargedParticles(_chargedParticles)\\n      .baseParticleMass(tokenAddress, tokenId, _cpWalletManager, assetTokenAddress);\\n  }\\n\\n  function _collectFees(uint256 excludedAmount) internal {\\n    // Track Collected Fees\\n    if (_protocolFee > 0 && msg.value < (_protocolFee + excludedAmount)) {\\n      revert InsufficientForFee(msg.value, excludedAmount, _protocolFee);\\n    }\\n    uint256 fees = msg.value - excludedAmount;\\n    _treasury.sendValue(fees);\\n  }\\n\\n  function _calculateReferralRewards(\\n    uint256 ethPackPrice,\\n    address[] memory referrals\\n  ) internal returns (uint256 fee) {\\n    uint256 referralAmountTotal = ((ethPackPrice * 330) / BASIS_POINTS);  // 3.3%\\n    IWeb3PacksState _state = IWeb3PacksState(_web3state);\\n\\n    // Calculate Referral Amounts and Distribute\\n    if (referrals.length > 0 && referrals[0] != address(0)) {\\n      // Remove Referral Value from Funding Value\\n      fee = referralAmountTotal;\\n\\n      if (referrals.length > 1 && referrals[1] != address(0)) {\\n        if (referrals.length > 2 && referrals[2] != address(0)) {\\n          _state.addToReferrerBalance(referrals[0], (ethPackPrice * 30) / BASIS_POINTS);    // 0.3%\\n          _state.addToReferrerBalance(referrals[1], (ethPackPrice * 30) / BASIS_POINTS);    // 0.3%\\n          _state.addToReferrerBalance(referrals[2], (ethPackPrice * 270) / BASIS_POINTS);   // 2.7%\\n        } else {\\n          _state.addToReferrerBalance(referrals[0], (ethPackPrice * 30) / BASIS_POINTS);    // 0.3%\\n          _state.addToReferrerBalance(referrals[1], (ethPackPrice * 300) / BASIS_POINTS);   // 3.0%\\n        }\\n      } else {\\n        _state.addToReferrerBalance(referrals[0], referralAmountTotal);   // 3.3%\\n      }\\n\\n      // Transfer Rewards to State Contract\\n      payable(_web3state).sendValue(fee);\\n    }\\n  }\\n\\n  /***********************************|\\n  |          Only Admin/DAO           |\\n  |__________________________________*/\\n\\n  /**\\n    * @dev Setup the ChargedParticles Interface\\n  */\\n  function setChargedParticles(address chargedParticles) external onlyOwner {\\n    require(chargedParticles != address(0), \\\"Invalid address for chargedParticles\\\");\\n    _chargedParticles = chargedParticles;\\n    emit ChargedParticlesSet(chargedParticles);\\n  }\\n\\n  function setChargedState(address chargedState) external onlyOwner {\\n    require(chargedState != address(0), \\\"Invalid address for chargedState\\\");\\n    _chargedState = chargedState;\\n    emit ChargedStateSet(chargedState);\\n  }\\n\\n  function setProton(address proton) external onlyOwner {\\n    require(proton != address(0), \\\"Invalid address for proton\\\");\\n    _proton = proton;\\n    emit ProtonSet(proton);\\n  }\\n\\n  function setWeb3PacksState(address web3state) external onlyOwner {\\n    require(web3state != address(0), \\\"Invalid address for web3state\\\");\\n    _web3state = web3state;\\n    emit Web3PacksStateSet(web3state);\\n  }\\n\\n  function setTreasury(address payable treasury) external onlyOwner {\\n    require(treasury != address(0), \\\"Invalid address for treasury\\\");\\n    _treasury = treasury;\\n    emit Web3PacksTreasurySet(treasury);\\n  }\\n\\n  function setProtocolFee(uint256 fee) external onlyOwner {\\n    _protocolFee = fee;\\n    emit ProtocolFeeSet(fee);\\n  }\\n\\n  function pause() public onlyOwner {\\n    _pause();\\n  }\\n\\n  function unpause() public onlyOwner {\\n    _unpause();\\n  }\\n\\n\\n  /***********************************|\\n  |          Only Admin/DAO           |\\n  |      (blackhole prevention)       |\\n  |__________________________________*/\\n\\n  function withdrawEther(address payable receiver, uint256 amount) external virtual onlyOwner {\\n    _withdrawEther(receiver, amount);\\n  }\\n\\n  function withdrawErc20(address payable receiver, address tokenAddress, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC20(receiver, tokenAddress, amount);\\n  }\\n\\n  function withdrawERC721(address payable receiver, address tokenAddress, uint256 tokenId) external virtual onlyOwner {\\n    _withdrawERC721(receiver, tokenAddress, tokenId);\\n  }\\n\\n  function withdrawERC1155(address payable receiver, address tokenAddress, uint256 tokenId, uint256 amount) external virtual onlyOwner {\\n    _withdrawERC1155(receiver, tokenAddress, tokenId, amount);\\n  }\\n\\n  function onERC721Received(\\n    address,\\n    address,\\n    uint256,\\n    bytes calldata\\n  ) external pure returns(bytes4) {\\n    return this.onERC721Received.selector;\\n  }\\n}\\n\",\"keccak256\":\"0xd60efef7e7ef457dc04a9bd1fbcdf85f04f261436f6632457c20319f14c3e8ff\",\"license\":\"MIT\"},\"contracts/interfaces/IBaseProton.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IBaseProton.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\ninterface IBaseProton {\\n  function createProton(\\n    address creator,\\n    address receiver,\\n    string memory tokenMetaUri\\n  ) external returns (uint256 newTokenId);\\n\\n  function createBasicProton(\\n    address creator,\\n    address receiver,\\n    string memory tokenMetaUri\\n  )\\n    external\\n    payable\\n    returns (uint256 newTokenId);\\n\\n  function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n}\",\"keccak256\":\"0x7548b7647b5407bb55566f44c95cace43cf38fd984caecb6e864d735ae4000a3\",\"license\":\"MIT\"},\"contracts/interfaces/IChargedParticles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IChargedParticles.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @notice Interface for Charged Particles\\n */\\ninterface IChargedParticles {\\n    /***********************************|\\n  |             Public API            |\\n  |__________________________________*/\\n\\n    function getStateAddress() external view returns (address stateAddress);\\n\\n    function getSettingsAddress()\\n        external\\n        view\\n        returns (address settingsAddress);\\n\\n    function getManagersAddress()\\n        external\\n        view\\n        returns (address managersAddress);\\n\\n    function getFeesForDeposit(uint256 assetAmount)\\n        external\\n        view\\n        returns (uint256 protocolFee);\\n\\n    function baseParticleMass(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256);\\n\\n    function currentParticleCharge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256);\\n\\n    function currentParticleKinetics(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256);\\n\\n    function currentParticleCovalentBonds(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata basketManagerId\\n    ) external view returns (uint256);\\n\\n    /***********************************|\\n  |        Particle Mechanics         |\\n  |__________________________________*/\\n\\n    function energizeParticle(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount,\\n        address referrer\\n    ) external returns (uint256 yieldTokensAmount);\\n\\n    function dischargeParticle(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function dischargeParticleAmount(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function dischargeParticleForCreator(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount\\n    ) external returns (uint256 receiverAmount);\\n\\n    function releaseParticle(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function releaseParticleAmount(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata walletManagerId,\\n        address assetToken,\\n        uint256 assetAmount\\n    ) external returns (uint256 creatorAmount, uint256 receiverAmount);\\n\\n    function covalentBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata basketManagerId,\\n        address nftTokenAddress,\\n        uint256 nftTokenId,\\n        uint256 nftTokenAmount\\n    ) external returns (bool success);\\n\\n    function breakCovalentBond(\\n        address receiver,\\n        address contractAddress,\\n        uint256 tokenId,\\n        string calldata basketManagerId,\\n        address nftTokenAddress,\\n        uint256 nftTokenId,\\n        uint256 nftTokenAmount\\n    ) external returns (bool success);\\n\\n    /***********************************|\\n  |          Particle Events          |\\n  |__________________________________*/\\n\\n    event Initialized(address indexed initiator);\\n    event ControllerSet(address indexed controllerAddress, string controllerId);\\n    event DepositFeeSet(uint256 depositFee);\\n    event ProtocolFeesCollected(\\n        address indexed assetToken,\\n        uint256 depositAmount,\\n        uint256 feesCollected\\n    );\\n}\\n\",\"keccak256\":\"0xa32fcfc956d70a62f18a5dd80db30d1b3a70403e5865aa8a093da5ca79be8fe0\",\"license\":\"MIT\"},\"contracts/interfaces/IChargedState.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IChargedState.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\n/**\\n * @notice Interface for Charged State\\n */\\ninterface IChargedState {\\n  /***********************************|\\n  |             Public API            |\\n  |__________________________________*/\\n\\n    function getDischargeTimelockExpiry(\\n        address contractAddress,\\n        uint256 tokenId\\n    ) external view returns (uint256 lockExpiry);\\n\\n    function getReleaseTimelockExpiry(address contractAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (uint256 lockExpiry);\\n\\n    function getBreakBondTimelockExpiry(\\n        address contractAddress,\\n        uint256 tokenId\\n    ) external view returns (uint256 lockExpiry);\\n\\n    function isApprovedForDischarge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isApprovedForRelease(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isApprovedForBreakBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isApprovedForTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external returns (bool);\\n\\n    function isEnergizeRestricted(address contractAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (bool);\\n\\n    function isCovalentBondRestricted(address contractAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (bool);\\n\\n    function getDischargeState(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address sender\\n    )\\n        external\\n        returns (\\n            bool allowFromAll,\\n            bool isApproved,\\n            uint256 timelock,\\n            uint256 tempLockExpiry\\n        );\\n\\n    function getReleaseState(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address sender\\n    )\\n        external\\n        returns (\\n            bool allowFromAll,\\n            bool isApproved,\\n            uint256 timelock,\\n            uint256 tempLockExpiry\\n        );\\n\\n    function getBreakBondState(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address sender\\n    )\\n        external\\n        returns (\\n            bool allowFromAll,\\n            bool isApproved,\\n            uint256 timelock,\\n            uint256 tempLockExpiry\\n        );\\n\\n    /***********************************|\\n  |      Only NFT Owner/Operator      |\\n  |__________________________________*/\\n\\n    function setDischargeApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setReleaseApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setBreakBondApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setTimelockApproval(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setApprovalForAll(\\n        address contractAddress,\\n        uint256 tokenId,\\n        address operator\\n    ) external;\\n\\n    function setPermsForRestrictCharge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForAllowDischarge(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForAllowRelease(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForRestrictBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setPermsForAllowBreakBond(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool state\\n    ) external;\\n\\n    function setDischargeTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        uint256 unlockBlock\\n    ) external;\\n\\n    function setReleaseTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        uint256 unlockBlock\\n    ) external;\\n\\n    function setBreakBondTimelock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        uint256 unlockBlock\\n    ) external;\\n\\n    /***********************************|\\n  |         Only NFT Contract         |\\n  |__________________________________*/\\n\\n    function setTemporaryLock(\\n        address contractAddress,\\n        uint256 tokenId,\\n        bool isLocked\\n    ) external;\\n\\n    /***********************************|\\n  |          Particle Events          |\\n  |__________________________________*/\\n\\n    event Initialized(address indexed initiator);\\n    event ControllerSet(address indexed controllerAddress, string controllerId);\\n\\n    event DischargeApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n    event ReleaseApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n    event BreakBondApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n    event TimelockApproval(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed owner,\\n        address operator\\n    );\\n\\n    event TokenDischargeTimelock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed operator,\\n        uint256 unlockBlock\\n    );\\n    event TokenReleaseTimelock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed operator,\\n        uint256 unlockBlock\\n    );\\n    event TokenBreakBondTimelock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        address indexed operator,\\n        uint256 unlockBlock\\n    );\\n    event TokenTempLock(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        uint256 unlockBlock\\n    );\\n\\n    event PermsSetForRestrictCharge(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForAllowDischarge(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForAllowRelease(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForRestrictBond(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n    event PermsSetForAllowBreakBond(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        bool state\\n    );\\n}\\n\",\"keccak256\":\"0x3425b24ea258cabb1fb0244820487950704a0ddc62930e0f8315e75f2ebf7e17\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3Packs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3Packs.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\nimport \\\"./IWeb3PacksDefs.sol\\\";\\n\\ninterface IWeb3Packs is IWeb3PacksDefs {\\n  event BundledERC20(address indexed tokenAddress, uint256 amountOut);\\n  event BundledERC721(address indexed tokenAddress, uint256 nftTokenId);\\n\\n  // BUNDLE\\n  function bundle(\\n    IWeb3PacksDefs.BundleChunk[] calldata bundleChunks,\\n    address[] calldata referrals,\\n    string calldata tokenMetaUri,\\n    IWeb3PacksDefs.LockState calldata lockState,\\n    bytes32 packType,\\n    uint256 ethPackPrice\\n  ) external\\n    payable\\n    returns(uint256 tokenId);\\n\\n  // UNBUNDLE\\n  function unbundle(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 tokenId,\\n    bool sellAll\\n  ) external\\n    payable;\\n\\n  function unbundleUnknown(\\n    address payable receiver,\\n    address tokenAddress,\\n    uint256 tokenId,\\n    bytes32[] memory packBundles,\\n    bool sellAll\\n  ) external\\n    payable;\\n\\n  // QUERY\\n  function getPackBalances(\\n    address tokenAddress,\\n    uint256 tokenId\\n  ) external\\n    returns (TokenAmount[] memory);\\n\\n  function getPackPriceEth(uint256 tokenId)\\n    external\\n    returns (uint256 packPriceEth);\\n\\n  function getReferralRewardsOf(address account)\\n    external\\n    returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0x24d8b6820bb83a21c86308f732baaa06f12e629a2b1016cab185b98db6a890c2\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksBundler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksBundler.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\n\\ninterface IWeb3PacksBundler {\\n  event BundledTokenSS(address indexed token, uint256 amount);\\n  event BundledTokenLP(address indexed token0, address indexed token1, uint256 amount0, uint256 amount1, uint256 liquidity);\\n\\n  function getLiquidityToken(uint256 packTokenId) external returns (address tokenAddress, uint256 tokenId);\\n\\n  function bundle(uint256 packTokenId, address sender)\\n    payable\\n    external\\n    returns(\\n      address tokenAddress,\\n      uint256 amountOut,\\n      uint256 nftTokenId\\n    );\\n\\n  function unbundle(address payable receiver, uint256 packTokenId, bool sellAll)\\n    external\\n    returns(uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x5503608e26e5cc8feaf1216d25f865c7f163ae4f852343f05b8a95478279f4f6\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksDefs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksDefs.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity 0.8.17;\\n\\ninterface IWeb3PacksDefs {\\n  // Custom Errors\\n  error NotOwnerOrApproved();\\n  error FundingFailed();\\n  error SwapFailed();\\n  error NullReceiver();\\n  error ContractNotAllowed();\\n  error NativeAssetTransferFailed();\\n  error MismatchedTokens();\\n  error NoBundlesInPack();\\n  error FailedToExitWeth();\\n  error BundlerNotRegistered(bytes32 bundlerId);\\n  error MissingLiquidityUUID(address tokenAddress);\\n  error UnsucessfulSwap(address tokenOut, uint256 amountIn, address router);\\n  error InsufficientForFee(uint256 value, uint256 ethPackPrice, uint256 protocolFee);\\n\\n  struct RouterConfig {\\n    address weth;\\n    address token0;\\n    address token1;\\n    address manager;\\n    address swapRouter;\\n    address liquidityRouter;\\n    bytes32 poolId;\\n    bytes32 bundlerId;\\n    uint256 slippage;\\n    int24 tickLower;\\n    int24 tickUpper;\\n  }\\n\\n  struct BundleChunk {\\n    bytes32 bundlerId;\\n    uint256 percentBasisPoints;\\n  }\\n\\n  struct Token {\\n    address tokenAddress;\\n    uint256 tokenDecimals;\\n    string tokenSymbol;\\n  }\\n\\n  struct TokenAmount {\\n    address tokenAddress;\\n    uint256 balance;\\n    uint256 nftTokenId;\\n  }\\n\\n  struct Route {\\n    address token0;\\n    address token1;\\n    bool stable;\\n  }\\n\\n  struct LiquidityPosition {\\n    uint256 lpTokenId;\\n    uint256 liquidity;\\n    bool stable;\\n  }\\n\\n  struct LockState {\\n    uint256 ERC20Timelock;\\n    uint256 ERC721Timelock;\\n  }\\n}\\n\",\"keccak256\":\"0xd66482cd58eeed3a65b16b764aa81bebb2fdafb5fc966f1fa069e17e2c91247f\",\"license\":\"MIT\"},\"contracts/interfaces/IWeb3PacksState.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IWeb3PacksState.sol\\n// Copyright (c) 2025 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\npragma solidity 0.8.17;\\n\\ninterface IWeb3PacksState {\\n  function getBundlerById(bytes32 bundlerId) external view returns (address bundler);\\n  function setPackPriceByPackId(uint256 tokenId, uint256 packPrice) external;\\n  function getPackPriceByPackId(uint256 tokenId) external view returns (uint256 packPrice);\\n  function setBundlesByPackId(uint256 tokenId, bytes32[] memory bundles) external;\\n  function getBundlesByPackId(uint256 tokenId) external view returns (bytes32[] memory bundles);\\n  function addToReferrerBalance(address referrer, uint256 amount) external;\\n  function getReferrerBalance(address referrer) external view returns (uint256 balance);\\n  function claimReferralRewards(address payable account) external;\\n\\n  function setWeb3Packs(address web3packs) external;\\n  function registerBundlerId(bytes32 bundlerId, address bundlerAddress) external;\\n}\\n\",\"keccak256\":\"0x91c395fb03e86f08210b0f7dfdb5d90b4e0caea29f89612f99ed8fd38596a4c9\",\"license\":\"MIT\"},\"contracts/lib/BlackholePrevention.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// BlackholePrevention.sol -- Part of the Charged Particles Protocol\\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\n/**\\n * @notice Prevents ETH or Tokens from getting stuck in a contract by allowing\\n *  the Owner/DAO to pull them out on behalf of a user\\n * This is only meant to contracts that are not expected to hold tokens, but do handle transferring them.\\n */\\ncontract BlackholePrevention {\\n    using Address for address payable;\\n    using SafeERC20 for IERC20;\\n\\n    event WithdrawStuckEther(address indexed receiver, uint256 amount);\\n    event WithdrawStuckERC20(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 amount\\n    );\\n    event WithdrawStuckERC721(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId\\n    );\\n    event WithdrawStuckERC1155(\\n        address indexed receiver,\\n        address indexed tokenAddress,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    function _withdrawEther(address payable receiver, uint256 amount)\\n        internal\\n        virtual\\n    {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (address(this).balance >= amount) {\\n            receiver.sendValue(amount);\\n            emit WithdrawStuckEther(receiver, amount);\\n        }\\n    }\\n\\n    function _withdrawERC20(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC20(tokenAddress).balanceOf(address(this)) >= amount) {\\n            IERC20(tokenAddress).safeTransfer(receiver, amount);\\n            emit WithdrawStuckERC20(receiver, tokenAddress, amount);\\n        }\\n    }\\n\\n    function _withdrawERC721(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (IERC721(tokenAddress).ownerOf(tokenId) == address(this)) {\\n            IERC721(tokenAddress).transferFrom(\\n                address(this),\\n                receiver,\\n                tokenId\\n            );\\n            emit WithdrawStuckERC721(receiver, tokenAddress, tokenId);\\n        }\\n    }\\n\\n    function _withdrawERC1155(\\n        address payable receiver,\\n        address tokenAddress,\\n        uint256 tokenId,\\n        uint256 amount\\n    ) internal virtual {\\n        require(receiver != address(0x0), \\\"BHP:E-403\\\");\\n        if (\\n            IERC1155(tokenAddress).balanceOf(address(this), tokenId) >= amount\\n        ) {\\n            IERC1155(tokenAddress).safeTransferFrom(\\n                address(this),\\n                receiver,\\n                tokenId,\\n                amount,\\n                \\\"\\\"\\n            );\\n            emit WithdrawStuckERC1155(receiver, tokenAddress, tokenId, amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa7de406bd3b1092f8222d3eb1e2a990381429a5cb6bab48a811ff7118a43746\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052600960808181526833b2b732b934b1972160b91b60a052620000279082620001ed565b5060408051808201909152600981526833b2b732b934b1972160b91b6020820152600a90620000579082620001ed565b503480156200006557600080fd5b506040516200406f3803806200406f8339810160408190526200008891620002d6565b6200009333620000f8565b6000805460ff60a01b1916905560018055600280546001600160a01b039586166001600160a01b031991821617909155600380549486169482169490941790935560058054928516928416929092179091556006805491909316911617905562000333565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017357607f821691505b6020821081036200019457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e857600081815260208120601f850160051c81016020861015620001c35750805b601f850160051c820191505b81811015620001e457828155600101620001cf565b5050505b505050565b81516001600160401b0381111562000209576200020962000148565b62000221816200021a84546200015e565b846200019a565b602080601f831160018114620002595760008415620002405750858301515b600019600386901b1c1916600185901b178555620001e4565b600085815260208120601f198616915b828110156200028a5788860151825594840194600190910190840162000269565b5085821015620002a95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b0381168114620002d157600080fd5b919050565b60008060008060808587031215620002ed57600080fd5b620002f885620002b9565b93506200030860208601620002b9565b92506200031860408601620002b9565b91506200032860608601620002b9565b905092959194509250565b613d2c80620003436000396000f3fe6080604052600436106101dc5760003560e01c8063787dce3d11610102578063b4540d7411610095578063dafb944911610064578063dafb94491461057a578063edd777b31461059a578063f0f44260146105ad578063f2fde38b146105cd57600080fd5b8063b4540d74146104fa578063b7683e9314610527578063b76c375314610547578063bd3266161461055a57600080fd5b8063a0edb48b116100d1578063a0edb48b14610487578063a1764595146104a7578063a8499fdf146104c7578063aac561ca146104e757600080fd5b8063787dce3d146104145780638456cb59146104345780638da5cb5b146104495780639efca9be1461046757600080fd5b80633f656fb81161017a5780635c975abb116101495780635c975abb146103a0578063609b8813146103ca5780636e5559fd146103df578063715018a6146103ff57600080fd5b80633f656fb8146103205780634025feb214610340578063522f681514610360578063524f389d1461038057600080fd5b80631593dee1116101b65780631593dee114610291578063252c9c94146102b157806330219ef4146102d35780633f4ba83a1461030b57600080fd5b806307abbbf9146101e8578063108e4db71461020a578063150b7a021461023357600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b50610208610203366004613262565b6105ed565b005b34801561021657600080fd5b5061022060085481565b6040519081526020015b60405180910390f35b34801561023f57600080fd5b5061027861024e3660046132c8565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040516001600160e01b0319909116815260200161022a565b34801561029d57600080fd5b506102086102ac36600461333b565b61069a565b3480156102bd57600080fd5b506102c66106b2565b60405161022a91906133cc565b3480156102df57600080fd5b506005546102f3906001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b34801561031757600080fd5b50610208610740565b34801561032c57600080fd5b5061022061033b366004613262565b610752565b34801561034c57600080fd5b5061020861035b36600461333b565b6107e6565b34801561036c57600080fd5b5061020861037b3660046133df565b6107f9565b34801561038c57600080fd5b5061022061039b36600461340b565b61080f565b3480156103ac57600080fd5b50600054600160a01b900460ff16604051901515815260200161022a565b3480156103d657600080fd5b506102c661085c565b3480156103eb57600080fd5b506102086103fa366004613262565b610869565b34801561040b57600080fd5b50610208610936565b34801561042057600080fd5b5061020861042f36600461340b565b610948565b34801561044057600080fd5b5061020861098b565b34801561045557600080fd5b506000546001600160a01b03166102f3565b34801561047357600080fd5b506004546102f3906001600160a01b031681565b34801561049357600080fd5b506102086104a2366004613424565b61099b565b3480156104b357600080fd5b506002546102f3906001600160a01b031681565b3480156104d357600080fd5b506006546102f3906001600160a01b031681565b6102086104f53660046134f3565b6109b5565b34801561050657600080fd5b5061051a6105153660046133df565b610a35565b60405161022a91906135cb565b34801561053357600080fd5b50610208610542366004613262565b610a48565b61020861055536600461362d565b610af0565b34801561056657600080fd5b50610208610575366004613262565b610b68565b34801561058657600080fd5b506003546102f3906001600160a01b031681565b6102206105a83660046136dd565b610c10565b3480156105b957600080fd5b506102086105c8366004613262565b610cda565b3480156105d957600080fd5b506102086105e8366004613262565b610d82565b6105f5610e12565b6001600160a01b0381166106505760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206164647265737320666f722077656233737461746500000060448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517ffc420e80f6bd9a52d4c6c08c0150bac53c109674615cff8819a71828764ee4f890600090a250565b6106a2610e12565b6106ad838383610e6c565b505050565b600980546106bf906137c9565b80601f01602080910402602001604051908101604052809291908181526020018280546106eb906137c9565b80156107385780601f1061070d57610100808354040283529160200191610738565b820191906000526020600020905b81548152906001019060200180831161071b57829003601f168201915b505050505081565b610748610e12565b610750610f83565b565b600480546040517fabc3bc920000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093526000929091169063abc3bc92906024015b602060405180830381865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e091906137fd565b92915050565b6107ee610e12565b6106ad838383610fd8565b610801610e12565b61080b8282611173565b5050565b600480546040517fd96be1cd0000000000000000000000000000000000000000000000000000000081529182018390526000916001600160a01b039091169063d96be1cd9060240161079f565b600a80546106bf906137c9565b610871610e12565b6001600160a01b0381166108ec5760405162461bcd60e51b8152602060048201526024808201527f496e76616c6964206164647265737320666f722063686172676564506172746960448201527f636c6573000000000000000000000000000000000000000000000000000000006064820152608401610647565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f5ce0e6b7fd36339ee97339831b6c72694ecee88c62aab49919d9cabe0a732e4190600090a250565b61093e610e12565b6107506000611215565b610950610e12565b60088190556040518181527fdb5aafdb29539329e37d4e3ee869bc4031941fd55a5dfc92824fbe34b204e30d9060200160405180910390a150565b610993610e12565b610750611265565b6109a3610e12565b6109af848484846112a8565b50505050565b6109bd611461565b6109c56114bb565b6109cf6000611514565b60006109de86868686866115a2565b9050856001600160a01b0316847f1143d14cf0b7fdb46022761b1a9b421b27c63d51cbf67363a425c415b14a8ad383604051610a1c91815260200190565b60405180910390a350610a2e60018055565b5050505050565b6060610a418383611884565b9392505050565b610a50610e12565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206164647265737320666f72206368617267656453746174656044820152606401610647565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f62ff39aed768a426c7582b6e1062ab2631df1869b2d574e36f8274d2e2b0ab8190600090a250565b610af8611461565b610b006114bb565b610b0a6000611514565b6000610b1885858585611b51565b9050846001600160a01b0316837f1143d14cf0b7fdb46022761b1a9b421b27c63d51cbf67363a425c415b14a8ad383604051610b5691815260200190565b60405180910390a3506109af60018055565b610b70610e12565b6001600160a01b038116610bc65760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206164647265737320666f722070726f746f6e0000000000006044820152606401610647565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fa3d7b0fff2d93a7ba440166a8f7eba4acfe6e000fe19b8218e64264d62ef272690600090a250565b6000610c1a611461565b610c226114bb565b610c2b82611514565b6000610c6a838a8a80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ccc92505050565b9050610c838b8b898989610c7e878a61382c565b612139565b6040805186815260208101869052919350339184917f775e8ef7e6e96ebecce1023e6d6cf38ebecc41d241178408bf9723d407281a52910160405180910390a350610ccd60018055565b9998505050505050505050565b610ce2610e12565b6001600160a01b038116610d385760405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206164647265737320666f72207472656173757279000000006044820152606401610647565b600780546001600160a01b0319166001600160a01b0383169081179091556040517febbf9e77f4905707c811ea2da45f04b959c1132fecd092aae1fe0dac5b176c3290600090a250565b610d8a610e12565b6001600160a01b038116610e065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610647565b610e0f81611215565b50565b6000546001600160a01b031633146107505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610647565b6001600160a01b038316610eae5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1891906137fd565b106106ad57610f316001600160a01b0383168483612691565b816001600160a01b0316836001600160a01b03167f6c9d637297625e945b296ff73a71fcfbd0a9e062652b6491a921c4c60194176b83604051610f7691815260200190565b60405180910390a3505050565b610f8b6126e3565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03831661101a5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa15801561107a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109e919061383f565b6001600160a01b0316036106ad576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906323b872dd90606401600060405180830381600087803b15801561111557600080fd5b505af1158015611129573d6000803e3d6000fd5b5050505080826001600160a01b0316846001600160a01b03167ffefe036cac4ee3a4aca074a81cbcc4376e1484693289078dbec149c890101d5b60405160405180910390a4505050565b6001600160a01b0382166111b55760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b80471061080b576111cf6001600160a01b0383168261273c565b816001600160a01b03167eddb683bb45cd5d0ad8a200c6fae7152b1c236ee90a4a37db692407f5cc38bd8260405161120991815260200190565b60405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61126d611461565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fbb3390565b6001600160a01b0384166112ea5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905281906001600160a01b0385169062fdd58e90604401602060405180830381865afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137291906137fd565b106109af576040517ff242432a0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b1580156113f557600080fd5b505af1158015611409573d6000803e3d6000fd5b5050505081836001600160a01b0316856001600160a01b03167f620337bf89eea2b9ae2657beead83b5fa620452817118348aff96e201d52598b8460405161145391815260200190565b60405180910390a450505050565b600054600160a01b900460ff16156107505760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610647565b60026001540361150d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610647565b6002600155565b600060085411801561153257508060085461152f919061385c565b34105b1561157d576008546040517f562cac4d000000000000000000000000000000000000000000000000000000008152346004820152602481018390526044810191909152606401610647565b6000611589823461382c565b60075490915061080b906001600160a01b03168261273c565b6000806000866001600160a01b0316636352211e876040518263ffffffff1660e01b81526004016115d591815260200190565b602060405180830381865afa1580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611616919061383f565b9050336001600160a01b0382161461165a576040517fdb1453ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060005b87518110156118765760045488516000916001600160a01b031690634dbd2335908b90859081106116935761169361386f565b60200260200101516040518263ffffffff1660e01b81526004016116b991815260200190565b602060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fa919061383f565b90506001600160a01b0381166117105750611864565b6040517fbfe075e0000000000000000000000000000000000000000000000000000000008152600481018b905290955085906001600160a01b0382169063bfe075e09060240160408051808303816000875af1158015611774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117989190613885565b909450925060008390036117b6576117b1818b86612855565b6117c2565b6117c2818b86866128ee565b6040517fcc427bad0000000000000000000000000000000000000000000000000000000081526001600160a01b038d81166004830152602482018c9052891515604483015287169063cc427bad906064016020604051808303816000875af1158015611832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185691906137fd565b611860908861385c565b9650505b8061186e816138b3565b915050611660565b505050505095945050505050565b60048054604051630173927560e21b815291820183905260609160009182916001600160a01b03909116906305ce49d490602401600060405180830381865afa1580156118d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118fd91908101906138cc565b8051909150600081900361192457604051636239226960e11b815260040160405180910390fd5b60008167ffffffffffffffff81111561193f5761193f61346a565b60405190808252806020026020018201604052801561199d57816020015b61198a604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161195d5790505b50905060005b82811015611b465760008482815181106119bf576119bf61386f565b602090810291909101015160048054604051634dbd233560e01b81529182018390529192506000916001600160a01b031690634dbd233590602401602060405180830381865afa158015611a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3b919061383f565b90506001600160a01b038116611a52575050611b34565b809650600080886001600160a01b031663bfe075e08c6040518263ffffffff1660e01b8152600401611a8691815260200190565b60408051808303816000875af1158015611aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac89190613885565b9092509050801515600081611ae757611ae28e8e8661298d565b611aea565b60015b90506040518060600160405280856001600160a01b0316815260200182815260200184815250888881518110611b2257611b2261386f565b60200260200101819052505050505050505b80611b3e816138b3565b9150506119a3565b509695505050505050565b60048054604051630173927560e21b815291820184905260009182916001600160a01b0316906305ce49d490602401600060405180830381865afa158015611b9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bc591908101906138cc565b90508051600003611be957604051636239226960e11b815260040160405180910390fd5b611bf686868684876115a2565b60048054604051630d79f02960e31b81529294506060926001600160a01b0390911691636bcf814891611c2d918991869101613952565b600060405180830381600087803b158015611c4757600080fd5b505af1158015611c5b573d6000803e3d6000fd5b505060048054604051630221567160e01b8152918201899052600060248301526001600160a01b0316925063022156719150604401600060405180830381600087803b158015611caa57600080fd5b505af1158015611cbe573d6000803e3d6000fd5b505050505050949350505050565b600080612710611cde8561014a6139a0565b611ce891906139b7565b60045484519192506001600160a01b03169015801590611d35575060006001600160a01b031684600081518110611d2157611d2161386f565b60200260200101516001600160a01b031614155b156121315781925060018451118015611d7b575060006001600160a01b031684600181518110611d6757611d6761386f565b60200260200101516001600160a01b031614155b1561208c5760028451118015611dbe575060006001600160a01b031684600281518110611daa57611daa61386f565b60200260200101516001600160a01b031614155b15611faf57806001600160a01b0316633cda398e85600081518110611de557611de561386f565b602002602001015161271088601e611dfd91906139a0565b611e0791906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611e4d57600080fd5b505af1158015611e61573d6000803e3d6000fd5b50505050806001600160a01b0316633cda398e85600181518110611e8757611e8761386f565b602002602001015161271088601e611e9f91906139a0565b611ea991906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611eef57600080fd5b505af1158015611f03573d6000803e3d6000fd5b50505050806001600160a01b0316633cda398e85600281518110611f2957611f2961386f565b60200260200101516127108861010e611f4291906139a0565b611f4c91906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611f9257600080fd5b505af1158015611fa6573d6000803e3d6000fd5b5050505061211b565b806001600160a01b0316633cda398e85600081518110611fd157611fd161386f565b602002602001015161271088601e611fe991906139a0565b611ff391906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561203957600080fd5b505af115801561204d573d6000803e3d6000fd5b50505050806001600160a01b0316633cda398e856001815181106120735761207361386f565b60200260200101516127108861012c611f4291906139a0565b806001600160a01b0316633cda398e856000815181106120ae576120ae61386f565b6020026020010151846040518363ffffffff1660e01b81526004016120e89291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050505b600454612131906001600160a01b03168461273c565b505092915050565b60008061217b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a2992505050565b9150600260009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156121cd57600080fd5b505af11580156121e1573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015612231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225591906137fd565b90506000808080808c67ffffffffffffffff8111156122765761227661346a565b60405190808252806020026020018201604052801561229f578160200160208202803683370190505b50905060005b8d8110156125355760008f8f838181106122c1576122c161386f565b9050604002018036038101906122d791906139d9565b905080600001518383815181106122f0576122f061386f565b6020908102919091010152600480548251604051634dbd233560e01b8152928301526000916001600160a01b0390911690634dbd233590602401602060405180830381865afa158015612347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236b919061383f565b90506001600160a01b0381166123b35781516040517f75c357790000000000000000000000000000000000000000000000000000000081526004810191909152602401610647565b80995061271082602001518a6123c991906139a0565b6123d391906139b7565b6002549098506123ed906001600160a01b03168b8a612a96565b6001600160a01b038a16631b22a4f08c336040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044016060604051808303816000875af115801561244a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061246e9190613a28565b9198509650945060008590036124d1576124898b8888612baa565b866001600160a01b03167fe141b0c8fb58749d5af9414a49d94c6236c457ee3c2acee0a206810fbad56a5d876040516124c491815260200190565b60405180910390a2612520565b6124dc8b8887612cd0565b866001600160a01b03167f392b7247a3398d2d55f17e40da2099255e8ce61ee318cbe5cf2a44d70565fe048660405161251791815260200190565b60405180910390a25b5050808061252d906138b3565b9150506122a5565b5060048054604051630d79f02960e31b81526001600160a01b0390911691636bcf814891612567918c91869101613952565b600060405180830381600087803b15801561258157600080fd5b505af1158015612595573d6000803e3d6000fd5b505060048054604051630221567160e01b81529182018c9052602482018d90526001600160a01b0316925063022156719150604401600060405180830381600087803b1580156125e457600080fd5b505af11580156125f8573d6000803e3d6000fd5b505050506126068a89612dec565b6003546001600160a01b03166342842e0e30336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018b9052606401600060405180830381600087803b15801561266857600080fd5b505af115801561267c573d6000803e3d6000fd5b50505050505050505050509695505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526106ad908490612f15565b600054600160a01b900460ff166107505760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610647565b8047101561278c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610647565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127d9576040519150601f19603f3d011682016040523d82523d6000602084013e6127de565b606091505b50509050806106ad5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610647565b6005546003546040517facab923c0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263acab923c926128ac9288929091169087906009908890600401613b03565b60408051808303816000875af11580156128ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190613b49565b6005546003546040517ffe02fb000000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263fe02fb009261294a928992909116908890600a9089908990600190600401613b6d565b6020604051808303816000875af1158015612969573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190613bbc565b6005546040517fe6ea6ce70000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063e6ea6ce7906129de90879087906009908890600401613bd9565b6020604051808303816000875af11580156129fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2191906137fd565b949350505050565b6003546040517f2c0cd5a30000000000000000000000000000000000000000000000000000000081526000916001600160a01b031690632c0cd5a390612a7790309081908790600401613c16565b6020604051808303816000875af11580156107bc573d6000803e3d6000fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612af29190613c4b565b6000604051808303816000865af19150503d8060008114612b2f576040519150601f19603f3d011682016040523d82523d6000602084013e612b34565b606091505b5091509150818015612b5e575080511580612b5e575080806020019051810190612b5e9190613bbc565b610a2e5760405162461bcd60e51b815260206004820152600260248201527f53540000000000000000000000000000000000000000000000000000000000006044820152606401610647565b80600003612c1d576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612bf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1a91906137fd565b90505b600554612c359083906001600160a01b031683612ffd565b6005546003546040517f0bdde2ca0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831692630bdde2ca92612c8d929116908790600990889088903090600401613c67565b6020604051808303816000875af1158015612cac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af91906137fd565b6005546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600160248201529083169063a22cb46590604401600060405180830381600087803b158015612d3757600080fd5b505af1158015612d4b573d6000803e3d6000fd5b50506005546003546040517f3ff956cc0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169450633ff956cc9350612da992909116908790600a9088908890600190600401613cb0565b6020604051808303816000875af1158015612dc8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190613bbc565b813515612e7c576006546003546040517f090003d20000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018490528435604482015291169063090003d290606401600060405180830381600087803b158015612e6357600080fd5b505af1158015612e77573d6000803e3d6000fd5b505050505b60208201351561080b576006546003546040517f907990010000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810184905260208501356044820152911690639079900190606401600060405180830381600087803b158015612ef957600080fd5b505af1158015612f0d573d6000803e3d6000fd5b505050505050565b6000612f6a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661312a9092919063ffffffff16565b9050805160001480612f8b575080806020019051810190612f8b9190613bbc565b6106ad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610647565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b30000000000000000000000000000000000000000000000000000000017905291516000928392908716916130729190613c4b565b6000604051808303816000865af19150503d80600081146130af576040519150601f19603f3d011682016040523d82523d6000602084013e6130b4565b606091505b50915091508180156130de5750805115806130de5750808060200190518101906130de9190613bbc565b610a2e5760405162461bcd60e51b815260206004820152600260248201527f53410000000000000000000000000000000000000000000000000000000000006044820152606401610647565b6060612a21848460008585600080866001600160a01b031685876040516131519190613c4b565b60006040518083038185875af1925050503d806000811461318e576040519150601f19603f3d011682016040523d82523d6000602084013e613193565b606091505b50915091506131a4878383876131af565b979650505050505050565b6060831561321e578251600003613217576001600160a01b0385163b6132175760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610647565b5081612a21565b612a2183838151156132335781518083602001fd5b8060405162461bcd60e51b815260040161064791906133cc565b6001600160a01b0381168114610e0f57600080fd5b60006020828403121561327457600080fd5b8135610a418161324d565b60008083601f84011261329157600080fd5b50813567ffffffffffffffff8111156132a957600080fd5b6020830191508360208285010111156132c157600080fd5b9250929050565b6000806000806000608086880312156132e057600080fd5b85356132eb8161324d565b945060208601356132fb8161324d565b935060408601359250606086013567ffffffffffffffff81111561331e57600080fd5b61332a8882890161327f565b969995985093965092949392505050565b60008060006060848603121561335057600080fd5b833561335b8161324d565b9250602084013561336b8161324d565b929592945050506040919091013590565b60005b8381101561339757818101518382015260200161337f565b50506000910152565b600081518084526133b881602086016020860161337c565b601f01601f19169290920160200192915050565b602081526000610a4160208301846133a0565b600080604083850312156133f257600080fd5b82356133fd8161324d565b946020939093013593505050565b60006020828403121561341d57600080fd5b5035919050565b6000806000806080858703121561343a57600080fd5b84356134458161324d565b935060208501356134558161324d565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a9576134a961346a565b604052919050565b600067ffffffffffffffff8211156134cb576134cb61346a565b5060051b60200190565b8015158114610e0f57600080fd5b80356134ee816134d5565b919050565b600080600080600060a0868803121561350b57600080fd5b85356135168161324d565b94506020868101356135278161324d565b945060408701359350606087013567ffffffffffffffff81111561354a57600080fd5b8701601f8101891361355b57600080fd5b803561356e613569826134b1565b613480565b81815260059190911b8201830190838101908b83111561358d57600080fd5b928401925b828410156135ab57833582529284019290840190613592565b80965050505050506135bf608087016134e3565b90509295509295909350565b602080825282518282018190526000919060409081850190868401855b8281101561362057815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016135e8565b5091979650505050505050565b6000806000806080858703121561364357600080fd5b843561364e8161324d565b9350602085013561365e8161324d565b9250604085013591506060850135613675816134d5565b939692955090935050565b60008083601f84011261369257600080fd5b50813567ffffffffffffffff8111156136aa57600080fd5b6020830191508360208260051b85010111156132c157600080fd5b6000604082840312156136d757600080fd5b50919050565b600080600080600080600080600060e08a8c0312156136fb57600080fd5b893567ffffffffffffffff8082111561371357600080fd5b818c0191508c601f83011261372757600080fd5b81358181111561373657600080fd5b8d60208260061b850101111561374b57600080fd5b60209283019b509950908b0135908082111561376657600080fd5b6137728d838e01613680565b909950975060408c013591508082111561378b57600080fd5b506137988c828d0161327f565b90965094506137ac90508b60608c016136c5565b925060a08a0135915060c08a013590509295985092959850929598565b600181811c908216806137dd57607f821691505b6020821081036136d757634e487b7160e01b600052602260045260246000fd5b60006020828403121561380f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107e0576107e0613816565b60006020828403121561385157600080fd5b8151610a418161324d565b808201808211156107e0576107e0613816565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561389857600080fd5b82516138a38161324d565b6020939093015192949293505050565b6000600182016138c5576138c5613816565b5060010190565b600060208083850312156138df57600080fd5b825167ffffffffffffffff8111156138f657600080fd5b8301601f8101851361390757600080fd5b8051613915613569826134b1565b81815260059190911b8201830190838101908783111561393457600080fd5b928401925b828410156131a457835182529284019290840190613939565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561399357845183529383019391830191600101613977565b5090979650505050505050565b80820281158282048414176107e0576107e0613816565b6000826139d457634e487b7160e01b600052601260045260246000fd5b500490565b6000604082840312156139eb57600080fd5b6040516040810181811067ffffffffffffffff82111715613a0e57613a0e61346a565b604052823581526020928301359281019290925250919050565b600080600060608486031215613a3d57600080fd5b8351613a488161324d565b602085015160409095015190969495509392505050565b8054600090600181811c9080831680613a7957607f831692505b60208084108203613a9a57634e487b7160e01b600052602260045260246000fd5b83885260208801828015613ab55760018114613acb57613af6565b60ff198716825285151560051b82019750613af6565b60008981526020902060005b87811015613af057815484820152908601908401613ad7565b83019850505b5050505050505092915050565b60006001600160a01b038088168352808716602084015285604084015260a06060840152613b3460a0840186613a5f565b91508084166080840152509695505050505050565b60008060408385031215613b5c57600080fd5b505080516020909101519092909150565b60006001600160a01b03808a168352808916602084015287604084015260e06060840152613b9e60e0840188613a5f565b951660808301525060a081019290925260c090910152949350505050565b600060208284031215613bce57600080fd5b8151610a41816134d5565b60006001600160a01b03808716835285602084015260806040840152613c026080840186613a5f565b915080841660608401525095945050505050565b60006001600160a01b03808616835280851660208401525060606040830152613c4260608301846133a0565b95945050505050565b60008251613c5d81846020870161337c565b9190910192915050565b60006001600160a01b03808916835287602084015260c06040840152613c9060c0840188613a5f565b9581166060840152608083019490945250911660a0909101529392505050565b60006001600160a01b03808916835287602084015260c06040840152613cd960c0840188613a5f565b9516606083015250608081019290925260a090910152939250505056fea2646970667358221220568f5fc4219fb4b0ec6475317c201e2255053fae580bbbceb8dfb88dbde9a7b864736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101dc5760003560e01c8063787dce3d11610102578063b4540d7411610095578063dafb944911610064578063dafb94491461057a578063edd777b31461059a578063f0f44260146105ad578063f2fde38b146105cd57600080fd5b8063b4540d74146104fa578063b7683e9314610527578063b76c375314610547578063bd3266161461055a57600080fd5b8063a0edb48b116100d1578063a0edb48b14610487578063a1764595146104a7578063a8499fdf146104c7578063aac561ca146104e757600080fd5b8063787dce3d146104145780638456cb59146104345780638da5cb5b146104495780639efca9be1461046757600080fd5b80633f656fb81161017a5780635c975abb116101495780635c975abb146103a0578063609b8813146103ca5780636e5559fd146103df578063715018a6146103ff57600080fd5b80633f656fb8146103205780634025feb214610340578063522f681514610360578063524f389d1461038057600080fd5b80631593dee1116101b65780631593dee114610291578063252c9c94146102b157806330219ef4146102d35780633f4ba83a1461030b57600080fd5b806307abbbf9146101e8578063108e4db71461020a578063150b7a021461023357600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b50610208610203366004613262565b6105ed565b005b34801561021657600080fd5b5061022060085481565b6040519081526020015b60405180910390f35b34801561023f57600080fd5b5061027861024e3660046132c8565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040516001600160e01b0319909116815260200161022a565b34801561029d57600080fd5b506102086102ac36600461333b565b61069a565b3480156102bd57600080fd5b506102c66106b2565b60405161022a91906133cc565b3480156102df57600080fd5b506005546102f3906001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b34801561031757600080fd5b50610208610740565b34801561032c57600080fd5b5061022061033b366004613262565b610752565b34801561034c57600080fd5b5061020861035b36600461333b565b6107e6565b34801561036c57600080fd5b5061020861037b3660046133df565b6107f9565b34801561038c57600080fd5b5061022061039b36600461340b565b61080f565b3480156103ac57600080fd5b50600054600160a01b900460ff16604051901515815260200161022a565b3480156103d657600080fd5b506102c661085c565b3480156103eb57600080fd5b506102086103fa366004613262565b610869565b34801561040b57600080fd5b50610208610936565b34801561042057600080fd5b5061020861042f36600461340b565b610948565b34801561044057600080fd5b5061020861098b565b34801561045557600080fd5b506000546001600160a01b03166102f3565b34801561047357600080fd5b506004546102f3906001600160a01b031681565b34801561049357600080fd5b506102086104a2366004613424565b61099b565b3480156104b357600080fd5b506002546102f3906001600160a01b031681565b3480156104d357600080fd5b506006546102f3906001600160a01b031681565b6102086104f53660046134f3565b6109b5565b34801561050657600080fd5b5061051a6105153660046133df565b610a35565b60405161022a91906135cb565b34801561053357600080fd5b50610208610542366004613262565b610a48565b61020861055536600461362d565b610af0565b34801561056657600080fd5b50610208610575366004613262565b610b68565b34801561058657600080fd5b506003546102f3906001600160a01b031681565b6102206105a83660046136dd565b610c10565b3480156105b957600080fd5b506102086105c8366004613262565b610cda565b3480156105d957600080fd5b506102086105e8366004613262565b610d82565b6105f5610e12565b6001600160a01b0381166106505760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206164647265737320666f722077656233737461746500000060448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517ffc420e80f6bd9a52d4c6c08c0150bac53c109674615cff8819a71828764ee4f890600090a250565b6106a2610e12565b6106ad838383610e6c565b505050565b600980546106bf906137c9565b80601f01602080910402602001604051908101604052809291908181526020018280546106eb906137c9565b80156107385780601f1061070d57610100808354040283529160200191610738565b820191906000526020600020905b81548152906001019060200180831161071b57829003601f168201915b505050505081565b610748610e12565b610750610f83565b565b600480546040517fabc3bc920000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093526000929091169063abc3bc92906024015b602060405180830381865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e091906137fd565b92915050565b6107ee610e12565b6106ad838383610fd8565b610801610e12565b61080b8282611173565b5050565b600480546040517fd96be1cd0000000000000000000000000000000000000000000000000000000081529182018390526000916001600160a01b039091169063d96be1cd9060240161079f565b600a80546106bf906137c9565b610871610e12565b6001600160a01b0381166108ec5760405162461bcd60e51b8152602060048201526024808201527f496e76616c6964206164647265737320666f722063686172676564506172746960448201527f636c6573000000000000000000000000000000000000000000000000000000006064820152608401610647565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f5ce0e6b7fd36339ee97339831b6c72694ecee88c62aab49919d9cabe0a732e4190600090a250565b61093e610e12565b6107506000611215565b610950610e12565b60088190556040518181527fdb5aafdb29539329e37d4e3ee869bc4031941fd55a5dfc92824fbe34b204e30d9060200160405180910390a150565b610993610e12565b610750611265565b6109a3610e12565b6109af848484846112a8565b50505050565b6109bd611461565b6109c56114bb565b6109cf6000611514565b60006109de86868686866115a2565b9050856001600160a01b0316847f1143d14cf0b7fdb46022761b1a9b421b27c63d51cbf67363a425c415b14a8ad383604051610a1c91815260200190565b60405180910390a350610a2e60018055565b5050505050565b6060610a418383611884565b9392505050565b610a50610e12565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206164647265737320666f72206368617267656453746174656044820152606401610647565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f62ff39aed768a426c7582b6e1062ab2631df1869b2d574e36f8274d2e2b0ab8190600090a250565b610af8611461565b610b006114bb565b610b0a6000611514565b6000610b1885858585611b51565b9050846001600160a01b0316837f1143d14cf0b7fdb46022761b1a9b421b27c63d51cbf67363a425c415b14a8ad383604051610b5691815260200190565b60405180910390a3506109af60018055565b610b70610e12565b6001600160a01b038116610bc65760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206164647265737320666f722070726f746f6e0000000000006044820152606401610647565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fa3d7b0fff2d93a7ba440166a8f7eba4acfe6e000fe19b8218e64264d62ef272690600090a250565b6000610c1a611461565b610c226114bb565b610c2b82611514565b6000610c6a838a8a80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ccc92505050565b9050610c838b8b898989610c7e878a61382c565b612139565b6040805186815260208101869052919350339184917f775e8ef7e6e96ebecce1023e6d6cf38ebecc41d241178408bf9723d407281a52910160405180910390a350610ccd60018055565b9998505050505050505050565b610ce2610e12565b6001600160a01b038116610d385760405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206164647265737320666f72207472656173757279000000006044820152606401610647565b600780546001600160a01b0319166001600160a01b0383169081179091556040517febbf9e77f4905707c811ea2da45f04b959c1132fecd092aae1fe0dac5b176c3290600090a250565b610d8a610e12565b6001600160a01b038116610e065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610647565b610e0f81611215565b50565b6000546001600160a01b031633146107505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610647565b6001600160a01b038316610eae5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1891906137fd565b106106ad57610f316001600160a01b0383168483612691565b816001600160a01b0316836001600160a01b03167f6c9d637297625e945b296ff73a71fcfbd0a9e062652b6491a921c4c60194176b83604051610f7691815260200190565b60405180910390a3505050565b610f8b6126e3565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03831661101a5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b03841690636352211e90602401602060405180830381865afa15801561107a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109e919061383f565b6001600160a01b0316036106ad576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906323b872dd90606401600060405180830381600087803b15801561111557600080fd5b505af1158015611129573d6000803e3d6000fd5b5050505080826001600160a01b0316846001600160a01b03167ffefe036cac4ee3a4aca074a81cbcc4376e1484693289078dbec149c890101d5b60405160405180910390a4505050565b6001600160a01b0382166111b55760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b80471061080b576111cf6001600160a01b0383168261273c565b816001600160a01b03167eddb683bb45cd5d0ad8a200c6fae7152b1c236ee90a4a37db692407f5cc38bd8260405161120991815260200190565b60405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61126d611461565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fbb3390565b6001600160a01b0384166112ea5760405162461bcd60e51b81526020600482015260096024820152684248503a452d34303360b81b6044820152606401610647565b6040517efdd58e0000000000000000000000000000000000000000000000000000000081523060048201526024810183905281906001600160a01b0385169062fdd58e90604401602060405180830381865afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137291906137fd565b106109af576040517ff242432a0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038581166024830152604482018490526064820183905260a06084830152600060a483015284169063f242432a9060c401600060405180830381600087803b1580156113f557600080fd5b505af1158015611409573d6000803e3d6000fd5b5050505081836001600160a01b0316856001600160a01b03167f620337bf89eea2b9ae2657beead83b5fa620452817118348aff96e201d52598b8460405161145391815260200190565b60405180910390a450505050565b600054600160a01b900460ff16156107505760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610647565b60026001540361150d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610647565b6002600155565b600060085411801561153257508060085461152f919061385c565b34105b1561157d576008546040517f562cac4d000000000000000000000000000000000000000000000000000000008152346004820152602481018390526044810191909152606401610647565b6000611589823461382c565b60075490915061080b906001600160a01b03168261273c565b6000806000866001600160a01b0316636352211e876040518263ffffffff1660e01b81526004016115d591815260200190565b602060405180830381865afa1580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611616919061383f565b9050336001600160a01b0382161461165a576040517fdb1453ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060005b87518110156118765760045488516000916001600160a01b031690634dbd2335908b90859081106116935761169361386f565b60200260200101516040518263ffffffff1660e01b81526004016116b991815260200190565b602060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fa919061383f565b90506001600160a01b0381166117105750611864565b6040517fbfe075e0000000000000000000000000000000000000000000000000000000008152600481018b905290955085906001600160a01b0382169063bfe075e09060240160408051808303816000875af1158015611774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117989190613885565b909450925060008390036117b6576117b1818b86612855565b6117c2565b6117c2818b86866128ee565b6040517fcc427bad0000000000000000000000000000000000000000000000000000000081526001600160a01b038d81166004830152602482018c9052891515604483015287169063cc427bad906064016020604051808303816000875af1158015611832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185691906137fd565b611860908861385c565b9650505b8061186e816138b3565b915050611660565b505050505095945050505050565b60048054604051630173927560e21b815291820183905260609160009182916001600160a01b03909116906305ce49d490602401600060405180830381865afa1580156118d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118fd91908101906138cc565b8051909150600081900361192457604051636239226960e11b815260040160405180910390fd5b60008167ffffffffffffffff81111561193f5761193f61346a565b60405190808252806020026020018201604052801561199d57816020015b61198a604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b81526020019060019003908161195d5790505b50905060005b82811015611b465760008482815181106119bf576119bf61386f565b602090810291909101015160048054604051634dbd233560e01b81529182018390529192506000916001600160a01b031690634dbd233590602401602060405180830381865afa158015611a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3b919061383f565b90506001600160a01b038116611a52575050611b34565b809650600080886001600160a01b031663bfe075e08c6040518263ffffffff1660e01b8152600401611a8691815260200190565b60408051808303816000875af1158015611aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac89190613885565b9092509050801515600081611ae757611ae28e8e8661298d565b611aea565b60015b90506040518060600160405280856001600160a01b0316815260200182815260200184815250888881518110611b2257611b2261386f565b60200260200101819052505050505050505b80611b3e816138b3565b9150506119a3565b509695505050505050565b60048054604051630173927560e21b815291820184905260009182916001600160a01b0316906305ce49d490602401600060405180830381865afa158015611b9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bc591908101906138cc565b90508051600003611be957604051636239226960e11b815260040160405180910390fd5b611bf686868684876115a2565b60048054604051630d79f02960e31b81529294506060926001600160a01b0390911691636bcf814891611c2d918991869101613952565b600060405180830381600087803b158015611c4757600080fd5b505af1158015611c5b573d6000803e3d6000fd5b505060048054604051630221567160e01b8152918201899052600060248301526001600160a01b0316925063022156719150604401600060405180830381600087803b158015611caa57600080fd5b505af1158015611cbe573d6000803e3d6000fd5b505050505050949350505050565b600080612710611cde8561014a6139a0565b611ce891906139b7565b60045484519192506001600160a01b03169015801590611d35575060006001600160a01b031684600081518110611d2157611d2161386f565b60200260200101516001600160a01b031614155b156121315781925060018451118015611d7b575060006001600160a01b031684600181518110611d6757611d6761386f565b60200260200101516001600160a01b031614155b1561208c5760028451118015611dbe575060006001600160a01b031684600281518110611daa57611daa61386f565b60200260200101516001600160a01b031614155b15611faf57806001600160a01b0316633cda398e85600081518110611de557611de561386f565b602002602001015161271088601e611dfd91906139a0565b611e0791906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611e4d57600080fd5b505af1158015611e61573d6000803e3d6000fd5b50505050806001600160a01b0316633cda398e85600181518110611e8757611e8761386f565b602002602001015161271088601e611e9f91906139a0565b611ea991906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611eef57600080fd5b505af1158015611f03573d6000803e3d6000fd5b50505050806001600160a01b0316633cda398e85600281518110611f2957611f2961386f565b60200260200101516127108861010e611f4291906139a0565b611f4c91906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611f9257600080fd5b505af1158015611fa6573d6000803e3d6000fd5b5050505061211b565b806001600160a01b0316633cda398e85600081518110611fd157611fd161386f565b602002602001015161271088601e611fe991906139a0565b611ff391906139b7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561203957600080fd5b505af115801561204d573d6000803e3d6000fd5b50505050806001600160a01b0316633cda398e856001815181106120735761207361386f565b60200260200101516127108861012c611f4291906139a0565b806001600160a01b0316633cda398e856000815181106120ae576120ae61386f565b6020026020010151846040518363ffffffff1660e01b81526004016120e89291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050505b600454612131906001600160a01b03168461273c565b505092915050565b60008061217b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a2992505050565b9150600260009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156121cd57600080fd5b505af11580156121e1573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600094506001600160a01b0390911692506370a082319150602401602060405180830381865afa158015612231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225591906137fd565b90506000808080808c67ffffffffffffffff8111156122765761227661346a565b60405190808252806020026020018201604052801561229f578160200160208202803683370190505b50905060005b8d8110156125355760008f8f838181106122c1576122c161386f565b9050604002018036038101906122d791906139d9565b905080600001518383815181106122f0576122f061386f565b6020908102919091010152600480548251604051634dbd233560e01b8152928301526000916001600160a01b0390911690634dbd233590602401602060405180830381865afa158015612347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236b919061383f565b90506001600160a01b0381166123b35781516040517f75c357790000000000000000000000000000000000000000000000000000000081526004810191909152602401610647565b80995061271082602001518a6123c991906139a0565b6123d391906139b7565b6002549098506123ed906001600160a01b03168b8a612a96565b6001600160a01b038a16631b22a4f08c336040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044016060604051808303816000875af115801561244a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061246e9190613a28565b9198509650945060008590036124d1576124898b8888612baa565b866001600160a01b03167fe141b0c8fb58749d5af9414a49d94c6236c457ee3c2acee0a206810fbad56a5d876040516124c491815260200190565b60405180910390a2612520565b6124dc8b8887612cd0565b866001600160a01b03167f392b7247a3398d2d55f17e40da2099255e8ce61ee318cbe5cf2a44d70565fe048660405161251791815260200190565b60405180910390a25b5050808061252d906138b3565b9150506122a5565b5060048054604051630d79f02960e31b81526001600160a01b0390911691636bcf814891612567918c91869101613952565b600060405180830381600087803b15801561258157600080fd5b505af1158015612595573d6000803e3d6000fd5b505060048054604051630221567160e01b81529182018c9052602482018d90526001600160a01b0316925063022156719150604401600060405180830381600087803b1580156125e457600080fd5b505af11580156125f8573d6000803e3d6000fd5b505050506126068a89612dec565b6003546001600160a01b03166342842e0e30336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018b9052606401600060405180830381600087803b15801561266857600080fd5b505af115801561267c573d6000803e3d6000fd5b50505050505050505050509695505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526106ad908490612f15565b600054600160a01b900460ff166107505760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610647565b8047101561278c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610647565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127d9576040519150601f19603f3d011682016040523d82523d6000602084013e6127de565b606091505b50509050806106ad5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610647565b6005546003546040517facab923c0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263acab923c926128ac9288929091169087906009908890600401613b03565b60408051808303816000875af11580156128ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190613b49565b6005546003546040517ffe02fb000000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263fe02fb009261294a928992909116908890600a9089908990600190600401613b6d565b6020604051808303816000875af1158015612969573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190613bbc565b6005546040517fe6ea6ce70000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063e6ea6ce7906129de90879087906009908890600401613bd9565b6020604051808303816000875af11580156129fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2191906137fd565b949350505050565b6003546040517f2c0cd5a30000000000000000000000000000000000000000000000000000000081526000916001600160a01b031690632c0cd5a390612a7790309081908790600401613c16565b6020604051808303816000875af11580156107bc573d6000803e3d6000fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612af29190613c4b565b6000604051808303816000865af19150503d8060008114612b2f576040519150601f19603f3d011682016040523d82523d6000602084013e612b34565b606091505b5091509150818015612b5e575080511580612b5e575080806020019051810190612b5e9190613bbc565b610a2e5760405162461bcd60e51b815260206004820152600260248201527f53540000000000000000000000000000000000000000000000000000000000006044820152606401610647565b80600003612c1d576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612bf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c1a91906137fd565b90505b600554612c359083906001600160a01b031683612ffd565b6005546003546040517f0bdde2ca0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831692630bdde2ca92612c8d929116908790600990889088903090600401613c67565b6020604051808303816000875af1158015612cac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af91906137fd565b6005546040517fa22cb4650000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152600160248201529083169063a22cb46590604401600060405180830381600087803b158015612d3757600080fd5b505af1158015612d4b573d6000803e3d6000fd5b50506005546003546040517f3ff956cc0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169450633ff956cc9350612da992909116908790600a9088908890600190600401613cb0565b6020604051808303816000875af1158015612dc8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190613bbc565b813515612e7c576006546003546040517f090003d20000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018490528435604482015291169063090003d290606401600060405180830381600087803b158015612e6357600080fd5b505af1158015612e77573d6000803e3d6000fd5b505050505b60208201351561080b576006546003546040517f907990010000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810184905260208501356044820152911690639079900190606401600060405180830381600087803b158015612ef957600080fd5b505af1158015612f0d573d6000803e3d6000fd5b505050505050565b6000612f6a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661312a9092919063ffffffff16565b9050805160001480612f8b575080806020019051810190612f8b9190613bbc565b6106ad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610647565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b30000000000000000000000000000000000000000000000000000000017905291516000928392908716916130729190613c4b565b6000604051808303816000865af19150503d80600081146130af576040519150601f19603f3d011682016040523d82523d6000602084013e6130b4565b606091505b50915091508180156130de5750805115806130de5750808060200190518101906130de9190613bbc565b610a2e5760405162461bcd60e51b815260206004820152600260248201527f53410000000000000000000000000000000000000000000000000000000000006044820152606401610647565b6060612a21848460008585600080866001600160a01b031685876040516131519190613c4b565b60006040518083038185875af1925050503d806000811461318e576040519150601f19603f3d011682016040523d82523d6000602084013e613193565b606091505b50915091506131a4878383876131af565b979650505050505050565b6060831561321e578251600003613217576001600160a01b0385163b6132175760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610647565b5081612a21565b612a2183838151156132335781518083602001fd5b8060405162461bcd60e51b815260040161064791906133cc565b6001600160a01b0381168114610e0f57600080fd5b60006020828403121561327457600080fd5b8135610a418161324d565b60008083601f84011261329157600080fd5b50813567ffffffffffffffff8111156132a957600080fd5b6020830191508360208285010111156132c157600080fd5b9250929050565b6000806000806000608086880312156132e057600080fd5b85356132eb8161324d565b945060208601356132fb8161324d565b935060408601359250606086013567ffffffffffffffff81111561331e57600080fd5b61332a8882890161327f565b969995985093965092949392505050565b60008060006060848603121561335057600080fd5b833561335b8161324d565b9250602084013561336b8161324d565b929592945050506040919091013590565b60005b8381101561339757818101518382015260200161337f565b50506000910152565b600081518084526133b881602086016020860161337c565b601f01601f19169290920160200192915050565b602081526000610a4160208301846133a0565b600080604083850312156133f257600080fd5b82356133fd8161324d565b946020939093013593505050565b60006020828403121561341d57600080fd5b5035919050565b6000806000806080858703121561343a57600080fd5b84356134458161324d565b935060208501356134558161324d565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a9576134a961346a565b604052919050565b600067ffffffffffffffff8211156134cb576134cb61346a565b5060051b60200190565b8015158114610e0f57600080fd5b80356134ee816134d5565b919050565b600080600080600060a0868803121561350b57600080fd5b85356135168161324d565b94506020868101356135278161324d565b945060408701359350606087013567ffffffffffffffff81111561354a57600080fd5b8701601f8101891361355b57600080fd5b803561356e613569826134b1565b613480565b81815260059190911b8201830190838101908b83111561358d57600080fd5b928401925b828410156135ab57833582529284019290840190613592565b80965050505050506135bf608087016134e3565b90509295509295909350565b602080825282518282018190526000919060409081850190868401855b8281101561362057815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016135e8565b5091979650505050505050565b6000806000806080858703121561364357600080fd5b843561364e8161324d565b9350602085013561365e8161324d565b9250604085013591506060850135613675816134d5565b939692955090935050565b60008083601f84011261369257600080fd5b50813567ffffffffffffffff8111156136aa57600080fd5b6020830191508360208260051b85010111156132c157600080fd5b6000604082840312156136d757600080fd5b50919050565b600080600080600080600080600060e08a8c0312156136fb57600080fd5b893567ffffffffffffffff8082111561371357600080fd5b818c0191508c601f83011261372757600080fd5b81358181111561373657600080fd5b8d60208260061b850101111561374b57600080fd5b60209283019b509950908b0135908082111561376657600080fd5b6137728d838e01613680565b909950975060408c013591508082111561378b57600080fd5b506137988c828d0161327f565b90965094506137ac90508b60608c016136c5565b925060a08a0135915060c08a013590509295985092959850929598565b600181811c908216806137dd57607f821691505b6020821081036136d757634e487b7160e01b600052602260045260246000fd5b60006020828403121561380f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107e0576107e0613816565b60006020828403121561385157600080fd5b8151610a418161324d565b808201808211156107e0576107e0613816565b634e487b7160e01b600052603260045260246000fd5b6000806040838503121561389857600080fd5b82516138a38161324d565b6020939093015192949293505050565b6000600182016138c5576138c5613816565b5060010190565b600060208083850312156138df57600080fd5b825167ffffffffffffffff8111156138f657600080fd5b8301601f8101851361390757600080fd5b8051613915613569826134b1565b81815260059190911b8201830190838101908783111561393457600080fd5b928401925b828410156131a457835182529284019290840190613939565b6000604082018483526020604081850152818551808452606086019150828701935060005b8181101561399357845183529383019391830191600101613977565b5090979650505050505050565b80820281158282048414176107e0576107e0613816565b6000826139d457634e487b7160e01b600052601260045260246000fd5b500490565b6000604082840312156139eb57600080fd5b6040516040810181811067ffffffffffffffff82111715613a0e57613a0e61346a565b604052823581526020928301359281019290925250919050565b600080600060608486031215613a3d57600080fd5b8351613a488161324d565b602085015160409095015190969495509392505050565b8054600090600181811c9080831680613a7957607f831692505b60208084108203613a9a57634e487b7160e01b600052602260045260246000fd5b83885260208801828015613ab55760018114613acb57613af6565b60ff198716825285151560051b82019750613af6565b60008981526020902060005b87811015613af057815484820152908601908401613ad7565b83019850505b5050505050505092915050565b60006001600160a01b038088168352808716602084015285604084015260a06060840152613b3460a0840186613a5f565b91508084166080840152509695505050505050565b60008060408385031215613b5c57600080fd5b505080516020909101519092909150565b60006001600160a01b03808a168352808916602084015287604084015260e06060840152613b9e60e0840188613a5f565b951660808301525060a081019290925260c090910152949350505050565b600060208284031215613bce57600080fd5b8151610a41816134d5565b60006001600160a01b03808716835285602084015260806040840152613c026080840186613a5f565b915080841660608401525095945050505050565b60006001600160a01b03808616835280851660208401525060606040830152613c4260608301846133a0565b95945050505050565b60008251613c5d81846020870161337c565b9190910192915050565b60006001600160a01b03808916835287602084015260c06040840152613c9060c0840188613a5f565b9581166060840152608083019490945250911660a0909101529392505050565b60006001600160a01b03808916835287602084015260c06040840152613cd960c0840188613a5f565b9516606083015250608081019290925260a090910152939250505056fea2646970667358221220568f5fc4219fb4b0ec6475317c201e2255053fae580bbbceb8dfb88dbde9a7b864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setChargedParticles(address)": {
        "details": "Setup the ChargedParticles Interface"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 231,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1654,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_weth",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1656,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_proton",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1658,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_web3state",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1660,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_chargedParticles",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1662,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_chargedState",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 1664,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_treasury",
        "offset": 0,
        "slot": "7",
        "type": "t_address_payable"
      },
      {
        "astId": 1666,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_protocolFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1669,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_cpWalletManager",
        "offset": 0,
        "slot": "9",
        "type": "t_string_storage"
      },
      {
        "astId": 1672,
        "contract": "contracts/Web3PacksV2.sol:Web3PacksV2",
        "label": "_cpBasketManager",
        "offset": 0,
        "slot": "10",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}